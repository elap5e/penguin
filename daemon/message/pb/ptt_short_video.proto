syntax = "proto3";

option go_package = "github.com/elap5e/penguin/daemon/message/pb";

// Message generated by proto-message-gen. DO NOT EDIT.
// source: pttcenterservice.PttShortVideo
//
// PttShortVideo is the message type for the PttShortVideo.
message PttShortVideo {
  // DataHole is the message type for the DataHole.
  message DataHole {
    uint64 begin = 1; // uint64_begin
    uint64 end   = 2; // uint64_end
  }
  // ExtensionReq is the message type for the ExtensionReq.
  message ExtensionReq {
    uint32 sub_busi_type = 1; // uint32_sub_busi_type
    uint32 user_cnt      = 2; // uint32_user_cnt
  }
  // PttShortVideoAddr is the message type for the PttShortVideoAddr.
  message PttShortVideoAddr {
    uint32 host_type          = 1; // uint32_host_type
    repeated string host      = 10; // rpt_str_host
    string url_args           = 11; // str_url_args
    repeated string host_ipv6 = 21; // rpt_str_host_ipv6
    repeated string domain    = 22; // rpt_str_domain
  }
  // PttShortVideoDeleteReq is the message type for the PttShortVideoDeleteReq.
  message PttShortVideoDeleteReq {
    uint64 fromuin       = 1; // uint64_fromuin
    uint64 touin         = 2; // uint64_touin
    uint32 chat_type     = 3; // uint32_chat_type
    uint32 client_type   = 4; // uint32_client_type
    string fileid        = 5; // str_fileid
    uint64 group_code    = 6; // uint64_group_code
    uint32 agent_type    = 7; // uint32_agent_type
    bytes file_md5       = 8; // bytes_file_md5
    uint32 business_type = 9; // uint32_business_type
  }
  // PttShortVideoDeleteResp is the message type for the PttShortVideoDeleteResp.
  message PttShortVideoDeleteResp {
    int32 ret_code = 1; // int32_ret_code
    string ret_msg = 2; // str_ret_msg
  }
  // PttShortVideoDownloadReq is the message type for the PttShortVideoDownloadReq.
  message PttShortVideoDownloadReq {
    uint64 fromuin                       = 1; // uint64_fromuin
    uint64 touin                         = 2; // uint64_touin
    uint32 chat_type                     = 3; // uint32_chat_type
    uint32 client_type                   = 4; // uint32_client_type
    string fileid                        = 5; // str_fileid
    uint64 group_code                    = 6; // uint64_group_code
    uint32 agent_type                    = 7; // uint32_agent_type
    bytes file_md5                       = 8; // bytes_file_md5
    uint32 business_type                 = 9; // uint32_business_type
    uint32 file_type                     = 10; // uint32_file_type
    uint32 down_type                     = 11; // uint32_down_type
    uint32 scene_type                    = 12; // uint32_scene_type
    uint32 need_inner_addr               = 13; // uint32_need_inner_addr
    uint32 req_transfer_type             = 14; // uint32_req_transfer_type
    uint32 req_host_type                 = 15; // uint32_req_host_type
    uint32 flag_support_large_size       = 20; // uint32_flag_support_large_size
    uint32 flag_client_quic_proto_enable = 30; // uint32_flag_client_quic_proto_enable
  }
  // PttShortVideoDownloadResp is the message type for the PttShortVideoDownloadResp.
  message PttShortVideoDownloadResp {
    int32 ret_code                                    = 1; // int32_ret_code
    string ret_msg                                    = 2; // str_ret_msg
    repeated PttShortVideoIpList same_area_out_addr   = 3; // rpt_same_area_out_addr
    repeated PttShortVideoIpList diff_area_out_addr   = 4; // rpt_diff_area_out_addr
    bytes downloadkey                                 = 5; // bytes_downloadkey
    bytes file_md5                                    = 6; // bytes_file_md5
    repeated PttShortVideoIpList same_area_inner_addr = 7; // rpt_same_area_inner_addr
    repeated PttShortVideoIpList diff_area_inner_addr = 8; // rpt_diff_area_inner_addr
    PttShortVideoAddr msg_download_addr               = 9; // msg_download_addr
    bytes encrypt_key                                 = 10; // bytes_encrypt_key
    uint32 flag_server_quic_proto_enable              = 30; // uint32_flag_server_quic_proto_enable
    bytes server_quic_para                            = 31; // bytes_server_quic_para
  }
  // PttShortVideoFileInfo is the message type for the PttShortVideoFileInfo.
  message PttShortVideoFileInfo {
    string file_name          = 1; // str_file_name
    bytes file_md5            = 2; // bytes_file_md5
    bytes thumb_file_md5      = 3; // bytes_thumb_file_md5
    uint64 file_size          = 4; // uint64_file_size
    uint32 file_res_length    = 5; // uint32_file_res_length
    uint32 file_res_width     = 6; // uint32_file_res_width
    uint32 file_format        = 7; // uint32_file_format
    uint32 file_time          = 8; // uint32_file_time
    uint64 thumb_file_size    = 9; // uint64_thumb_file_size
    bytes decrypt_video_md5   = 10; // bytes_decrypt_video_md5
    uint64 decrypt_file_size  = 11; // uint64_decrypt_file_size
    bytes decrypt_thumb_md5   = 12; // bytes_decrypt_thumb_md5
    uint64 decrypt_thumb_size = 13; // uint64_decrypt_thumb_size
  }
  // PttShortVideoIpList is the message type for the PttShortVideoIpList.
  message PttShortVideoIpList {
    uint32 ip   = 1; // uint32_ip
    uint32 port = 2; // uint32_port
  }
  // PttShortVideoRetweetReq is the message type for the PttShortVideoRetweetReq.
  message PttShortVideoRetweetReq {
    uint64 from_uin                                 = 1; // uint64_from_uin
    uint64 to_uin                                   = 2; // uint64_to_uin
    uint32 from_chat_type                           = 3; // uint32_from_chat_type
    uint32 to_chat_type                             = 4; // uint32_to_chat_type
    uint32 from_busi_type                           = 5; // uint32_from_busi_type
    uint32 to_busi_type                             = 6; // uint32_to_busi_type
    uint32 client_type                              = 7; // uint32_client_type
    PttShortVideoFileInfo msg_PttShortVideoFileInfo = 8; // msg_PttShortVideoFileInfo
    uint32 agent_type                               = 9; // uint32_agent_type
    string fileid                                   = 10; // str_fileid
    uint64 group_code                               = 11; // uint64_group_code
    uint32 flag_support_large_size                  = 20; // uint32_flag_support_large_size
  }
  // PttShortVideoRetweetResp is the message type for the PttShortVideoRetweetResp.
  message PttShortVideoRetweetResp {
    int32 ret_code                                    = 1; // int32_ret_code
    string ret_msg                                    = 2; // str_ret_msg
    repeated PttShortVideoIpList same_area_out_addr   = 3; // rpt_same_area_out_addr
    repeated PttShortVideoIpList diff_area_out_addr   = 4; // rpt_diff_area_out_addr
    string fileid                                     = 5; // str_fileid
    bytes ukey                                        = 6; // bytes_ukey
    uint32 file_exist                                 = 7; // uint32_file_exist
    repeated PttShortVideoIpList same_area_inner_addr = 8; // rpt_same_area_inner_addr
    repeated PttShortVideoIpList diff_area_inner_addr = 9; // rpt_diff_area_inner_addr
    repeated DataHole data_hole                       = 10; // rpt_data_hole
    uint32 is_hot_file                                = 11; // uint32_is_hot_file
    uint32 long_video_carry_watch_point_type          = 12; // uint32_long_video_carry_watch_point_type
  }
  // PttShortVideoUploadReq is the message type for the PttShortVideoUploadReq.
  message PttShortVideoUploadReq {
    uint64 fromuin                                  = 1; // uint64_fromuin
    uint64 touin                                    = 2; // uint64_touin
    uint32 chat_type                                = 3; // uint32_chat_type
    uint32 client_type                              = 4; // uint32_client_type
    PttShortVideoFileInfo msg_PttShortVideoFileInfo = 5; // msg_PttShortVideoFileInfo
    uint64 group_code                               = 6; // uint64_group_code
    uint32 agent_type                               = 7; // uint32_agent_type
    uint32 business_type                            = 8; // uint32_business_type
    bytes encrypt_key                               = 9; // bytes_encrypt_key
    uint32 sub_business_type                        = 10; // uint32_sub_business_type
    uint32 flag_support_large_size                  = 20; // uint32_flag_support_large_size
  }
  // PttShortVideoUploadResp is the message type for the PttShortVideoUploadResp.
  message PttShortVideoUploadResp {
    int32 ret_code                                    = 1; // int32_ret_code
    string ret_msg                                    = 2; // str_ret_msg
    repeated PttShortVideoIpList same_area_out_addr   = 3; // rpt_same_area_out_addr
    repeated PttShortVideoIpList diff_area_out_addr   = 4; // rpt_diff_area_out_addr
    string fileid                                     = 5; // str_fileid
    bytes ukey                                        = 6; // bytes_ukey
    uint32 file_exist                                 = 7; // uint32_file_exist
    repeated PttShortVideoIpList same_area_inner_addr = 8; // rpt_same_area_inner_addr
    repeated PttShortVideoIpList diff_area_inner_addr = 9; // rpt_diff_area_inner_addr
    repeated DataHole data_hole                       = 10; // rpt_data_hole
    bytes encrypt_key                                 = 11; // bytes_encrypt_key
    uint32 is_hot_file                                = 12; // uint32_is_hot_file
    uint32 long_video_carry_watch_point_type          = 13; // uint32_long_video_carry_watch_point_type
  }
  // QuicParameter is the message type for the QuicParameter.
  message QuicParameter {
    uint32 enable_quic    = 1; // uint32_enable_quic
    uint32 encryption_ver = 2; // uint32_encryption_ver
    uint32 fec_ver        = 3; // uint32_fec_ver
  }
  // ReqBody is the message type for the ReqBody.
  message ReqBody {
    uint32 cmd                                                   = 1; // uint32_cmd
    uint32 seq                                                   = 2; // uint32_seq
    PttShortVideoUploadReq msg_PttShortVideoUpload_Req           = 3; // msg_PttShortVideoUpload_Req
    PttShortVideoDownloadReq msg_PttShortVideoDownload_Req       = 4; // msg_PttShortVideoDownload_Req
    repeated PttShortVideoRetweetReq msg_short_video_retweet_req = 5; // rpt_msg_short_video_retweet_req
    repeated PttShortVideoDeleteReq msg_short_video_delete_req   = 6; // rpt_msg_short_video_delete_req
    repeated ExtensionReq msg_extension_req                      = 100; // rpt_msg_extension_req
  }
  // RspBody is the message type for the RspBody.
  message RspBody {
    uint32 cmd                                                     = 1; // uint32_cmd
    uint32 seq                                                     = 2; // uint32_seq
    PttShortVideoUploadResp msg_PttShortVideoUpload_Resp           = 3; // msg_PttShortVideoUpload_Resp
    PttShortVideoDownloadResp msg_PttShortVideoDownload_Resp       = 4; // msg_PttShortVideoDownload_Resp
    repeated PttShortVideoRetweetResp msg_short_video_retweet_resp = 5; // rpt_msg_short_video_retweet_resp
    repeated PttShortVideoDeleteResp msg_short_video_delete_resp   = 6; // rpt_msg_short_video_delete_resp
    uint32 change_channel                                          = 100; // uint32_change_channel
    uint32 allow_retry                                             = 101; // uint32_allow_retry
  }
}
