syntax = "proto3";

option go_package = "github.com/elap5e/penguin/daemon/message/pb";

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1298im.p1299cs.cmd0x388.C72417cmd0x388
//
// C72417cmd0x388 is the message type for the C72417cmd0x388.
message Cmd0x388 {
  // DelImgReq is the message type for the DelImgReq.
  message DelImgReq {
    uint64 src_uin           = 1; // uint64_src_uin
    uint64 dst_uin           = 2; // uint64_dst_uin
    uint32 req_term          = 3; // uint32_req_term
    uint32 req_platform_type = 4; // uint32_req_platform_type
    uint32 bu_type           = 5; // uint32_bu_type
    bytes build_ver          = 6; // bytes_build_ver
    bytes file_resid         = 7; // bytes_file_resid
    uint32 pic_width         = 8; // uint32_pic_width
    uint32 pic_height        = 9; // uint32_pic_height
  }
  // DelImgRsp is the message type for the DelImgRsp.
  message DelImgRsp {
    uint32 result    = 1; // uint32_result
    bytes fail_msg   = 2; // bytes_fail_msg
    bytes file_resid = 3; // bytes_file_resid
  }
  // ExpRoamExtendInfo is the message type for the ExpRoamExtendInfo.
  message ExpRoamExtendInfo {
    bytes resid = 1; // bytes_resid
  }
  // ExpRoamPicInfo is the message type for the ExpRoamPicInfo.
  message ExpRoamPicInfo {
    uint32 shop_flag = 1; // uint32_shop_flag
    uint32 pkg_id    = 2; // uint32_pkg_id
    bytes pic_id     = 3; // bytes_pic_id
  }
  // ExtensionCommPicTryUp is the message type for the ExtensionCommPicTryUp.
  message ExtensionCommPicTryUp {
    repeated bytes extinfo = 1; // rpt_bytes_extinfo
  }
  // ExtensionExpRoamTryUp is the message type for the ExtensionExpRoamTryUp.
  message ExtensionExpRoamTryUp {
    repeated ExpRoamPicInfo msg_exproam_pic_info = 1; // rpt_msg_exproam_pic_info
  }
  // GetImgUrlReq is the message type for the GetImgUrlReq.
  message GetImgUrlReq {
    uint64 group_code        = 1; // uint64_group_code
    uint64 dst_uin           = 2; // uint64_dst_uin
    uint64 fileid            = 3; // uint64_fileid
    bytes file_md5           = 4; // bytes_file_md5
    uint32 url_flag          = 5; // uint32_url_flag
    uint32 url_type          = 6; // uint32_url_type
    uint32 req_term          = 7; // uint32_req_term
    uint32 req_platform_type = 8; // uint32_req_platform_type
    uint32 inner_ip          = 9; // uint32_inner_ip
    uint32 bu_type           = 10; // uint32_bu_type
    bytes build_ver          = 11; // bytes_build_ver
    uint64 file_code           = 12; // uint64_file_id
    uint64 file_size         = 13; // uint64_file_size
    uint32 original_pic      = 14; // uint32_original_pic
    uint32 retry_req         = 15; // uint32_retry_req
    uint32 file_height       = 16; // uint32_file_height
    uint32 file_width        = 17; // uint32_file_width
    uint32 pic_type          = 18; // uint32_pic_type
    uint32 pic_up_timestamp  = 19; // uint32_pic_up_timestamp
    uint32 req_transfer_type = 20; // uint32_req_transfer_type
    uint64 qqmeet_guild_id   = 21; // uint64_qqmeet_guild_id
    uint64 qqmeet_channel_id = 22; // uint64_qqmeet_channel_id
    bytes download_index     = 23; // bytes_download_index
  }
  // GetImgUrlRsp is the message type for the GetImgUrlRsp.
  message GetImgUrlRsp {
    uint64 fileid                    = 1; // uint64_fileid
    bytes file_md5                   = 2; // bytes_file_md5
    uint32 result                    = 3; // uint32_result
    bytes fail_msg                   = 4; // bytes_fail_msg
    ImgInfo msg_img_info             = 5; // msg_img_info
    repeated bytes thumb_down_url    = 6; // rpt_bytes_thumb_down_url
    repeated bytes original_down_url = 7; // rpt_bytes_original_down_url
    repeated bytes big_down_url      = 8; // rpt_bytes_big_down_url
    repeated uint32 down_ip          = 9; // rpt_uint32_down_ip
    repeated uint32 down_port        = 10; // rpt_uint32_down_port
    bytes down_domain                = 11; // bytes_down_domain
    bytes thumb_down_para            = 12; // bytes_thumb_down_para
    bytes original_down_para         = 13; // bytes_original_down_para
    bytes big_down_para              = 14; // bytes_big_down_para
    uint64 file_code                   = 15; // uint64_file_id
    uint32 auto_down_type            = 16; // uint32_auto_down_type
    repeated uint32 order_down_type  = 17; // rpt_uint32_order_down_type
    bytes big_thumb_down_para        = 19; // bytes_big_thumb_down_para
    uint32 https_url_flag            = 20; // uint32_https_url_flag
    repeated IPv6Info msg_down_ip6   = 26; // rpt_msg_down_ip6
    bytes client_ip6                 = 27; // bytes_client_ip6
  }
  // GetPttUrlReq is the message type for the GetPttUrlReq.
  message GetPttUrlReq {
    uint64 group_code        = 1; // uint64_group_code
    uint64 dst_uin           = 2; // uint64_dst_uin
    uint64 fileid            = 3; // uint64_fileid
    bytes file_md5           = 4; // bytes_file_md5
    uint32 req_term          = 5; // uint32_req_term
    uint32 req_platform_type = 6; // uint32_req_platform_type
    uint32 inner_ip          = 7; // uint32_inner_ip
    uint32 bu_type           = 8; // uint32_bu_type
    bytes build_ver          = 9; // bytes_build_ver
    uint64 file_code           = 10; // uint64_file_id
    bytes file_key           = 11; // bytes_file_key
    uint32 codec             = 12; // uint32_codec
    uint32 bu_id             = 13; // uint32_bu_id
    uint32 req_transfer_type = 14; // uint32_req_transfer_type
    uint32 is_auto           = 15; // uint32_is_auto
  }
  // GetPttUrlRsp is the message type for the GetPttUrlRsp.
  message GetPttUrlRsp {
    uint64 fileid                  = 1; // uint64_fileid
    bytes file_md5                 = 2; // bytes_file_md5
    uint32 result                  = 3; // uint32_result
    bytes fail_msg                 = 4; // bytes_fail_msg
    repeated bytes down_url        = 5; // rpt_bytes_down_url
    repeated uint32 down_ip        = 6; // rpt_uint32_down_ip
    repeated uint32 down_port      = 7; // rpt_uint32_down_port
    bytes down_domain              = 8; // bytes_down_domain
    bytes down_para                = 9; // bytes_down_para
    uint64 file_code                 = 10; // uint64_file_id
    uint32 transfer_type           = 11; // uint32_transfer_type
    uint32 allow_retry             = 12; // uint32_allow_retry
    repeated IPv6Info msg_down_ip6 = 26; // rpt_msg_down_ip6
    bytes client_ip6               = 27; // bytes_client_ip6
    string domain                  = 28; // rpt_str_domain
  }
  // IPv6Info is the message type for the IPv6Info.
  message IPv6Info {
    bytes ip6   = 1; // bytes_ip6
    uint32 port = 2; // uint32_port
  }
  // ImgInfo is the message type for the ImgInfo.
  message ImgInfo {
    bytes file_md5     = 1; // bytes_file_md5
    uint32 file_type   = 2; // uint32_file_type
    uint64 file_size   = 3; // uint64_file_size
    uint32 file_width  = 4; // uint32_file_width
    uint32 file_height = 5; // uint32_file_height
  }
  // PicSize is the message type for the PicSize.
  message PicSize {
    uint32 original = 1; // uint32_original
    uint32 thumb    = 2; // uint32_thumb
    uint32 high     = 3; // uint32_high
  }
  // ReqBody is the message type for the ReqBody.
  message ReqBody {
    uint32 net_type                          = 1; // uint32_net_type
    uint32 subcmd                            = 2; // uint32_subcmd
    repeated TryUpImgReq msg_tryup_img_req   = 3; // rpt_msg_tryup_img_req
    repeated GetImgUrlReq msg_getimg_url_req = 4; // rpt_msg_getimg_url_req
    repeated TryUpPttReq msg_tryup_ptt_req   = 5; // rpt_msg_tryup_ptt_req
    repeated GetPttUrlReq msg_getptt_url_req = 6; // rpt_msg_getptt_url_req
    uint32 command_id                        = 7; // uint32_command_id
    repeated DelImgReq msg_del_img_req       = 8; // rpt_msg_del_img_req
    bytes extension                          = 1001; // bytes_extension
  }
  // RspBody is the message type for the RspBody.
  message RspBody {
    uint32 client_ip                         = 1; // uint32_client_ip
    uint32 subcmd                            = 2; // uint32_subcmd
    repeated TryUpImgRsp msg_tryup_img_rsp   = 3; // rpt_msg_tryup_img_rsp
    repeated GetImgUrlRsp msg_getimg_url_rsp = 4; // rpt_msg_getimg_url_rsp
    repeated TryUpPttRsp msg_tryup_ptt_rsp   = 5; // rpt_msg_tryup_ptt_rsp
    repeated GetPttUrlRsp msg_getptt_url_rsp = 6; // rpt_msg_getptt_url_rsp
    repeated DelImgRsp msg_del_img_rsp       = 7; // rpt_msg_del_img_rsp
  }
  // TryUpImgReq is the message type for the TryUpImgReq.
  message TryUpImgReq {
    uint64 group_code        = 1; // uint64_group_code
    uint64 src_uin           = 2; // uint64_src_uin
    uint64 file_code           = 3; // uint64_file_id
    bytes file_md5           = 4; // bytes_file_md5
    uint64 file_size         = 5; // uint64_file_size
    bytes file_name          = 6; // bytes_file_name
    uint32 src_term          = 7; // uint32_src_term
    uint32 platform_type     = 8; // uint32_platform_type
    uint32 bu_type           = 9; // uint32_bu_type
    uint32 pic_width         = 10; // uint32_pic_width
    uint32 pic_height        = 11; // uint32_pic_height
    uint32 pic_type          = 12; // uint32_pic_type
    bytes build_ver          = 13; // bytes_build_ver
    uint32 inner_ip          = 14; // uint32_inner_ip
    uint32 app_pic_type      = 15; // uint32_app_pic_type
    uint32 original_pic      = 16; // uint32_original_pic
    bytes file_index         = 17; // bytes_file_index
    uint64 dst_uin           = 18; // uint64_dst_uin
    uint32 srv_upload        = 19; // uint32_srv_upload
    bytes transfer_url       = 20; // bytes_transfer_url
    uint64 qqmeet_guild_id   = 21; // uint64_qqmeet_guild_id
    uint64 qqmeet_channel_id = 22; // uint64_qqmeet_channel_id
  }
  // TryUpImgRsp is the message type for the TryUpImgRsp.
  message TryUpImgRsp {
    uint64 file_code               = 1; // uint64_file_id
    uint32 result                = 2; // uint32_result
    bytes fail_msg               = 3; // bytes_fail_msg
    bool file_exit               = 4; // bool_file_exit
    ImgInfo msg_img_info         = 5; // msg_img_info
    repeated uint32 up_ip        = 6; // rpt_uint32_up_ip
    repeated uint32 up_port      = 7; // rpt_uint32_up_port
    bytes up_ukey                = 8; // bytes_up_ukey
    uint64 fileid                = 9; // uint64_fileid
    uint64 up_offset             = 10; // uint64_up_offset
    uint64 block_size            = 11; // uint64_block_size
    bool new_big_chan            = 12; // bool_new_big_chan
    repeated IPv6Info msg_up_ip6 = 26; // rpt_msg_up_ip6
    bytes client_ip6             = 27; // bytes_client_ip6
    bytes download_index         = 28; // bytes_download_index
    TryUpInfo4Busi msg_info4busi = 1001; // msg_info4busi
  }
  // TryUpInfo4Busi is the message type for the TryUpInfo4Busi.
  message TryUpInfo4Busi {
    bytes down_domain       = 1; // bytes_down_domain
    bytes thumb_down_url    = 2; // bytes_thumb_down_url
    bytes original_down_url = 3; // bytes_original_down_url
    bytes big_down_url      = 4; // bytes_big_down_url
    bytes file_resid        = 5; // bytes_file_resid
  }
  // TryUpPttReq is the message type for the TryUpPttReq.
  message TryUpPttReq {
    uint64 group_code    = 1; // uint64_group_code
    uint64 src_uin       = 2; // uint64_src_uin
    uint64 file_code       = 3; // uint64_file_id
    bytes file_md5       = 4; // bytes_file_md5
    uint64 file_size     = 5; // uint64_file_size
    bytes file_name      = 6; // bytes_file_name
    uint32 src_term      = 7; // uint32_src_term
    uint32 platform_type = 8; // uint32_platform_type
    uint32 bu_type       = 9; // uint32_bu_type
    bytes build_ver      = 10; // bytes_build_ver
    uint32 inner_ip      = 11; // uint32_inner_ip
    uint32 voice_length  = 12; // uint32_voice_length
    bool new_up_chan     = 13; // bool_new_up_chan
    uint32 codec         = 14; // uint32_codec
    uint32 voice_type    = 15; // uint32_voice_type
    uint32 bu_id         = 16; // uint32_bu_id
  }
  // TryUpPttRsp is the message type for the TryUpPttRsp.
  message TryUpPttRsp {
    uint64 file_code               = 1; // uint64_file_id
    uint32 result                = 2; // uint32_result
    bytes fail_msg               = 3; // bytes_fail_msg
    bool file_exit               = 4; // bool_file_exit
    repeated uint32 up_ip        = 5; // rpt_uint32_up_ip
    repeated uint32 up_port      = 6; // rpt_uint32_up_port
    bytes up_ukey                = 7; // bytes_up_ukey
    uint64 fileid                = 8; // uint64_fileid
    uint64 up_offset             = 9; // uint64_up_offset
    uint64 block_size            = 10; // uint64_block_size
    bytes file_key               = 11; // bytes_file_key
    uint32 channel_type          = 12; // uint32_channel_type
    repeated IPv6Info msg_up_ip6 = 26; // rpt_msg_up_ip6
    bytes client_ip6             = 27; // bytes_client_ip6
  }
}
