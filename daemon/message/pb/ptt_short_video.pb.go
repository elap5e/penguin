// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/message/pb/ptt_short_video.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: pttcenterservice.PttShortVideo
//
// PttShortVideo is the message type for the PttShortVideo.
type PttShortVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PttShortVideo) Reset() {
	*x = PttShortVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo) ProtoMessage() {}

func (x *PttShortVideo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo.ProtoReflect.Descriptor instead.
func (*PttShortVideo) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0}
}

// DataHole is the message type for the DataHole.
type PttShortVideo_DataHole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin uint64 `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"` // uint64_begin
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`     // uint64_end
}

func (x *PttShortVideo_DataHole) Reset() {
	*x = PttShortVideo_DataHole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_DataHole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_DataHole) ProtoMessage() {}

func (x *PttShortVideo_DataHole) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_DataHole.ProtoReflect.Descriptor instead.
func (*PttShortVideo_DataHole) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PttShortVideo_DataHole) GetBegin() uint64 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *PttShortVideo_DataHole) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

// ExtensionReq is the message type for the ExtensionReq.
type PttShortVideo_ExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubBusiType uint32 `protobuf:"varint,1,opt,name=sub_busi_type,json=subBusiType,proto3" json:"sub_busi_type,omitempty"` // uint32_sub_busi_type
	UserCnt     uint32 `protobuf:"varint,2,opt,name=user_cnt,json=userCnt,proto3" json:"user_cnt,omitempty"`               // uint32_user_cnt
}

func (x *PttShortVideo_ExtensionReq) Reset() {
	*x = PttShortVideo_ExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_ExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_ExtensionReq) ProtoMessage() {}

func (x *PttShortVideo_ExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_ExtensionReq.ProtoReflect.Descriptor instead.
func (*PttShortVideo_ExtensionReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PttShortVideo_ExtensionReq) GetSubBusiType() uint32 {
	if x != nil {
		return x.SubBusiType
	}
	return 0
}

func (x *PttShortVideo_ExtensionReq) GetUserCnt() uint32 {
	if x != nil {
		return x.UserCnt
	}
	return 0
}

// PttShortVideoAddr is the message type for the PttShortVideoAddr.
type PttShortVideo_PttShortVideoAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostType uint32   `protobuf:"varint,1,opt,name=host_type,json=hostType,proto3" json:"host_type,omitempty"` // uint32_host_type
	Host     []string `protobuf:"bytes,10,rep,name=host,proto3" json:"host,omitempty"`                         // rpt_str_host
	UrlArgs  string   `protobuf:"bytes,11,opt,name=url_args,json=urlArgs,proto3" json:"url_args,omitempty"`    // str_url_args
	HostIpv6 []string `protobuf:"bytes,21,rep,name=host_ipv6,json=hostIpv6,proto3" json:"host_ipv6,omitempty"` // rpt_str_host_ipv6
	Domain   []string `protobuf:"bytes,22,rep,name=domain,proto3" json:"domain,omitempty"`                     // rpt_str_domain
}

func (x *PttShortVideo_PttShortVideoAddr) Reset() {
	*x = PttShortVideo_PttShortVideoAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoAddr) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoAddr) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoAddr.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoAddr) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 2}
}

func (x *PttShortVideo_PttShortVideoAddr) GetHostType() uint32 {
	if x != nil {
		return x.HostType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoAddr) GetHost() []string {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoAddr) GetUrlArgs() string {
	if x != nil {
		return x.UrlArgs
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoAddr) GetHostIpv6() []string {
	if x != nil {
		return x.HostIpv6
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoAddr) GetDomain() []string {
	if x != nil {
		return x.Domain
	}
	return nil
}

// PttShortVideoDeleteReq is the message type for the PttShortVideoDeleteReq.
type PttShortVideo_PttShortVideoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fromuin      uint64 `protobuf:"varint,1,opt,name=fromuin,proto3" json:"fromuin,omitempty"`                               // uint64_fromuin
	Touin        uint64 `protobuf:"varint,2,opt,name=touin,proto3" json:"touin,omitempty"`                                   // uint64_touin
	ChatType     uint32 `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`             // uint32_chat_type
	ClientType   uint32 `protobuf:"varint,4,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`       // uint32_client_type
	Fileid       string `protobuf:"bytes,5,opt,name=fileid,proto3" json:"fileid,omitempty"`                                  // str_fileid
	GroupCode    uint64 `protobuf:"varint,6,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`          // uint64_group_code
	AgentType    uint32 `protobuf:"varint,7,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`          // uint32_agent_type
	FileMd5      []byte `protobuf:"bytes,8,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                 // bytes_file_md5
	BusinessType uint32 `protobuf:"varint,9,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"` // uint32_business_type
}

func (x *PttShortVideo_PttShortVideoDeleteReq) Reset() {
	*x = PttShortVideo_PttShortVideoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoDeleteReq) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoDeleteReq.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoDeleteReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 3}
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetFromuin() uint64 {
	if x != nil {
		return x.Fromuin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetTouin() uint64 {
	if x != nil {
		return x.Touin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetChatType() uint32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetFileid() string {
	if x != nil {
		return x.Fileid
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetAgentType() uint32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDeleteReq) GetBusinessType() uint32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

// PttShortVideoDeleteResp is the message type for the PttShortVideoDeleteResp.
type PttShortVideo_PttShortVideoDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"` // int32_ret_code
	RetMsg  string `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`     // str_ret_msg
}

func (x *PttShortVideo_PttShortVideoDeleteResp) Reset() {
	*x = PttShortVideo_PttShortVideoDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoDeleteResp) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoDeleteResp.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoDeleteResp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 4}
}

func (x *PttShortVideo_PttShortVideoDeleteResp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDeleteResp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

// PttShortVideoDownloadReq is the message type for the PttShortVideoDownloadReq.
type PttShortVideo_PttShortVideoDownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fromuin                   uint64 `protobuf:"varint,1,opt,name=fromuin,proto3" json:"fromuin,omitempty"`                                                                             // uint64_fromuin
	Touin                     uint64 `protobuf:"varint,2,opt,name=touin,proto3" json:"touin,omitempty"`                                                                                 // uint64_touin
	ChatType                  uint32 `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`                                                           // uint32_chat_type
	ClientType                uint32 `protobuf:"varint,4,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`                                                     // uint32_client_type
	Fileid                    string `protobuf:"bytes,5,opt,name=fileid,proto3" json:"fileid,omitempty"`                                                                                // str_fileid
	GroupCode                 uint64 `protobuf:"varint,6,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                                                        // uint64_group_code
	AgentType                 uint32 `protobuf:"varint,7,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`                                                        // uint32_agent_type
	FileMd5                   []byte `protobuf:"bytes,8,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                                               // bytes_file_md5
	BusinessType              uint32 `protobuf:"varint,9,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`                                               // uint32_business_type
	FileType                  uint32 `protobuf:"varint,10,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`                                                          // uint32_file_type
	DownType                  uint32 `protobuf:"varint,11,opt,name=down_type,json=downType,proto3" json:"down_type,omitempty"`                                                          // uint32_down_type
	SceneType                 uint32 `protobuf:"varint,12,opt,name=scene_type,json=sceneType,proto3" json:"scene_type,omitempty"`                                                       // uint32_scene_type
	NeedInnerAddr             uint32 `protobuf:"varint,13,opt,name=need_inner_addr,json=needInnerAddr,proto3" json:"need_inner_addr,omitempty"`                                         // uint32_need_inner_addr
	ReqTransferType           uint32 `protobuf:"varint,14,opt,name=req_transfer_type,json=reqTransferType,proto3" json:"req_transfer_type,omitempty"`                                   // uint32_req_transfer_type
	ReqHostType               uint32 `protobuf:"varint,15,opt,name=req_host_type,json=reqHostType,proto3" json:"req_host_type,omitempty"`                                               // uint32_req_host_type
	FlagSupportLargeSize      uint32 `protobuf:"varint,20,opt,name=flag_support_large_size,json=flagSupportLargeSize,proto3" json:"flag_support_large_size,omitempty"`                  // uint32_flag_support_large_size
	FlagClientQuicProtoEnable uint32 `protobuf:"varint,30,opt,name=flag_client_quic_proto_enable,json=flagClientQuicProtoEnable,proto3" json:"flag_client_quic_proto_enable,omitempty"` // uint32_flag_client_quic_proto_enable
}

func (x *PttShortVideo_PttShortVideoDownloadReq) Reset() {
	*x = PttShortVideo_PttShortVideoDownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoDownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoDownloadReq) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoDownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoDownloadReq.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoDownloadReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 5}
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetFromuin() uint64 {
	if x != nil {
		return x.Fromuin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetTouin() uint64 {
	if x != nil {
		return x.Touin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetChatType() uint32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetFileid() string {
	if x != nil {
		return x.Fileid
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetAgentType() uint32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetBusinessType() uint32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetDownType() uint32 {
	if x != nil {
		return x.DownType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetSceneType() uint32 {
	if x != nil {
		return x.SceneType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetNeedInnerAddr() uint32 {
	if x != nil {
		return x.NeedInnerAddr
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetReqTransferType() uint32 {
	if x != nil {
		return x.ReqTransferType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetReqHostType() uint32 {
	if x != nil {
		return x.ReqHostType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetFlagSupportLargeSize() uint32 {
	if x != nil {
		return x.FlagSupportLargeSize
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadReq) GetFlagClientQuicProtoEnable() uint32 {
	if x != nil {
		return x.FlagClientQuicProtoEnable
	}
	return 0
}

// PttShortVideoDownloadResp is the message type for the PttShortVideoDownloadResp.
type PttShortVideo_PttShortVideoDownloadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode                   int32                                `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`                                                              // int32_ret_code
	RetMsg                    string                               `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`                                                                  // str_ret_msg
	SameAreaOutAddr           []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,3,rep,name=same_area_out_addr,json=sameAreaOutAddr,proto3" json:"same_area_out_addr,omitempty"`                                   // rpt_same_area_out_addr
	DiffAreaOutAddr           []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,4,rep,name=diff_area_out_addr,json=diffAreaOutAddr,proto3" json:"diff_area_out_addr,omitempty"`                                   // rpt_diff_area_out_addr
	Downloadkey               []byte                               `protobuf:"bytes,5,opt,name=downloadkey,proto3" json:"downloadkey,omitempty"`                                                                      // bytes_downloadkey
	FileMd5                   []byte                               `protobuf:"bytes,6,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                                               // bytes_file_md5
	SameAreaInnerAddr         []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,7,rep,name=same_area_inner_addr,json=sameAreaInnerAddr,proto3" json:"same_area_inner_addr,omitempty"`                             // rpt_same_area_inner_addr
	DiffAreaInnerAddr         []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,8,rep,name=diff_area_inner_addr,json=diffAreaInnerAddr,proto3" json:"diff_area_inner_addr,omitempty"`                             // rpt_diff_area_inner_addr
	MsgDownloadAddr           *PttShortVideo_PttShortVideoAddr     `protobuf:"bytes,9,opt,name=msg_download_addr,json=msgDownloadAddr,proto3" json:"msg_download_addr,omitempty"`                                     // msg_download_addr
	EncryptKey                []byte                               `protobuf:"bytes,10,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`                                                     // bytes_encrypt_key
	FlagServerQuicProtoEnable uint32                               `protobuf:"varint,30,opt,name=flag_server_quic_proto_enable,json=flagServerQuicProtoEnable,proto3" json:"flag_server_quic_proto_enable,omitempty"` // uint32_flag_server_quic_proto_enable
	ServerQuicPara            []byte                               `protobuf:"bytes,31,opt,name=server_quic_para,json=serverQuicPara,proto3" json:"server_quic_para,omitempty"`                                       // bytes_server_quic_para
}

func (x *PttShortVideo_PttShortVideoDownloadResp) Reset() {
	*x = PttShortVideo_PttShortVideoDownloadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoDownloadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoDownloadResp) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoDownloadResp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoDownloadResp.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoDownloadResp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 6}
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetSameAreaOutAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.SameAreaOutAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetDiffAreaOutAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.DiffAreaOutAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetDownloadkey() []byte {
	if x != nil {
		return x.Downloadkey
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetSameAreaInnerAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.SameAreaInnerAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetDiffAreaInnerAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.DiffAreaInnerAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetMsgDownloadAddr() *PttShortVideo_PttShortVideoAddr {
	if x != nil {
		return x.MsgDownloadAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetFlagServerQuicProtoEnable() uint32 {
	if x != nil {
		return x.FlagServerQuicProtoEnable
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoDownloadResp) GetServerQuicPara() []byte {
	if x != nil {
		return x.ServerQuicPara
	}
	return nil
}

// PttShortVideoFileInfo is the message type for the PttShortVideoFileInfo.
type PttShortVideo_PttShortVideoFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName         string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                             // str_file_name
	FileMd5          []byte `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                // bytes_file_md5
	ThumbFileMd5     []byte `protobuf:"bytes,3,opt,name=thumb_file_md5,json=thumbFileMd5,proto3" json:"thumb_file_md5,omitempty"`               // bytes_thumb_file_md5
	FileSize         uint64 `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                            // uint64_file_size
	FileResLength    uint32 `protobuf:"varint,5,opt,name=file_res_length,json=fileResLength,proto3" json:"file_res_length,omitempty"`           // uint32_file_res_length
	FileResWidth     uint32 `protobuf:"varint,6,opt,name=file_res_width,json=fileResWidth,proto3" json:"file_res_width,omitempty"`              // uint32_file_res_width
	FileFormat       uint32 `protobuf:"varint,7,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`                      // uint32_file_format
	FileTime         uint32 `protobuf:"varint,8,opt,name=file_time,json=fileTime,proto3" json:"file_time,omitempty"`                            // uint32_file_time
	ThumbFileSize    uint64 `protobuf:"varint,9,opt,name=thumb_file_size,json=thumbFileSize,proto3" json:"thumb_file_size,omitempty"`           // uint64_thumb_file_size
	DecryptVideoMd5  []byte `protobuf:"bytes,10,opt,name=decrypt_video_md5,json=decryptVideoMd5,proto3" json:"decrypt_video_md5,omitempty"`     // bytes_decrypt_video_md5
	DecryptFileSize  uint64 `protobuf:"varint,11,opt,name=decrypt_file_size,json=decryptFileSize,proto3" json:"decrypt_file_size,omitempty"`    // uint64_decrypt_file_size
	DecryptThumbMd5  []byte `protobuf:"bytes,12,opt,name=decrypt_thumb_md5,json=decryptThumbMd5,proto3" json:"decrypt_thumb_md5,omitempty"`     // bytes_decrypt_thumb_md5
	DecryptThumbSize uint64 `protobuf:"varint,13,opt,name=decrypt_thumb_size,json=decryptThumbSize,proto3" json:"decrypt_thumb_size,omitempty"` // uint64_decrypt_thumb_size
}

func (x *PttShortVideo_PttShortVideoFileInfo) Reset() {
	*x = PttShortVideo_PttShortVideoFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoFileInfo) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoFileInfo.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoFileInfo) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 7}
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetThumbFileMd5() []byte {
	if x != nil {
		return x.ThumbFileMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileResLength() uint32 {
	if x != nil {
		return x.FileResLength
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileResWidth() uint32 {
	if x != nil {
		return x.FileResWidth
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileFormat() uint32 {
	if x != nil {
		return x.FileFormat
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetFileTime() uint32 {
	if x != nil {
		return x.FileTime
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetThumbFileSize() uint64 {
	if x != nil {
		return x.ThumbFileSize
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetDecryptVideoMd5() []byte {
	if x != nil {
		return x.DecryptVideoMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetDecryptFileSize() uint64 {
	if x != nil {
		return x.DecryptFileSize
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetDecryptThumbMd5() []byte {
	if x != nil {
		return x.DecryptThumbMd5
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoFileInfo) GetDecryptThumbSize() uint64 {
	if x != nil {
		return x.DecryptThumbSize
	}
	return 0
}

// PttShortVideoIpList is the message type for the PttShortVideoIpList.
type PttShortVideo_PttShortVideoIpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   uint32 `protobuf:"varint,1,opt,name=ip,proto3" json:"ip,omitempty"`     // uint32_ip
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"` // uint32_port
}

func (x *PttShortVideo_PttShortVideoIpList) Reset() {
	*x = PttShortVideo_PttShortVideoIpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoIpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoIpList) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoIpList) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoIpList.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoIpList) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 8}
}

func (x *PttShortVideo_PttShortVideoIpList) GetIp() uint32 {
	if x != nil {
		return x.Ip
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoIpList) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// PttShortVideoRetweetReq is the message type for the PttShortVideoRetweetReq.
type PttShortVideo_PttShortVideoRetweetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin                   uint64                               `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                                                   // uint64_from_uin
	ToUin                     uint64                               `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                                                         // uint64_to_uin
	FromChatType              uint32                               `protobuf:"varint,3,opt,name=from_chat_type,json=fromChatType,proto3" json:"from_chat_type,omitempty"`                                  // uint32_from_chat_type
	ToChatType                uint32                               `protobuf:"varint,4,opt,name=to_chat_type,json=toChatType,proto3" json:"to_chat_type,omitempty"`                                        // uint32_to_chat_type
	FromBusiType              uint32                               `protobuf:"varint,5,opt,name=from_busi_type,json=fromBusiType,proto3" json:"from_busi_type,omitempty"`                                  // uint32_from_busi_type
	ToBusiType                uint32                               `protobuf:"varint,6,opt,name=to_busi_type,json=toBusiType,proto3" json:"to_busi_type,omitempty"`                                        // uint32_to_busi_type
	ClientType                uint32                               `protobuf:"varint,7,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`                                          // uint32_client_type
	Msg_PttShortVideoFileInfo *PttShortVideo_PttShortVideoFileInfo `protobuf:"bytes,8,opt,name=msg_PttShortVideoFileInfo,json=msgPttShortVideoFileInfo,proto3" json:"msg_PttShortVideoFileInfo,omitempty"` // msg_PttShortVideoFileInfo
	AgentType                 uint32                               `protobuf:"varint,9,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`                                             // uint32_agent_type
	Fileid                    string                               `protobuf:"bytes,10,opt,name=fileid,proto3" json:"fileid,omitempty"`                                                                    // str_fileid
	GroupCode                 uint64                               `protobuf:"varint,11,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                                            // uint64_group_code
	FlagSupportLargeSize      uint32                               `protobuf:"varint,20,opt,name=flag_support_large_size,json=flagSupportLargeSize,proto3" json:"flag_support_large_size,omitempty"`       // uint32_flag_support_large_size
}

func (x *PttShortVideo_PttShortVideoRetweetReq) Reset() {
	*x = PttShortVideo_PttShortVideoRetweetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoRetweetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoRetweetReq) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoRetweetReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoRetweetReq.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoRetweetReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 9}
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetFromChatType() uint32 {
	if x != nil {
		return x.FromChatType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetToChatType() uint32 {
	if x != nil {
		return x.ToChatType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetFromBusiType() uint32 {
	if x != nil {
		return x.FromBusiType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetToBusiType() uint32 {
	if x != nil {
		return x.ToBusiType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetMsg_PttShortVideoFileInfo() *PttShortVideo_PttShortVideoFileInfo {
	if x != nil {
		return x.Msg_PttShortVideoFileInfo
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetAgentType() uint32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetFileid() string {
	if x != nil {
		return x.Fileid
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetReq) GetFlagSupportLargeSize() uint32 {
	if x != nil {
		return x.FlagSupportLargeSize
	}
	return 0
}

// PttShortVideoRetweetResp is the message type for the PttShortVideoRetweetResp.
type PttShortVideo_PttShortVideoRetweetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode                      int32                                `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`                                                                         // int32_ret_code
	RetMsg                       string                               `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`                                                                             // str_ret_msg
	SameAreaOutAddr              []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,3,rep,name=same_area_out_addr,json=sameAreaOutAddr,proto3" json:"same_area_out_addr,omitempty"`                                              // rpt_same_area_out_addr
	DiffAreaOutAddr              []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,4,rep,name=diff_area_out_addr,json=diffAreaOutAddr,proto3" json:"diff_area_out_addr,omitempty"`                                              // rpt_diff_area_out_addr
	Fileid                       string                               `protobuf:"bytes,5,opt,name=fileid,proto3" json:"fileid,omitempty"`                                                                                           // str_fileid
	Ukey                         []byte                               `protobuf:"bytes,6,opt,name=ukey,proto3" json:"ukey,omitempty"`                                                                                               // bytes_ukey
	FileExist                    uint32                               `protobuf:"varint,7,opt,name=file_exist,json=fileExist,proto3" json:"file_exist,omitempty"`                                                                   // uint32_file_exist
	SameAreaInnerAddr            []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,8,rep,name=same_area_inner_addr,json=sameAreaInnerAddr,proto3" json:"same_area_inner_addr,omitempty"`                                        // rpt_same_area_inner_addr
	DiffAreaInnerAddr            []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,9,rep,name=diff_area_inner_addr,json=diffAreaInnerAddr,proto3" json:"diff_area_inner_addr,omitempty"`                                        // rpt_diff_area_inner_addr
	DataHole                     []*PttShortVideo_DataHole            `protobuf:"bytes,10,rep,name=data_hole,json=dataHole,proto3" json:"data_hole,omitempty"`                                                                      // rpt_data_hole
	IsHotFile                    uint32                               `protobuf:"varint,11,opt,name=is_hot_file,json=isHotFile,proto3" json:"is_hot_file,omitempty"`                                                                // uint32_is_hot_file
	LongVideoCarryWatchPointType uint32                               `protobuf:"varint,12,opt,name=long_video_carry_watch_point_type,json=longVideoCarryWatchPointType,proto3" json:"long_video_carry_watch_point_type,omitempty"` // uint32_long_video_carry_watch_point_type
}

func (x *PttShortVideo_PttShortVideoRetweetResp) Reset() {
	*x = PttShortVideo_PttShortVideoRetweetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoRetweetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoRetweetResp) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoRetweetResp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoRetweetResp.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoRetweetResp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 10}
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetSameAreaOutAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.SameAreaOutAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetDiffAreaOutAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.DiffAreaOutAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetFileid() string {
	if x != nil {
		return x.Fileid
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetUkey() []byte {
	if x != nil {
		return x.Ukey
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetFileExist() uint32 {
	if x != nil {
		return x.FileExist
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetSameAreaInnerAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.SameAreaInnerAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetDiffAreaInnerAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.DiffAreaInnerAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetDataHole() []*PttShortVideo_DataHole {
	if x != nil {
		return x.DataHole
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetIsHotFile() uint32 {
	if x != nil {
		return x.IsHotFile
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoRetweetResp) GetLongVideoCarryWatchPointType() uint32 {
	if x != nil {
		return x.LongVideoCarryWatchPointType
	}
	return 0
}

// PttShortVideoUploadReq is the message type for the PttShortVideoUploadReq.
type PttShortVideo_PttShortVideoUploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fromuin                   uint64                               `protobuf:"varint,1,opt,name=fromuin,proto3" json:"fromuin,omitempty"`                                                                  // uint64_fromuin
	Touin                     uint64                               `protobuf:"varint,2,opt,name=touin,proto3" json:"touin,omitempty"`                                                                      // uint64_touin
	ChatType                  uint32                               `protobuf:"varint,3,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`                                                // uint32_chat_type
	ClientType                uint32                               `protobuf:"varint,4,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`                                          // uint32_client_type
	Msg_PttShortVideoFileInfo *PttShortVideo_PttShortVideoFileInfo `protobuf:"bytes,5,opt,name=msg_PttShortVideoFileInfo,json=msgPttShortVideoFileInfo,proto3" json:"msg_PttShortVideoFileInfo,omitempty"` // msg_PttShortVideoFileInfo
	GroupCode                 uint64                               `protobuf:"varint,6,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                                             // uint64_group_code
	AgentType                 uint32                               `protobuf:"varint,7,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`                                             // uint32_agent_type
	BusinessType              uint32                               `protobuf:"varint,8,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`                                    // uint32_business_type
	EncryptKey                []byte                               `protobuf:"bytes,9,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`                                           // bytes_encrypt_key
	SubBusinessType           uint32                               `protobuf:"varint,10,opt,name=sub_business_type,json=subBusinessType,proto3" json:"sub_business_type,omitempty"`                        // uint32_sub_business_type
	FlagSupportLargeSize      uint32                               `protobuf:"varint,20,opt,name=flag_support_large_size,json=flagSupportLargeSize,proto3" json:"flag_support_large_size,omitempty"`       // uint32_flag_support_large_size
}

func (x *PttShortVideo_PttShortVideoUploadReq) Reset() {
	*x = PttShortVideo_PttShortVideoUploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoUploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoUploadReq) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoUploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoUploadReq.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoUploadReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 11}
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetFromuin() uint64 {
	if x != nil {
		return x.Fromuin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetTouin() uint64 {
	if x != nil {
		return x.Touin
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetChatType() uint32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetMsg_PttShortVideoFileInfo() *PttShortVideo_PttShortVideoFileInfo {
	if x != nil {
		return x.Msg_PttShortVideoFileInfo
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetAgentType() uint32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetBusinessType() uint32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetSubBusinessType() uint32 {
	if x != nil {
		return x.SubBusinessType
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadReq) GetFlagSupportLargeSize() uint32 {
	if x != nil {
		return x.FlagSupportLargeSize
	}
	return 0
}

// PttShortVideoUploadResp is the message type for the PttShortVideoUploadResp.
type PttShortVideo_PttShortVideoUploadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode                      int32                                `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`                                                                         // int32_ret_code
	RetMsg                       string                               `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`                                                                             // str_ret_msg
	SameAreaOutAddr              []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,3,rep,name=same_area_out_addr,json=sameAreaOutAddr,proto3" json:"same_area_out_addr,omitempty"`                                              // rpt_same_area_out_addr
	DiffAreaOutAddr              []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,4,rep,name=diff_area_out_addr,json=diffAreaOutAddr,proto3" json:"diff_area_out_addr,omitempty"`                                              // rpt_diff_area_out_addr
	Fileid                       string                               `protobuf:"bytes,5,opt,name=fileid,proto3" json:"fileid,omitempty"`                                                                                           // str_fileid
	Ukey                         []byte                               `protobuf:"bytes,6,opt,name=ukey,proto3" json:"ukey,omitempty"`                                                                                               // bytes_ukey
	FileExist                    uint32                               `protobuf:"varint,7,opt,name=file_exist,json=fileExist,proto3" json:"file_exist,omitempty"`                                                                   // uint32_file_exist
	SameAreaInnerAddr            []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,8,rep,name=same_area_inner_addr,json=sameAreaInnerAddr,proto3" json:"same_area_inner_addr,omitempty"`                                        // rpt_same_area_inner_addr
	DiffAreaInnerAddr            []*PttShortVideo_PttShortVideoIpList `protobuf:"bytes,9,rep,name=diff_area_inner_addr,json=diffAreaInnerAddr,proto3" json:"diff_area_inner_addr,omitempty"`                                        // rpt_diff_area_inner_addr
	DataHole                     []*PttShortVideo_DataHole            `protobuf:"bytes,10,rep,name=data_hole,json=dataHole,proto3" json:"data_hole,omitempty"`                                                                      // rpt_data_hole
	EncryptKey                   []byte                               `protobuf:"bytes,11,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`                                                                // bytes_encrypt_key
	IsHotFile                    uint32                               `protobuf:"varint,12,opt,name=is_hot_file,json=isHotFile,proto3" json:"is_hot_file,omitempty"`                                                                // uint32_is_hot_file
	LongVideoCarryWatchPointType uint32                               `protobuf:"varint,13,opt,name=long_video_carry_watch_point_type,json=longVideoCarryWatchPointType,proto3" json:"long_video_carry_watch_point_type,omitempty"` // uint32_long_video_carry_watch_point_type
}

func (x *PttShortVideo_PttShortVideoUploadResp) Reset() {
	*x = PttShortVideo_PttShortVideoUploadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_PttShortVideoUploadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_PttShortVideoUploadResp) ProtoMessage() {}

func (x *PttShortVideo_PttShortVideoUploadResp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_PttShortVideoUploadResp.ProtoReflect.Descriptor instead.
func (*PttShortVideo_PttShortVideoUploadResp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 12}
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetSameAreaOutAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.SameAreaOutAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetDiffAreaOutAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.DiffAreaOutAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetFileid() string {
	if x != nil {
		return x.Fileid
	}
	return ""
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetUkey() []byte {
	if x != nil {
		return x.Ukey
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetFileExist() uint32 {
	if x != nil {
		return x.FileExist
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetSameAreaInnerAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.SameAreaInnerAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetDiffAreaInnerAddr() []*PttShortVideo_PttShortVideoIpList {
	if x != nil {
		return x.DiffAreaInnerAddr
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetDataHole() []*PttShortVideo_DataHole {
	if x != nil {
		return x.DataHole
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetIsHotFile() uint32 {
	if x != nil {
		return x.IsHotFile
	}
	return 0
}

func (x *PttShortVideo_PttShortVideoUploadResp) GetLongVideoCarryWatchPointType() uint32 {
	if x != nil {
		return x.LongVideoCarryWatchPointType
	}
	return 0
}

// QuicParameter is the message type for the QuicParameter.
type PttShortVideo_QuicParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableQuic    uint32 `protobuf:"varint,1,opt,name=enable_quic,json=enableQuic,proto3" json:"enable_quic,omitempty"`          // uint32_enable_quic
	EncryptionVer uint32 `protobuf:"varint,2,opt,name=encryption_ver,json=encryptionVer,proto3" json:"encryption_ver,omitempty"` // uint32_encryption_ver
	FecVer        uint32 `protobuf:"varint,3,opt,name=fec_ver,json=fecVer,proto3" json:"fec_ver,omitempty"`                      // uint32_fec_ver
}

func (x *PttShortVideo_QuicParameter) Reset() {
	*x = PttShortVideo_QuicParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_QuicParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_QuicParameter) ProtoMessage() {}

func (x *PttShortVideo_QuicParameter) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_QuicParameter.ProtoReflect.Descriptor instead.
func (*PttShortVideo_QuicParameter) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 13}
}

func (x *PttShortVideo_QuicParameter) GetEnableQuic() uint32 {
	if x != nil {
		return x.EnableQuic
	}
	return 0
}

func (x *PttShortVideo_QuicParameter) GetEncryptionVer() uint32 {
	if x != nil {
		return x.EncryptionVer
	}
	return 0
}

func (x *PttShortVideo_QuicParameter) GetFecVer() uint32 {
	if x != nil {
		return x.FecVer
	}
	return 0
}

// ReqBody is the message type for the ReqBody.
type PttShortVideo_ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd                           uint32                                   `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`                                                                                     // uint32_cmd
	Seq                           uint32                                   `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                                                                                     // uint32_seq
	Msg_PttShortVideoUpload_Req   *PttShortVideo_PttShortVideoUploadReq    `protobuf:"bytes,3,opt,name=msg_PttShortVideoUpload_Req,json=msgPttShortVideoUploadReq,proto3" json:"msg_PttShortVideoUpload_Req,omitempty"`       // msg_PttShortVideoUpload_Req
	Msg_PttShortVideoDownload_Req *PttShortVideo_PttShortVideoDownloadReq  `protobuf:"bytes,4,opt,name=msg_PttShortVideoDownload_Req,json=msgPttShortVideoDownloadReq,proto3" json:"msg_PttShortVideoDownload_Req,omitempty"` // msg_PttShortVideoDownload_Req
	MsgShortVideoRetweetReq       []*PttShortVideo_PttShortVideoRetweetReq `protobuf:"bytes,5,rep,name=msg_short_video_retweet_req,json=msgShortVideoRetweetReq,proto3" json:"msg_short_video_retweet_req,omitempty"`         // rpt_msg_short_video_retweet_req
	MsgShortVideoDeleteReq        []*PttShortVideo_PttShortVideoDeleteReq  `protobuf:"bytes,6,rep,name=msg_short_video_delete_req,json=msgShortVideoDeleteReq,proto3" json:"msg_short_video_delete_req,omitempty"`            // rpt_msg_short_video_delete_req
	MsgExtensionReq               []*PttShortVideo_ExtensionReq            `protobuf:"bytes,100,rep,name=msg_extension_req,json=msgExtensionReq,proto3" json:"msg_extension_req,omitempty"`                                   // rpt_msg_extension_req
}

func (x *PttShortVideo_ReqBody) Reset() {
	*x = PttShortVideo_ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_ReqBody) ProtoMessage() {}

func (x *PttShortVideo_ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_ReqBody.ProtoReflect.Descriptor instead.
func (*PttShortVideo_ReqBody) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 14}
}

func (x *PttShortVideo_ReqBody) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *PttShortVideo_ReqBody) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PttShortVideo_ReqBody) GetMsg_PttShortVideoUpload_Req() *PttShortVideo_PttShortVideoUploadReq {
	if x != nil {
		return x.Msg_PttShortVideoUpload_Req
	}
	return nil
}

func (x *PttShortVideo_ReqBody) GetMsg_PttShortVideoDownload_Req() *PttShortVideo_PttShortVideoDownloadReq {
	if x != nil {
		return x.Msg_PttShortVideoDownload_Req
	}
	return nil
}

func (x *PttShortVideo_ReqBody) GetMsgShortVideoRetweetReq() []*PttShortVideo_PttShortVideoRetweetReq {
	if x != nil {
		return x.MsgShortVideoRetweetReq
	}
	return nil
}

func (x *PttShortVideo_ReqBody) GetMsgShortVideoDeleteReq() []*PttShortVideo_PttShortVideoDeleteReq {
	if x != nil {
		return x.MsgShortVideoDeleteReq
	}
	return nil
}

func (x *PttShortVideo_ReqBody) GetMsgExtensionReq() []*PttShortVideo_ExtensionReq {
	if x != nil {
		return x.MsgExtensionReq
	}
	return nil
}

// RspBody is the message type for the RspBody.
type PttShortVideo_RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd                            uint32                                    `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`                                                                                        // uint32_cmd
	Seq                            uint32                                    `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                                                                                        // uint32_seq
	Msg_PttShortVideoUpload_Resp   *PttShortVideo_PttShortVideoUploadResp    `protobuf:"bytes,3,opt,name=msg_PttShortVideoUpload_Resp,json=msgPttShortVideoUploadResp,proto3" json:"msg_PttShortVideoUpload_Resp,omitempty"`       // msg_PttShortVideoUpload_Resp
	Msg_PttShortVideoDownload_Resp *PttShortVideo_PttShortVideoDownloadResp  `protobuf:"bytes,4,opt,name=msg_PttShortVideoDownload_Resp,json=msgPttShortVideoDownloadResp,proto3" json:"msg_PttShortVideoDownload_Resp,omitempty"` // msg_PttShortVideoDownload_Resp
	MsgShortVideoRetweetResp       []*PttShortVideo_PttShortVideoRetweetResp `protobuf:"bytes,5,rep,name=msg_short_video_retweet_resp,json=msgShortVideoRetweetResp,proto3" json:"msg_short_video_retweet_resp,omitempty"`         // rpt_msg_short_video_retweet_resp
	MsgShortVideoDeleteResp        []*PttShortVideo_PttShortVideoDeleteResp  `protobuf:"bytes,6,rep,name=msg_short_video_delete_resp,json=msgShortVideoDeleteResp,proto3" json:"msg_short_video_delete_resp,omitempty"`            // rpt_msg_short_video_delete_resp
	ChangeChannel                  uint32                                    `protobuf:"varint,100,opt,name=change_channel,json=changeChannel,proto3" json:"change_channel,omitempty"`                                             // uint32_change_channel
	AllowRetry                     uint32                                    `protobuf:"varint,101,opt,name=allow_retry,json=allowRetry,proto3" json:"allow_retry,omitempty"`                                                      // uint32_allow_retry
}

func (x *PttShortVideo_RspBody) Reset() {
	*x = PttShortVideo_RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PttShortVideo_RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PttShortVideo_RspBody) ProtoMessage() {}

func (x *PttShortVideo_RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_ptt_short_video_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PttShortVideo_RspBody.ProtoReflect.Descriptor instead.
func (*PttShortVideo_RspBody) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP(), []int{0, 15}
}

func (x *PttShortVideo_RspBody) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *PttShortVideo_RspBody) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PttShortVideo_RspBody) GetMsg_PttShortVideoUpload_Resp() *PttShortVideo_PttShortVideoUploadResp {
	if x != nil {
		return x.Msg_PttShortVideoUpload_Resp
	}
	return nil
}

func (x *PttShortVideo_RspBody) GetMsg_PttShortVideoDownload_Resp() *PttShortVideo_PttShortVideoDownloadResp {
	if x != nil {
		return x.Msg_PttShortVideoDownload_Resp
	}
	return nil
}

func (x *PttShortVideo_RspBody) GetMsgShortVideoRetweetResp() []*PttShortVideo_PttShortVideoRetweetResp {
	if x != nil {
		return x.MsgShortVideoRetweetResp
	}
	return nil
}

func (x *PttShortVideo_RspBody) GetMsgShortVideoDeleteResp() []*PttShortVideo_PttShortVideoDeleteResp {
	if x != nil {
		return x.MsgShortVideoDeleteResp
	}
	return nil
}

func (x *PttShortVideo_RspBody) GetChangeChannel() uint32 {
	if x != nil {
		return x.ChangeChannel
	}
	return 0
}

func (x *PttShortVideo_RspBody) GetAllowRetry() uint32 {
	if x != nil {
		return x.AllowRetry
	}
	return 0
}

var File_daemon_message_pb_ptt_short_video_proto protoreflect.FileDescriptor

var file_daemon_message_pb_ptt_short_video_proto_rawDesc = []byte{
	0x0a, 0x27, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x70, 0x62, 0x2f, 0x70, 0x74, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x2f, 0x0a, 0x0d, 0x50, 0x74,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x1a, 0x32, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a,
	0x4d, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x42, 0x75, 0x73, 0x69, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x1a, 0x94,
	0x01, 0x0a, 0x11, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x76, 0x36, 0x18, 0x15, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x76, 0x36, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x9c, 0x02, 0x0a, 0x16, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x75, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12,
	0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x4d, 0x0a, 0x17, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x1a, 0xe8, 0x04, 0x0a, 0x18, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x75, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12,
	0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x72, 0x65, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x48, 0x6f, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x6c, 0x61, 0x67, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a, 0x1d,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x69, 0x63,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x19, 0x66, 0x6c, 0x61, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0xb3,
	0x05, 0x0a, 0x19, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x4f, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6f, 0x75,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50,
	0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0f, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x4f, 0x0a, 0x12, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x6b, 0x65,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12,
	0x53, 0x0a, 0x14, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x11, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x53, 0x0a, 0x14, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x4c, 0x0a, 0x11, 0x6d, 0x73, 0x67,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x1d, 0x66, 0x6c, 0x61, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x19, 0x66, 0x6c, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x51, 0x75, 0x69, 0x63, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x51, 0x75, 0x69, 0x63,
	0x50, 0x61, 0x72, 0x61, 0x1a, 0xf8, 0x03, 0x0a, 0x15, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d,
	0x64, 0x35, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x64, 0x35, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x4d, 0x64,
	0x35, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x64,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x1a,
	0x39, 0x0a, 0x13, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xec, 0x03, 0x0a, 0x17, 0x50,
	0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x75,
	0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f,
	0x42, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x6d, 0x73, 0x67,
	0x5f, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x50,
	0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x18, 0x6d, 0x73, 0x67, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x14, 0x66, 0x6c, 0x61, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x61, 0x72, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x84, 0x05, 0x0a, 0x18, 0x50, 0x74,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x4f, 0x0a, 0x12, 0x73, 0x61,
	0x6d, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x73, 0x61, 0x6d, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x4f, 0x0a, 0x12, 0x64,
	0x69, 0x66, 0x66, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x64, 0x69, 0x66,
	0x66, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x75, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x14, 0x73, 0x61, 0x6d, 0x65, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x73, 0x61, 0x6d, 0x65, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x53, 0x0a, 0x14,
	0x64, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11,
	0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x68, 0x6f,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x73,
	0x48, 0x6f, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x21, 0x6c, 0x6f, 0x6e, 0x67, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x1c, 0x6c, 0x6f, 0x6e, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x72,
	0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0xd0, 0x03, 0x0a, 0x16, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x75, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x6d, 0x73, 0x67,
	0x5f, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x50,
	0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x18, 0x6d, 0x73, 0x67, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x17,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x61, 0x72,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x66,
	0x6c, 0x61, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x1a, 0xa4, 0x05, 0x0a, 0x17, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x4f, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0f, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x4f, 0x0a, 0x12, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x6b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x12, 0x53, 0x0a, 0x14, 0x73, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50,
	0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x11, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x53, 0x0a, 0x14, 0x64, 0x69, 0x66, 0x66, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x47, 0x0a, 0x21, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x6c, 0x6f,
	0x6e, 0x67, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x72, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x70, 0x0a, 0x0d, 0x51, 0x75,
	0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x51, 0x75, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x65, 0x63, 0x56, 0x65, 0x72, 0x1a, 0x93, 0x04, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x65, 0x0a, 0x1b,
	0x6d, 0x73, 0x67, 0x5f, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x52, 0x19, 0x6d, 0x73, 0x67, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x6b, 0x0a, 0x1d, 0x6d, 0x73, 0x67, 0x5f, 0x50, 0x74, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x52, 0x1b, 0x6d, 0x73, 0x67, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x64, 0x0a, 0x1b, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x72, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x52, 0x17, 0x6d,
	0x73, 0x67, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x61, 0x0a, 0x1a, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x16, 0x6d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x73, 0x67,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x64,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x9e, 0x04, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x12, 0x68, 0x0a, 0x1c, 0x6d, 0x73, 0x67, 0x5f, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x1a, 0x6d, 0x73, 0x67, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6e, 0x0a, 0x1e,
	0x6d, 0x73, 0x67, 0x5f, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x1c,
	0x6d, 0x73, 0x67, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x1c,
	0x6d, 0x73, 0x67, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x72, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x18, 0x6d, 0x73, 0x67,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1b, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x50, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x50, 0x74, 0x74, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x17, 0x6d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x67, 0x75, 0x69, 0x6e,
	0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_daemon_message_pb_ptt_short_video_proto_rawDescOnce sync.Once
	file_daemon_message_pb_ptt_short_video_proto_rawDescData = file_daemon_message_pb_ptt_short_video_proto_rawDesc
)

func file_daemon_message_pb_ptt_short_video_proto_rawDescGZIP() []byte {
	file_daemon_message_pb_ptt_short_video_proto_rawDescOnce.Do(func() {
		file_daemon_message_pb_ptt_short_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_message_pb_ptt_short_video_proto_rawDescData)
	})
	return file_daemon_message_pb_ptt_short_video_proto_rawDescData
}

var file_daemon_message_pb_ptt_short_video_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_daemon_message_pb_ptt_short_video_proto_goTypes = []interface{}{
	(*PttShortVideo)(nil),                           // 0: PttShortVideo
	(*PttShortVideo_DataHole)(nil),                  // 1: PttShortVideo.DataHole
	(*PttShortVideo_ExtensionReq)(nil),              // 2: PttShortVideo.ExtensionReq
	(*PttShortVideo_PttShortVideoAddr)(nil),         // 3: PttShortVideo.PttShortVideoAddr
	(*PttShortVideo_PttShortVideoDeleteReq)(nil),    // 4: PttShortVideo.PttShortVideoDeleteReq
	(*PttShortVideo_PttShortVideoDeleteResp)(nil),   // 5: PttShortVideo.PttShortVideoDeleteResp
	(*PttShortVideo_PttShortVideoDownloadReq)(nil),  // 6: PttShortVideo.PttShortVideoDownloadReq
	(*PttShortVideo_PttShortVideoDownloadResp)(nil), // 7: PttShortVideo.PttShortVideoDownloadResp
	(*PttShortVideo_PttShortVideoFileInfo)(nil),     // 8: PttShortVideo.PttShortVideoFileInfo
	(*PttShortVideo_PttShortVideoIpList)(nil),       // 9: PttShortVideo.PttShortVideoIpList
	(*PttShortVideo_PttShortVideoRetweetReq)(nil),   // 10: PttShortVideo.PttShortVideoRetweetReq
	(*PttShortVideo_PttShortVideoRetweetResp)(nil),  // 11: PttShortVideo.PttShortVideoRetweetResp
	(*PttShortVideo_PttShortVideoUploadReq)(nil),    // 12: PttShortVideo.PttShortVideoUploadReq
	(*PttShortVideo_PttShortVideoUploadResp)(nil),   // 13: PttShortVideo.PttShortVideoUploadResp
	(*PttShortVideo_QuicParameter)(nil),             // 14: PttShortVideo.QuicParameter
	(*PttShortVideo_ReqBody)(nil),                   // 15: PttShortVideo.ReqBody
	(*PttShortVideo_RspBody)(nil),                   // 16: PttShortVideo.RspBody
}
var file_daemon_message_pb_ptt_short_video_proto_depIdxs = []int32{
	9,  // 0: PttShortVideo.PttShortVideoDownloadResp.same_area_out_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 1: PttShortVideo.PttShortVideoDownloadResp.diff_area_out_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 2: PttShortVideo.PttShortVideoDownloadResp.same_area_inner_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 3: PttShortVideo.PttShortVideoDownloadResp.diff_area_inner_addr:type_name -> PttShortVideo.PttShortVideoIpList
	3,  // 4: PttShortVideo.PttShortVideoDownloadResp.msg_download_addr:type_name -> PttShortVideo.PttShortVideoAddr
	8,  // 5: PttShortVideo.PttShortVideoRetweetReq.msg_PttShortVideoFileInfo:type_name -> PttShortVideo.PttShortVideoFileInfo
	9,  // 6: PttShortVideo.PttShortVideoRetweetResp.same_area_out_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 7: PttShortVideo.PttShortVideoRetweetResp.diff_area_out_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 8: PttShortVideo.PttShortVideoRetweetResp.same_area_inner_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 9: PttShortVideo.PttShortVideoRetweetResp.diff_area_inner_addr:type_name -> PttShortVideo.PttShortVideoIpList
	1,  // 10: PttShortVideo.PttShortVideoRetweetResp.data_hole:type_name -> PttShortVideo.DataHole
	8,  // 11: PttShortVideo.PttShortVideoUploadReq.msg_PttShortVideoFileInfo:type_name -> PttShortVideo.PttShortVideoFileInfo
	9,  // 12: PttShortVideo.PttShortVideoUploadResp.same_area_out_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 13: PttShortVideo.PttShortVideoUploadResp.diff_area_out_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 14: PttShortVideo.PttShortVideoUploadResp.same_area_inner_addr:type_name -> PttShortVideo.PttShortVideoIpList
	9,  // 15: PttShortVideo.PttShortVideoUploadResp.diff_area_inner_addr:type_name -> PttShortVideo.PttShortVideoIpList
	1,  // 16: PttShortVideo.PttShortVideoUploadResp.data_hole:type_name -> PttShortVideo.DataHole
	12, // 17: PttShortVideo.ReqBody.msg_PttShortVideoUpload_Req:type_name -> PttShortVideo.PttShortVideoUploadReq
	6,  // 18: PttShortVideo.ReqBody.msg_PttShortVideoDownload_Req:type_name -> PttShortVideo.PttShortVideoDownloadReq
	10, // 19: PttShortVideo.ReqBody.msg_short_video_retweet_req:type_name -> PttShortVideo.PttShortVideoRetweetReq
	4,  // 20: PttShortVideo.ReqBody.msg_short_video_delete_req:type_name -> PttShortVideo.PttShortVideoDeleteReq
	2,  // 21: PttShortVideo.ReqBody.msg_extension_req:type_name -> PttShortVideo.ExtensionReq
	13, // 22: PttShortVideo.RspBody.msg_PttShortVideoUpload_Resp:type_name -> PttShortVideo.PttShortVideoUploadResp
	7,  // 23: PttShortVideo.RspBody.msg_PttShortVideoDownload_Resp:type_name -> PttShortVideo.PttShortVideoDownloadResp
	11, // 24: PttShortVideo.RspBody.msg_short_video_retweet_resp:type_name -> PttShortVideo.PttShortVideoRetweetResp
	5,  // 25: PttShortVideo.RspBody.msg_short_video_delete_resp:type_name -> PttShortVideo.PttShortVideoDeleteResp
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_daemon_message_pb_ptt_short_video_proto_init() }
func file_daemon_message_pb_ptt_short_video_proto_init() {
	if File_daemon_message_pb_ptt_short_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_DataHole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_ExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoDownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoDownloadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoIpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoRetweetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoRetweetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoUploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_PttShortVideoUploadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_QuicParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_ptt_short_video_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PttShortVideo_RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_message_pb_ptt_short_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_message_pb_ptt_short_video_proto_goTypes,
		DependencyIndexes: file_daemon_message_pb_ptt_short_video_proto_depIdxs,
		MessageInfos:      file_daemon_message_pb_ptt_short_video_proto_msgTypes,
	}.Build()
	File_daemon_message_pb_ptt_short_video_proto = out.File
	file_daemon_message_pb_ptt_short_video_proto_rawDesc = nil
	file_daemon_message_pb_ptt_short_video_proto_goTypes = nil
	file_daemon_message_pb_ptt_short_video_proto_depIdxs = nil
}
