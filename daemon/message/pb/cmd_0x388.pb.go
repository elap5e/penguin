// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/message/pb/cmd_0x388.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1298im.p1299cs.cmd0x388.C72417cmd0x388
//
// C72417cmd0x388 is the message type for the C72417cmd0x388.
type Cmd0X388 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cmd0X388) Reset() {
	*x = Cmd0X388{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388) ProtoMessage() {}

func (x *Cmd0X388) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388.ProtoReflect.Descriptor instead.
func (*Cmd0X388) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0}
}

// DelImgReq is the message type for the DelImgReq.
type Cmd0X388_DelImgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcUin          uint64 `protobuf:"varint,1,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                              // uint64_src_uin
	DstUin          uint64 `protobuf:"varint,2,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                              // uint64_dst_uin
	ReqTerm         uint32 `protobuf:"varint,3,opt,name=req_term,json=reqTerm,proto3" json:"req_term,omitempty"`                           // uint32_req_term
	ReqPlatformType uint32 `protobuf:"varint,4,opt,name=req_platform_type,json=reqPlatformType,proto3" json:"req_platform_type,omitempty"` // uint32_req_platform_type
	BuType          uint32 `protobuf:"varint,5,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                              // uint32_bu_type
	BuildVer        []byte `protobuf:"bytes,6,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`                         // bytes_build_ver
	FileResid       []byte `protobuf:"bytes,7,opt,name=file_resid,json=fileResid,proto3" json:"file_resid,omitempty"`                      // bytes_file_resid
	PicWidth        uint32 `protobuf:"varint,8,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`                        // uint32_pic_width
	PicHeight       uint32 `protobuf:"varint,9,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`                     // uint32_pic_height
}

func (x *Cmd0X388_DelImgReq) Reset() {
	*x = Cmd0X388_DelImgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_DelImgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_DelImgReq) ProtoMessage() {}

func (x *Cmd0X388_DelImgReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_DelImgReq.ProtoReflect.Descriptor instead.
func (*Cmd0X388_DelImgReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Cmd0X388_DelImgReq) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *Cmd0X388_DelImgReq) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0X388_DelImgReq) GetReqTerm() uint32 {
	if x != nil {
		return x.ReqTerm
	}
	return 0
}

func (x *Cmd0X388_DelImgReq) GetReqPlatformType() uint32 {
	if x != nil {
		return x.ReqPlatformType
	}
	return 0
}

func (x *Cmd0X388_DelImgReq) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0X388_DelImgReq) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0X388_DelImgReq) GetFileResid() []byte {
	if x != nil {
		return x.FileResid
	}
	return nil
}

func (x *Cmd0X388_DelImgReq) GetPicWidth() uint32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *Cmd0X388_DelImgReq) GetPicHeight() uint32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

// DelImgRsp is the message type for the DelImgRsp.
type Cmd0X388_DelImgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                       // uint32_result
	FailMsg   []byte `protobuf:"bytes,2,opt,name=fail_msg,json=failMsg,proto3" json:"fail_msg,omitempty"`       // bytes_fail_msg
	FileResid []byte `protobuf:"bytes,3,opt,name=file_resid,json=fileResid,proto3" json:"file_resid,omitempty"` // bytes_file_resid
}

func (x *Cmd0X388_DelImgRsp) Reset() {
	*x = Cmd0X388_DelImgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_DelImgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_DelImgRsp) ProtoMessage() {}

func (x *Cmd0X388_DelImgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_DelImgRsp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_DelImgRsp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Cmd0X388_DelImgRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0X388_DelImgRsp) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

func (x *Cmd0X388_DelImgRsp) GetFileResid() []byte {
	if x != nil {
		return x.FileResid
	}
	return nil
}

// ExpRoamExtendInfo is the message type for the ExpRoamExtendInfo.
type Cmd0X388_ExpRoamExtendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resid []byte `protobuf:"bytes,1,opt,name=resid,proto3" json:"resid,omitempty"` // bytes_resid
}

func (x *Cmd0X388_ExpRoamExtendInfo) Reset() {
	*x = Cmd0X388_ExpRoamExtendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_ExpRoamExtendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_ExpRoamExtendInfo) ProtoMessage() {}

func (x *Cmd0X388_ExpRoamExtendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_ExpRoamExtendInfo.ProtoReflect.Descriptor instead.
func (*Cmd0X388_ExpRoamExtendInfo) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Cmd0X388_ExpRoamExtendInfo) GetResid() []byte {
	if x != nil {
		return x.Resid
	}
	return nil
}

// ExpRoamPicInfo is the message type for the ExpRoamPicInfo.
type Cmd0X388_ExpRoamPicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopFlag uint32 `protobuf:"varint,1,opt,name=shop_flag,json=shopFlag,proto3" json:"shop_flag,omitempty"` // uint32_shop_flag
	PkgId    uint32 `protobuf:"varint,2,opt,name=pkg_id,json=pkgId,proto3" json:"pkg_id,omitempty"`          // uint32_pkg_id
	PicId    []byte `protobuf:"bytes,3,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`           // bytes_pic_id
}

func (x *Cmd0X388_ExpRoamPicInfo) Reset() {
	*x = Cmd0X388_ExpRoamPicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_ExpRoamPicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_ExpRoamPicInfo) ProtoMessage() {}

func (x *Cmd0X388_ExpRoamPicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_ExpRoamPicInfo.ProtoReflect.Descriptor instead.
func (*Cmd0X388_ExpRoamPicInfo) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Cmd0X388_ExpRoamPicInfo) GetShopFlag() uint32 {
	if x != nil {
		return x.ShopFlag
	}
	return 0
}

func (x *Cmd0X388_ExpRoamPicInfo) GetPkgId() uint32 {
	if x != nil {
		return x.PkgId
	}
	return 0
}

func (x *Cmd0X388_ExpRoamPicInfo) GetPicId() []byte {
	if x != nil {
		return x.PicId
	}
	return nil
}

// ExtensionCommPicTryUp is the message type for the ExtensionCommPicTryUp.
type Cmd0X388_ExtensionCommPicTryUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extinfo [][]byte `protobuf:"bytes,1,rep,name=extinfo,proto3" json:"extinfo,omitempty"` // rpt_bytes_extinfo
}

func (x *Cmd0X388_ExtensionCommPicTryUp) Reset() {
	*x = Cmd0X388_ExtensionCommPicTryUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_ExtensionCommPicTryUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_ExtensionCommPicTryUp) ProtoMessage() {}

func (x *Cmd0X388_ExtensionCommPicTryUp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_ExtensionCommPicTryUp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_ExtensionCommPicTryUp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Cmd0X388_ExtensionCommPicTryUp) GetExtinfo() [][]byte {
	if x != nil {
		return x.Extinfo
	}
	return nil
}

// ExtensionExpRoamTryUp is the message type for the ExtensionExpRoamTryUp.
type Cmd0X388_ExtensionExpRoamTryUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgExproamPicInfo []*Cmd0X388_ExpRoamPicInfo `protobuf:"bytes,1,rep,name=msg_exproam_pic_info,json=msgExproamPicInfo,proto3" json:"msg_exproam_pic_info,omitempty"` // rpt_msg_exproam_pic_info
}

func (x *Cmd0X388_ExtensionExpRoamTryUp) Reset() {
	*x = Cmd0X388_ExtensionExpRoamTryUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_ExtensionExpRoamTryUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_ExtensionExpRoamTryUp) ProtoMessage() {}

func (x *Cmd0X388_ExtensionExpRoamTryUp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_ExtensionExpRoamTryUp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_ExtensionExpRoamTryUp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Cmd0X388_ExtensionExpRoamTryUp) GetMsgExproamPicInfo() []*Cmd0X388_ExpRoamPicInfo {
	if x != nil {
		return x.MsgExproamPicInfo
	}
	return nil
}

// GetImgUrlReq is the message type for the GetImgUrlReq.
type Cmd0X388_GetImgUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                      // uint64_group_code
	DstUin          uint64 `protobuf:"varint,2,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                               // uint64_dst_uin
	Fileid          uint64 `protobuf:"varint,3,opt,name=fileid,proto3" json:"fileid,omitempty"`                                             // uint64_fileid
	FileMd5         []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                             // bytes_file_md5
	UrlFlag         uint32 `protobuf:"varint,5,opt,name=url_flag,json=urlFlag,proto3" json:"url_flag,omitempty"`                            // uint32_url_flag
	UrlType         uint32 `protobuf:"varint,6,opt,name=url_type,json=urlType,proto3" json:"url_type,omitempty"`                            // uint32_url_type
	ReqTerm         uint32 `protobuf:"varint,7,opt,name=req_term,json=reqTerm,proto3" json:"req_term,omitempty"`                            // uint32_req_term
	ReqPlatformType uint32 `protobuf:"varint,8,opt,name=req_platform_type,json=reqPlatformType,proto3" json:"req_platform_type,omitempty"`  // uint32_req_platform_type
	InnerIp         uint32 `protobuf:"varint,9,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`                            // uint32_inner_ip
	BuType          uint32 `protobuf:"varint,10,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                              // uint32_bu_type
	BuildVer        []byte `protobuf:"bytes,11,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`                         // bytes_build_ver
	FileCode        uint64 `protobuf:"varint,12,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`                        // uint64_file_id
	FileSize        uint64 `protobuf:"varint,13,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                        // uint64_file_size
	OriginalPic     uint32 `protobuf:"varint,14,opt,name=original_pic,json=originalPic,proto3" json:"original_pic,omitempty"`               // uint32_original_pic
	RetryReq        uint32 `protobuf:"varint,15,opt,name=retry_req,json=retryReq,proto3" json:"retry_req,omitempty"`                        // uint32_retry_req
	FileHeight      uint32 `protobuf:"varint,16,opt,name=file_height,json=fileHeight,proto3" json:"file_height,omitempty"`                  // uint32_file_height
	FileWidth       uint32 `protobuf:"varint,17,opt,name=file_width,json=fileWidth,proto3" json:"file_width,omitempty"`                     // uint32_file_width
	PicType         uint32 `protobuf:"varint,18,opt,name=pic_type,json=picType,proto3" json:"pic_type,omitempty"`                           // uint32_pic_type
	PicUpTimestamp  uint32 `protobuf:"varint,19,opt,name=pic_up_timestamp,json=picUpTimestamp,proto3" json:"pic_up_timestamp,omitempty"`    // uint32_pic_up_timestamp
	ReqTransferType uint32 `protobuf:"varint,20,opt,name=req_transfer_type,json=reqTransferType,proto3" json:"req_transfer_type,omitempty"` // uint32_req_transfer_type
	QqmeetGuildId   uint64 `protobuf:"varint,21,opt,name=qqmeet_guild_id,json=qqmeetGuildId,proto3" json:"qqmeet_guild_id,omitempty"`       // uint64_qqmeet_guild_id
	QqmeetChannelId uint64 `protobuf:"varint,22,opt,name=qqmeet_channel_id,json=qqmeetChannelId,proto3" json:"qqmeet_channel_id,omitempty"` // uint64_qqmeet_channel_id
	DownloadIndex   []byte `protobuf:"bytes,23,opt,name=download_index,json=downloadIndex,proto3" json:"download_index,omitempty"`          // bytes_download_index
}

func (x *Cmd0X388_GetImgUrlReq) Reset() {
	*x = Cmd0X388_GetImgUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_GetImgUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_GetImgUrlReq) ProtoMessage() {}

func (x *Cmd0X388_GetImgUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_GetImgUrlReq.ProtoReflect.Descriptor instead.
func (*Cmd0X388_GetImgUrlReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Cmd0X388_GetImgUrlReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetFileid() uint64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlReq) GetUrlFlag() uint32 {
	if x != nil {
		return x.UrlFlag
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetUrlType() uint32 {
	if x != nil {
		return x.UrlType
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetReqTerm() uint32 {
	if x != nil {
		return x.ReqTerm
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetReqPlatformType() uint32 {
	if x != nil {
		return x.ReqPlatformType
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlReq) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetOriginalPic() uint32 {
	if x != nil {
		return x.OriginalPic
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetRetryReq() uint32 {
	if x != nil {
		return x.RetryReq
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetFileHeight() uint32 {
	if x != nil {
		return x.FileHeight
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetFileWidth() uint32 {
	if x != nil {
		return x.FileWidth
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetPicType() uint32 {
	if x != nil {
		return x.PicType
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetPicUpTimestamp() uint32 {
	if x != nil {
		return x.PicUpTimestamp
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetReqTransferType() uint32 {
	if x != nil {
		return x.ReqTransferType
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetQqmeetGuildId() uint64 {
	if x != nil {
		return x.QqmeetGuildId
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetQqmeetChannelId() uint64 {
	if x != nil {
		return x.QqmeetChannelId
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlReq) GetDownloadIndex() []byte {
	if x != nil {
		return x.DownloadIndex
	}
	return nil
}

// GetImgUrlRsp is the message type for the GetImgUrlRsp.
type Cmd0X388_GetImgUrlRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fileid           uint64               `protobuf:"varint,1,opt,name=fileid,proto3" json:"fileid,omitempty"`                                                 // uint64_fileid
	FileMd5          []byte               `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                 // bytes_file_md5
	Result           uint32               `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                                                 // uint32_result
	FailMsg          []byte               `protobuf:"bytes,4,opt,name=fail_msg,json=failMsg,proto3" json:"fail_msg,omitempty"`                                 // bytes_fail_msg
	MsgImgInfo       *Cmd0X388_ImgInfo    `protobuf:"bytes,5,opt,name=msg_img_info,json=msgImgInfo,proto3" json:"msg_img_info,omitempty"`                      // msg_img_info
	ThumbDownUrl     [][]byte             `protobuf:"bytes,6,rep,name=thumb_down_url,json=thumbDownUrl,proto3" json:"thumb_down_url,omitempty"`                // rpt_bytes_thumb_down_url
	OriginalDownUrl  [][]byte             `protobuf:"bytes,7,rep,name=original_down_url,json=originalDownUrl,proto3" json:"original_down_url,omitempty"`       // rpt_bytes_original_down_url
	BigDownUrl       [][]byte             `protobuf:"bytes,8,rep,name=big_down_url,json=bigDownUrl,proto3" json:"big_down_url,omitempty"`                      // rpt_bytes_big_down_url
	DownIp           []uint32             `protobuf:"varint,9,rep,packed,name=down_ip,json=downIp,proto3" json:"down_ip,omitempty"`                            // rpt_uint32_down_ip
	DownPort         []uint32             `protobuf:"varint,10,rep,packed,name=down_port,json=downPort,proto3" json:"down_port,omitempty"`                     // rpt_uint32_down_port
	DownDomain       []byte               `protobuf:"bytes,11,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`                       // bytes_down_domain
	ThumbDownPara    []byte               `protobuf:"bytes,12,opt,name=thumb_down_para,json=thumbDownPara,proto3" json:"thumb_down_para,omitempty"`            // bytes_thumb_down_para
	OriginalDownPara []byte               `protobuf:"bytes,13,opt,name=original_down_para,json=originalDownPara,proto3" json:"original_down_para,omitempty"`   // bytes_original_down_para
	BigDownPara      []byte               `protobuf:"bytes,14,opt,name=big_down_para,json=bigDownPara,proto3" json:"big_down_para,omitempty"`                  // bytes_big_down_para
	FileCode         uint64               `protobuf:"varint,15,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`                            // uint64_file_id
	AutoDownType     uint32               `protobuf:"varint,16,opt,name=auto_down_type,json=autoDownType,proto3" json:"auto_down_type,omitempty"`              // uint32_auto_down_type
	OrderDownType    []uint32             `protobuf:"varint,17,rep,packed,name=order_down_type,json=orderDownType,proto3" json:"order_down_type,omitempty"`    // rpt_uint32_order_down_type
	BigThumbDownPara []byte               `protobuf:"bytes,19,opt,name=big_thumb_down_para,json=bigThumbDownPara,proto3" json:"big_thumb_down_para,omitempty"` // bytes_big_thumb_down_para
	HttpsUrlFlag     uint32               `protobuf:"varint,20,opt,name=https_url_flag,json=httpsUrlFlag,proto3" json:"https_url_flag,omitempty"`              // uint32_https_url_flag
	MsgDownIp6       []*Cmd0X388_IPv6Info `protobuf:"bytes,26,rep,name=msg_down_ip6,json=msgDownIp6,proto3" json:"msg_down_ip6,omitempty"`                     // rpt_msg_down_ip6
	ClientIp6        []byte               `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`                          // bytes_client_ip6
}

func (x *Cmd0X388_GetImgUrlRsp) Reset() {
	*x = Cmd0X388_GetImgUrlRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_GetImgUrlRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_GetImgUrlRsp) ProtoMessage() {}

func (x *Cmd0X388_GetImgUrlRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_GetImgUrlRsp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_GetImgUrlRsp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Cmd0X388_GetImgUrlRsp) GetFileid() uint64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlRsp) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlRsp) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetMsgImgInfo() *Cmd0X388_ImgInfo {
	if x != nil {
		return x.MsgImgInfo
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetThumbDownUrl() [][]byte {
	if x != nil {
		return x.ThumbDownUrl
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetOriginalDownUrl() [][]byte {
	if x != nil {
		return x.OriginalDownUrl
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetBigDownUrl() [][]byte {
	if x != nil {
		return x.BigDownUrl
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetDownIp() []uint32 {
	if x != nil {
		return x.DownIp
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetDownPort() []uint32 {
	if x != nil {
		return x.DownPort
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetThumbDownPara() []byte {
	if x != nil {
		return x.ThumbDownPara
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetOriginalDownPara() []byte {
	if x != nil {
		return x.OriginalDownPara
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetBigDownPara() []byte {
	if x != nil {
		return x.BigDownPara
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlRsp) GetAutoDownType() uint32 {
	if x != nil {
		return x.AutoDownType
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlRsp) GetOrderDownType() []uint32 {
	if x != nil {
		return x.OrderDownType
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetBigThumbDownPara() []byte {
	if x != nil {
		return x.BigThumbDownPara
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetHttpsUrlFlag() uint32 {
	if x != nil {
		return x.HttpsUrlFlag
	}
	return 0
}

func (x *Cmd0X388_GetImgUrlRsp) GetMsgDownIp6() []*Cmd0X388_IPv6Info {
	if x != nil {
		return x.MsgDownIp6
	}
	return nil
}

func (x *Cmd0X388_GetImgUrlRsp) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

// GetPttUrlReq is the message type for the GetPttUrlReq.
type Cmd0X388_GetPttUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                      // uint64_group_code
	DstUin          uint64 `protobuf:"varint,2,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                               // uint64_dst_uin
	Fileid          uint64 `protobuf:"varint,3,opt,name=fileid,proto3" json:"fileid,omitempty"`                                             // uint64_fileid
	FileMd5         []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                             // bytes_file_md5
	ReqTerm         uint32 `protobuf:"varint,5,opt,name=req_term,json=reqTerm,proto3" json:"req_term,omitempty"`                            // uint32_req_term
	ReqPlatformType uint32 `protobuf:"varint,6,opt,name=req_platform_type,json=reqPlatformType,proto3" json:"req_platform_type,omitempty"`  // uint32_req_platform_type
	InnerIp         uint32 `protobuf:"varint,7,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`                            // uint32_inner_ip
	BuType          uint32 `protobuf:"varint,8,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                               // uint32_bu_type
	BuildVer        []byte `protobuf:"bytes,9,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`                          // bytes_build_ver
	FileCode        uint64 `protobuf:"varint,10,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`                        // uint64_file_id
	FileKey         []byte `protobuf:"bytes,11,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                            // bytes_file_key
	Codec           uint32 `protobuf:"varint,12,opt,name=codec,proto3" json:"codec,omitempty"`                                              // uint32_codec
	BuId            uint32 `protobuf:"varint,13,opt,name=bu_id,json=buId,proto3" json:"bu_id,omitempty"`                                    // uint32_bu_id
	ReqTransferType uint32 `protobuf:"varint,14,opt,name=req_transfer_type,json=reqTransferType,proto3" json:"req_transfer_type,omitempty"` // uint32_req_transfer_type
	IsAuto          uint32 `protobuf:"varint,15,opt,name=is_auto,json=isAuto,proto3" json:"is_auto,omitempty"`                              // uint32_is_auto
}

func (x *Cmd0X388_GetPttUrlReq) Reset() {
	*x = Cmd0X388_GetPttUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_GetPttUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_GetPttUrlReq) ProtoMessage() {}

func (x *Cmd0X388_GetPttUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_GetPttUrlReq.ProtoReflect.Descriptor instead.
func (*Cmd0X388_GetPttUrlReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Cmd0X388_GetPttUrlReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetFileid() uint64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlReq) GetReqTerm() uint32 {
	if x != nil {
		return x.ReqTerm
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetReqPlatformType() uint32 {
	if x != nil {
		return x.ReqPlatformType
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlReq) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlReq) GetCodec() uint32 {
	if x != nil {
		return x.Codec
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetBuId() uint32 {
	if x != nil {
		return x.BuId
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetReqTransferType() uint32 {
	if x != nil {
		return x.ReqTransferType
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlReq) GetIsAuto() uint32 {
	if x != nil {
		return x.IsAuto
	}
	return 0
}

// GetPttUrlRsp is the message type for the GetPttUrlRsp.
type Cmd0X388_GetPttUrlRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fileid       uint64               `protobuf:"varint,1,opt,name=fileid,proto3" json:"fileid,omitempty"`                                  // uint64_fileid
	FileMd5      []byte               `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                  // bytes_file_md5
	Result       uint32               `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                                  // uint32_result
	FailMsg      []byte               `protobuf:"bytes,4,opt,name=fail_msg,json=failMsg,proto3" json:"fail_msg,omitempty"`                  // bytes_fail_msg
	DownUrl      [][]byte             `protobuf:"bytes,5,rep,name=down_url,json=downUrl,proto3" json:"down_url,omitempty"`                  // rpt_bytes_down_url
	DownIp       []uint32             `protobuf:"varint,6,rep,packed,name=down_ip,json=downIp,proto3" json:"down_ip,omitempty"`             // rpt_uint32_down_ip
	DownPort     []uint32             `protobuf:"varint,7,rep,packed,name=down_port,json=downPort,proto3" json:"down_port,omitempty"`       // rpt_uint32_down_port
	DownDomain   []byte               `protobuf:"bytes,8,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`         // bytes_down_domain
	DownPara     []byte               `protobuf:"bytes,9,opt,name=down_para,json=downPara,proto3" json:"down_para,omitempty"`               // bytes_down_para
	FileCode     uint64               `protobuf:"varint,10,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`             // uint64_file_id
	TransferType uint32               `protobuf:"varint,11,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"` // uint32_transfer_type
	AllowRetry   uint32               `protobuf:"varint,12,opt,name=allow_retry,json=allowRetry,proto3" json:"allow_retry,omitempty"`       // uint32_allow_retry
	MsgDownIp6   []*Cmd0X388_IPv6Info `protobuf:"bytes,26,rep,name=msg_down_ip6,json=msgDownIp6,proto3" json:"msg_down_ip6,omitempty"`      // rpt_msg_down_ip6
	ClientIp6    []byte               `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`           // bytes_client_ip6
	Domain       string               `protobuf:"bytes,28,opt,name=domain,proto3" json:"domain,omitempty"`                                  // rpt_str_domain
}

func (x *Cmd0X388_GetPttUrlRsp) Reset() {
	*x = Cmd0X388_GetPttUrlRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_GetPttUrlRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_GetPttUrlRsp) ProtoMessage() {}

func (x *Cmd0X388_GetPttUrlRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_GetPttUrlRsp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_GetPttUrlRsp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Cmd0X388_GetPttUrlRsp) GetFileid() uint64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlRsp) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlRsp) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetDownUrl() [][]byte {
	if x != nil {
		return x.DownUrl
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetDownIp() []uint32 {
	if x != nil {
		return x.DownIp
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetDownPort() []uint32 {
	if x != nil {
		return x.DownPort
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetDownPara() []byte {
	if x != nil {
		return x.DownPara
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlRsp) GetTransferType() uint32 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlRsp) GetAllowRetry() uint32 {
	if x != nil {
		return x.AllowRetry
	}
	return 0
}

func (x *Cmd0X388_GetPttUrlRsp) GetMsgDownIp6() []*Cmd0X388_IPv6Info {
	if x != nil {
		return x.MsgDownIp6
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

func (x *Cmd0X388_GetPttUrlRsp) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// IPv6Info is the message type for the IPv6Info.
type Cmd0X388_IPv6Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip6  []byte `protobuf:"bytes,1,opt,name=ip6,proto3" json:"ip6,omitempty"`    // bytes_ip6
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"` // uint32_port
}

func (x *Cmd0X388_IPv6Info) Reset() {
	*x = Cmd0X388_IPv6Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_IPv6Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_IPv6Info) ProtoMessage() {}

func (x *Cmd0X388_IPv6Info) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_IPv6Info.ProtoReflect.Descriptor instead.
func (*Cmd0X388_IPv6Info) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Cmd0X388_IPv6Info) GetIp6() []byte {
	if x != nil {
		return x.Ip6
	}
	return nil
}

func (x *Cmd0X388_IPv6Info) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// ImgInfo is the message type for the ImgInfo.
type Cmd0X388_ImgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMd5    []byte `protobuf:"bytes,1,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`           // bytes_file_md5
	FileType   uint32 `protobuf:"varint,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`       // uint32_file_type
	FileSize   uint64 `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`       // uint64_file_size
	FileWidth  uint32 `protobuf:"varint,4,opt,name=file_width,json=fileWidth,proto3" json:"file_width,omitempty"`    // uint32_file_width
	FileHeight uint32 `protobuf:"varint,5,opt,name=file_height,json=fileHeight,proto3" json:"file_height,omitempty"` // uint32_file_height
}

func (x *Cmd0X388_ImgInfo) Reset() {
	*x = Cmd0X388_ImgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_ImgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_ImgInfo) ProtoMessage() {}

func (x *Cmd0X388_ImgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_ImgInfo.ProtoReflect.Descriptor instead.
func (*Cmd0X388_ImgInfo) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Cmd0X388_ImgInfo) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_ImgInfo) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *Cmd0X388_ImgInfo) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0X388_ImgInfo) GetFileWidth() uint32 {
	if x != nil {
		return x.FileWidth
	}
	return 0
}

func (x *Cmd0X388_ImgInfo) GetFileHeight() uint32 {
	if x != nil {
		return x.FileHeight
	}
	return 0
}

// PicSize is the message type for the PicSize.
type Cmd0X388_PicSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Original uint32 `protobuf:"varint,1,opt,name=original,proto3" json:"original,omitempty"` // uint32_original
	Thumb    uint32 `protobuf:"varint,2,opt,name=thumb,proto3" json:"thumb,omitempty"`       // uint32_thumb
	High     uint32 `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`         // uint32_high
}

func (x *Cmd0X388_PicSize) Reset() {
	*x = Cmd0X388_PicSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_PicSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_PicSize) ProtoMessage() {}

func (x *Cmd0X388_PicSize) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_PicSize.ProtoReflect.Descriptor instead.
func (*Cmd0X388_PicSize) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Cmd0X388_PicSize) GetOriginal() uint32 {
	if x != nil {
		return x.Original
	}
	return 0
}

func (x *Cmd0X388_PicSize) GetThumb() uint32 {
	if x != nil {
		return x.Thumb
	}
	return 0
}

func (x *Cmd0X388_PicSize) GetHigh() uint32 {
	if x != nil {
		return x.High
	}
	return 0
}

// ReqBody is the message type for the ReqBody.
type Cmd0X388_ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetType         uint32                   `protobuf:"varint,1,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`                            // uint32_net_type
	Subcmd          uint32                   `protobuf:"varint,2,opt,name=subcmd,proto3" json:"subcmd,omitempty"`                                             // uint32_subcmd
	MsgTryupImgReq  []*Cmd0X388_TryUpImgReq  `protobuf:"bytes,3,rep,name=msg_tryup_img_req,json=msgTryupImgReq,proto3" json:"msg_tryup_img_req,omitempty"`    // rpt_msg_tryup_img_req
	MsgGetimgUrlReq []*Cmd0X388_GetImgUrlReq `protobuf:"bytes,4,rep,name=msg_getimg_url_req,json=msgGetimgUrlReq,proto3" json:"msg_getimg_url_req,omitempty"` // rpt_msg_getimg_url_req
	MsgTryupPttReq  []*Cmd0X388_TryUpPttReq  `protobuf:"bytes,5,rep,name=msg_tryup_ptt_req,json=msgTryupPttReq,proto3" json:"msg_tryup_ptt_req,omitempty"`    // rpt_msg_tryup_ptt_req
	MsgGetpttUrlReq []*Cmd0X388_GetPttUrlReq `protobuf:"bytes,6,rep,name=msg_getptt_url_req,json=msgGetpttUrlReq,proto3" json:"msg_getptt_url_req,omitempty"` // rpt_msg_getptt_url_req
	CommandId       uint32                   `protobuf:"varint,7,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`                      // uint32_command_id
	MsgDelImgReq    []*Cmd0X388_DelImgReq    `protobuf:"bytes,8,rep,name=msg_del_img_req,json=msgDelImgReq,proto3" json:"msg_del_img_req,omitempty"`          // rpt_msg_del_img_req
	Extension       []byte                   `protobuf:"bytes,1001,opt,name=extension,proto3" json:"extension,omitempty"`                                     // bytes_extension
}

func (x *Cmd0X388_ReqBody) Reset() {
	*x = Cmd0X388_ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_ReqBody) ProtoMessage() {}

func (x *Cmd0X388_ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_ReqBody.ProtoReflect.Descriptor instead.
func (*Cmd0X388_ReqBody) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Cmd0X388_ReqBody) GetNetType() uint32 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *Cmd0X388_ReqBody) GetSubcmd() uint32 {
	if x != nil {
		return x.Subcmd
	}
	return 0
}

func (x *Cmd0X388_ReqBody) GetMsgTryupImgReq() []*Cmd0X388_TryUpImgReq {
	if x != nil {
		return x.MsgTryupImgReq
	}
	return nil
}

func (x *Cmd0X388_ReqBody) GetMsgGetimgUrlReq() []*Cmd0X388_GetImgUrlReq {
	if x != nil {
		return x.MsgGetimgUrlReq
	}
	return nil
}

func (x *Cmd0X388_ReqBody) GetMsgTryupPttReq() []*Cmd0X388_TryUpPttReq {
	if x != nil {
		return x.MsgTryupPttReq
	}
	return nil
}

func (x *Cmd0X388_ReqBody) GetMsgGetpttUrlReq() []*Cmd0X388_GetPttUrlReq {
	if x != nil {
		return x.MsgGetpttUrlReq
	}
	return nil
}

func (x *Cmd0X388_ReqBody) GetCommandId() uint32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *Cmd0X388_ReqBody) GetMsgDelImgReq() []*Cmd0X388_DelImgReq {
	if x != nil {
		return x.MsgDelImgReq
	}
	return nil
}

func (x *Cmd0X388_ReqBody) GetExtension() []byte {
	if x != nil {
		return x.Extension
	}
	return nil
}

// RspBody is the message type for the RspBody.
type Cmd0X388_RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp        uint32                   `protobuf:"varint,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                         // uint32_client_ip
	Subcmd          uint32                   `protobuf:"varint,2,opt,name=subcmd,proto3" json:"subcmd,omitempty"`                                             // uint32_subcmd
	MsgTryupImgRsp  []*Cmd0X388_TryUpImgRsp  `protobuf:"bytes,3,rep,name=msg_tryup_img_rsp,json=msgTryupImgRsp,proto3" json:"msg_tryup_img_rsp,omitempty"`    // rpt_msg_tryup_img_rsp
	MsgGetimgUrlRsp []*Cmd0X388_GetImgUrlRsp `protobuf:"bytes,4,rep,name=msg_getimg_url_rsp,json=msgGetimgUrlRsp,proto3" json:"msg_getimg_url_rsp,omitempty"` // rpt_msg_getimg_url_rsp
	MsgTryupPttRsp  []*Cmd0X388_TryUpPttRsp  `protobuf:"bytes,5,rep,name=msg_tryup_ptt_rsp,json=msgTryupPttRsp,proto3" json:"msg_tryup_ptt_rsp,omitempty"`    // rpt_msg_tryup_ptt_rsp
	MsgGetpttUrlRsp []*Cmd0X388_GetPttUrlRsp `protobuf:"bytes,6,rep,name=msg_getptt_url_rsp,json=msgGetpttUrlRsp,proto3" json:"msg_getptt_url_rsp,omitempty"` // rpt_msg_getptt_url_rsp
	MsgDelImgRsp    []*Cmd0X388_DelImgRsp    `protobuf:"bytes,7,rep,name=msg_del_img_rsp,json=msgDelImgRsp,proto3" json:"msg_del_img_rsp,omitempty"`          // rpt_msg_del_img_rsp
}

func (x *Cmd0X388_RspBody) Reset() {
	*x = Cmd0X388_RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_RspBody) ProtoMessage() {}

func (x *Cmd0X388_RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_RspBody.ProtoReflect.Descriptor instead.
func (*Cmd0X388_RspBody) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Cmd0X388_RspBody) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Cmd0X388_RspBody) GetSubcmd() uint32 {
	if x != nil {
		return x.Subcmd
	}
	return 0
}

func (x *Cmd0X388_RspBody) GetMsgTryupImgRsp() []*Cmd0X388_TryUpImgRsp {
	if x != nil {
		return x.MsgTryupImgRsp
	}
	return nil
}

func (x *Cmd0X388_RspBody) GetMsgGetimgUrlRsp() []*Cmd0X388_GetImgUrlRsp {
	if x != nil {
		return x.MsgGetimgUrlRsp
	}
	return nil
}

func (x *Cmd0X388_RspBody) GetMsgTryupPttRsp() []*Cmd0X388_TryUpPttRsp {
	if x != nil {
		return x.MsgTryupPttRsp
	}
	return nil
}

func (x *Cmd0X388_RspBody) GetMsgGetpttUrlRsp() []*Cmd0X388_GetPttUrlRsp {
	if x != nil {
		return x.MsgGetpttUrlRsp
	}
	return nil
}

func (x *Cmd0X388_RspBody) GetMsgDelImgRsp() []*Cmd0X388_DelImgRsp {
	if x != nil {
		return x.MsgDelImgRsp
	}
	return nil
}

// TryUpImgReq is the message type for the TryUpImgReq.
type Cmd0X388_TryUpImgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                      // uint64_group_code
	SrcUin          uint64 `protobuf:"varint,2,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                               // uint64_src_uin
	FileCode        uint64 `protobuf:"varint,3,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`                         // uint64_file_id
	FileMd5         []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                             // bytes_file_md5
	FileSize        uint64 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                         // uint64_file_size
	FileName        []byte `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                          // bytes_file_name
	SrcTerm         uint32 `protobuf:"varint,7,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`                            // uint32_src_term
	PlatformType    uint32 `protobuf:"varint,8,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`             // uint32_platform_type
	BuType          uint32 `protobuf:"varint,9,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                               // uint32_bu_type
	PicWidth        uint32 `protobuf:"varint,10,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`                        // uint32_pic_width
	PicHeight       uint32 `protobuf:"varint,11,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`                     // uint32_pic_height
	PicType         uint32 `protobuf:"varint,12,opt,name=pic_type,json=picType,proto3" json:"pic_type,omitempty"`                           // uint32_pic_type
	BuildVer        []byte `protobuf:"bytes,13,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`                         // bytes_build_ver
	InnerIp         uint32 `protobuf:"varint,14,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`                           // uint32_inner_ip
	AppPicType      uint32 `protobuf:"varint,15,opt,name=app_pic_type,json=appPicType,proto3" json:"app_pic_type,omitempty"`                // uint32_app_pic_type
	OriginalPic     uint32 `protobuf:"varint,16,opt,name=original_pic,json=originalPic,proto3" json:"original_pic,omitempty"`               // uint32_original_pic
	FileIndex       []byte `protobuf:"bytes,17,opt,name=file_index,json=fileIndex,proto3" json:"file_index,omitempty"`                      // bytes_file_index
	DstUin          uint64 `protobuf:"varint,18,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                              // uint64_dst_uin
	SrvUpload       uint32 `protobuf:"varint,19,opt,name=srv_upload,json=srvUpload,proto3" json:"srv_upload,omitempty"`                     // uint32_srv_upload
	TransferUrl     []byte `protobuf:"bytes,20,opt,name=transfer_url,json=transferUrl,proto3" json:"transfer_url,omitempty"`                // bytes_transfer_url
	QqmeetGuildId   uint64 `protobuf:"varint,21,opt,name=qqmeet_guild_id,json=qqmeetGuildId,proto3" json:"qqmeet_guild_id,omitempty"`       // uint64_qqmeet_guild_id
	QqmeetChannelId uint64 `protobuf:"varint,22,opt,name=qqmeet_channel_id,json=qqmeetChannelId,proto3" json:"qqmeet_channel_id,omitempty"` // uint64_qqmeet_channel_id
}

func (x *Cmd0X388_TryUpImgReq) Reset() {
	*x = Cmd0X388_TryUpImgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_TryUpImgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_TryUpImgReq) ProtoMessage() {}

func (x *Cmd0X388_TryUpImgReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_TryUpImgReq.ProtoReflect.Descriptor instead.
func (*Cmd0X388_TryUpImgReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Cmd0X388_TryUpImgReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_TryUpImgReq) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *Cmd0X388_TryUpImgReq) GetSrcTerm() uint32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetPicWidth() uint32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetPicHeight() uint32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetPicType() uint32 {
	if x != nil {
		return x.PicType
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0X388_TryUpImgReq) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetAppPicType() uint32 {
	if x != nil {
		return x.AppPicType
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetOriginalPic() uint32 {
	if x != nil {
		return x.OriginalPic
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetFileIndex() []byte {
	if x != nil {
		return x.FileIndex
	}
	return nil
}

func (x *Cmd0X388_TryUpImgReq) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetSrvUpload() uint32 {
	if x != nil {
		return x.SrvUpload
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetTransferUrl() []byte {
	if x != nil {
		return x.TransferUrl
	}
	return nil
}

func (x *Cmd0X388_TryUpImgReq) GetQqmeetGuildId() uint64 {
	if x != nil {
		return x.QqmeetGuildId
	}
	return 0
}

func (x *Cmd0X388_TryUpImgReq) GetQqmeetChannelId() uint64 {
	if x != nil {
		return x.QqmeetChannelId
	}
	return 0
}

// TryUpImgRsp is the message type for the TryUpImgRsp.
type Cmd0X388_TryUpImgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileCode      uint64                   `protobuf:"varint,1,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`                // uint64_file_id
	Result        uint32                   `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`                                    // uint32_result
	FailMsg       []byte                   `protobuf:"bytes,3,opt,name=fail_msg,json=failMsg,proto3" json:"fail_msg,omitempty"`                    // bytes_fail_msg
	FileExit      bool                     `protobuf:"varint,4,opt,name=file_exit,json=fileExit,proto3" json:"file_exit,omitempty"`                // bool_file_exit
	MsgImgInfo    *Cmd0X388_ImgInfo        `protobuf:"bytes,5,opt,name=msg_img_info,json=msgImgInfo,proto3" json:"msg_img_info,omitempty"`         // msg_img_info
	UpIp          []uint32                 `protobuf:"varint,6,rep,packed,name=up_ip,json=upIp,proto3" json:"up_ip,omitempty"`                     // rpt_uint32_up_ip
	UpPort        []uint32                 `protobuf:"varint,7,rep,packed,name=up_port,json=upPort,proto3" json:"up_port,omitempty"`               // rpt_uint32_up_port
	UpUkey        []byte                   `protobuf:"bytes,8,opt,name=up_ukey,json=upUkey,proto3" json:"up_ukey,omitempty"`                       // bytes_up_ukey
	Fileid        uint64                   `protobuf:"varint,9,opt,name=fileid,proto3" json:"fileid,omitempty"`                                    // uint64_fileid
	UpOffset      uint64                   `protobuf:"varint,10,opt,name=up_offset,json=upOffset,proto3" json:"up_offset,omitempty"`               // uint64_up_offset
	BlockSize     uint64                   `protobuf:"varint,11,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`            // uint64_block_size
	NewBigChan    bool                     `protobuf:"varint,12,opt,name=new_big_chan,json=newBigChan,proto3" json:"new_big_chan,omitempty"`       // bool_new_big_chan
	MsgUpIp6      []*Cmd0X388_IPv6Info     `protobuf:"bytes,26,rep,name=msg_up_ip6,json=msgUpIp6,proto3" json:"msg_up_ip6,omitempty"`              // rpt_msg_up_ip6
	ClientIp6     []byte                   `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`             // bytes_client_ip6
	DownloadIndex []byte                   `protobuf:"bytes,28,opt,name=download_index,json=downloadIndex,proto3" json:"download_index,omitempty"` // bytes_download_index
	MsgInfo4Busi  *Cmd0X388_TryUpInfo4Busi `protobuf:"bytes,1001,opt,name=msg_info4busi,json=msgInfo4busi,proto3" json:"msg_info4busi,omitempty"`  // msg_info4busi
}

func (x *Cmd0X388_TryUpImgRsp) Reset() {
	*x = Cmd0X388_TryUpImgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_TryUpImgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_TryUpImgRsp) ProtoMessage() {}

func (x *Cmd0X388_TryUpImgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_TryUpImgRsp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_TryUpImgRsp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Cmd0X388_TryUpImgRsp) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_TryUpImgRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0X388_TryUpImgRsp) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetFileExit() bool {
	if x != nil {
		return x.FileExit
	}
	return false
}

func (x *Cmd0X388_TryUpImgRsp) GetMsgImgInfo() *Cmd0X388_ImgInfo {
	if x != nil {
		return x.MsgImgInfo
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetUpIp() []uint32 {
	if x != nil {
		return x.UpIp
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetUpPort() []uint32 {
	if x != nil {
		return x.UpPort
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetUpUkey() []byte {
	if x != nil {
		return x.UpUkey
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetFileid() uint64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *Cmd0X388_TryUpImgRsp) GetUpOffset() uint64 {
	if x != nil {
		return x.UpOffset
	}
	return 0
}

func (x *Cmd0X388_TryUpImgRsp) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *Cmd0X388_TryUpImgRsp) GetNewBigChan() bool {
	if x != nil {
		return x.NewBigChan
	}
	return false
}

func (x *Cmd0X388_TryUpImgRsp) GetMsgUpIp6() []*Cmd0X388_IPv6Info {
	if x != nil {
		return x.MsgUpIp6
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetDownloadIndex() []byte {
	if x != nil {
		return x.DownloadIndex
	}
	return nil
}

func (x *Cmd0X388_TryUpImgRsp) GetMsgInfo4Busi() *Cmd0X388_TryUpInfo4Busi {
	if x != nil {
		return x.MsgInfo4Busi
	}
	return nil
}

// TryUpInfo4Busi is the message type for the TryUpInfo4Busi.
type Cmd0X388_TryUpInfo4Busi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownDomain      []byte `protobuf:"bytes,1,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`                  // bytes_down_domain
	ThumbDownUrl    []byte `protobuf:"bytes,2,opt,name=thumb_down_url,json=thumbDownUrl,proto3" json:"thumb_down_url,omitempty"`          // bytes_thumb_down_url
	OriginalDownUrl []byte `protobuf:"bytes,3,opt,name=original_down_url,json=originalDownUrl,proto3" json:"original_down_url,omitempty"` // bytes_original_down_url
	BigDownUrl      []byte `protobuf:"bytes,4,opt,name=big_down_url,json=bigDownUrl,proto3" json:"big_down_url,omitempty"`                // bytes_big_down_url
	FileResid       []byte `protobuf:"bytes,5,opt,name=file_resid,json=fileResid,proto3" json:"file_resid,omitempty"`                     // bytes_file_resid
}

func (x *Cmd0X388_TryUpInfo4Busi) Reset() {
	*x = Cmd0X388_TryUpInfo4Busi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_TryUpInfo4Busi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_TryUpInfo4Busi) ProtoMessage() {}

func (x *Cmd0X388_TryUpInfo4Busi) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_TryUpInfo4Busi.ProtoReflect.Descriptor instead.
func (*Cmd0X388_TryUpInfo4Busi) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Cmd0X388_TryUpInfo4Busi) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *Cmd0X388_TryUpInfo4Busi) GetThumbDownUrl() []byte {
	if x != nil {
		return x.ThumbDownUrl
	}
	return nil
}

func (x *Cmd0X388_TryUpInfo4Busi) GetOriginalDownUrl() []byte {
	if x != nil {
		return x.OriginalDownUrl
	}
	return nil
}

func (x *Cmd0X388_TryUpInfo4Busi) GetBigDownUrl() []byte {
	if x != nil {
		return x.BigDownUrl
	}
	return nil
}

func (x *Cmd0X388_TryUpInfo4Busi) GetFileResid() []byte {
	if x != nil {
		return x.FileResid
	}
	return nil
}

// TryUpPttReq is the message type for the TryUpPttReq.
type Cmd0X388_TryUpPttReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode    uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`          // uint64_group_code
	SrcUin       uint64 `protobuf:"varint,2,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                   // uint64_src_uin
	FileCode     uint64 `protobuf:"varint,3,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`             // uint64_file_id
	FileMd5      []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                 // bytes_file_md5
	FileSize     uint64 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`             // uint64_file_size
	FileName     []byte `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`              // bytes_file_name
	SrcTerm      uint32 `protobuf:"varint,7,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`                // uint32_src_term
	PlatformType uint32 `protobuf:"varint,8,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"` // uint32_platform_type
	BuType       uint32 `protobuf:"varint,9,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                   // uint32_bu_type
	BuildVer     []byte `protobuf:"bytes,10,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`             // bytes_build_ver
	InnerIp      uint32 `protobuf:"varint,11,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`               // uint32_inner_ip
	VoiceLength  uint32 `protobuf:"varint,12,opt,name=voice_length,json=voiceLength,proto3" json:"voice_length,omitempty"`   // uint32_voice_length
	NewUpChan    bool   `protobuf:"varint,13,opt,name=new_up_chan,json=newUpChan,proto3" json:"new_up_chan,omitempty"`       // bool_new_up_chan
	Codec        uint32 `protobuf:"varint,14,opt,name=codec,proto3" json:"codec,omitempty"`                                  // uint32_codec
	VoiceType    uint32 `protobuf:"varint,15,opt,name=voice_type,json=voiceType,proto3" json:"voice_type,omitempty"`         // uint32_voice_type
	BuId         uint32 `protobuf:"varint,16,opt,name=bu_id,json=buId,proto3" json:"bu_id,omitempty"`                        // uint32_bu_id
}

func (x *Cmd0X388_TryUpPttReq) Reset() {
	*x = Cmd0X388_TryUpPttReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_TryUpPttReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_TryUpPttReq) ProtoMessage() {}

func (x *Cmd0X388_TryUpPttReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_TryUpPttReq.ProtoReflect.Descriptor instead.
func (*Cmd0X388_TryUpPttReq) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Cmd0X388_TryUpPttReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0X388_TryUpPttReq) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *Cmd0X388_TryUpPttReq) GetSrcTerm() uint32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0X388_TryUpPttReq) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetVoiceLength() uint32 {
	if x != nil {
		return x.VoiceLength
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetNewUpChan() bool {
	if x != nil {
		return x.NewUpChan
	}
	return false
}

func (x *Cmd0X388_TryUpPttReq) GetCodec() uint32 {
	if x != nil {
		return x.Codec
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetVoiceType() uint32 {
	if x != nil {
		return x.VoiceType
	}
	return 0
}

func (x *Cmd0X388_TryUpPttReq) GetBuId() uint32 {
	if x != nil {
		return x.BuId
	}
	return 0
}

// TryUpPttRsp is the message type for the TryUpPttRsp.
type Cmd0X388_TryUpPttRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileCode    uint64               `protobuf:"varint,1,opt,name=file_code,json=fileCode,proto3" json:"file_code,omitempty"`           // uint64_file_id
	Result      uint32               `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`                               // uint32_result
	FailMsg     []byte               `protobuf:"bytes,3,opt,name=fail_msg,json=failMsg,proto3" json:"fail_msg,omitempty"`               // bytes_fail_msg
	FileExit    bool                 `protobuf:"varint,4,opt,name=file_exit,json=fileExit,proto3" json:"file_exit,omitempty"`           // bool_file_exit
	UpIp        []uint32             `protobuf:"varint,5,rep,packed,name=up_ip,json=upIp,proto3" json:"up_ip,omitempty"`                // rpt_uint32_up_ip
	UpPort      []uint32             `protobuf:"varint,6,rep,packed,name=up_port,json=upPort,proto3" json:"up_port,omitempty"`          // rpt_uint32_up_port
	UpUkey      []byte               `protobuf:"bytes,7,opt,name=up_ukey,json=upUkey,proto3" json:"up_ukey,omitempty"`                  // bytes_up_ukey
	Fileid      uint64               `protobuf:"varint,8,opt,name=fileid,proto3" json:"fileid,omitempty"`                               // uint64_fileid
	UpOffset    uint64               `protobuf:"varint,9,opt,name=up_offset,json=upOffset,proto3" json:"up_offset,omitempty"`           // uint64_up_offset
	BlockSize   uint64               `protobuf:"varint,10,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`       // uint64_block_size
	FileKey     []byte               `protobuf:"bytes,11,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`              // bytes_file_key
	ChannelType uint32               `protobuf:"varint,12,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"` // uint32_channel_type
	MsgUpIp6    []*Cmd0X388_IPv6Info `protobuf:"bytes,26,rep,name=msg_up_ip6,json=msgUpIp6,proto3" json:"msg_up_ip6,omitempty"`         // rpt_msg_up_ip6
	ClientIp6   []byte               `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`        // bytes_client_ip6
}

func (x *Cmd0X388_TryUpPttRsp) Reset() {
	*x = Cmd0X388_TryUpPttRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X388_TryUpPttRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X388_TryUpPttRsp) ProtoMessage() {}

func (x *Cmd0X388_TryUpPttRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_message_pb_cmd_0x388_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X388_TryUpPttRsp.ProtoReflect.Descriptor instead.
func (*Cmd0X388_TryUpPttRsp) Descriptor() ([]byte, []int) {
	return file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Cmd0X388_TryUpPttRsp) GetFileCode() uint64 {
	if x != nil {
		return x.FileCode
	}
	return 0
}

func (x *Cmd0X388_TryUpPttRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0X388_TryUpPttRsp) GetFailMsg() []byte {
	if x != nil {
		return x.FailMsg
	}
	return nil
}

func (x *Cmd0X388_TryUpPttRsp) GetFileExit() bool {
	if x != nil {
		return x.FileExit
	}
	return false
}

func (x *Cmd0X388_TryUpPttRsp) GetUpIp() []uint32 {
	if x != nil {
		return x.UpIp
	}
	return nil
}

func (x *Cmd0X388_TryUpPttRsp) GetUpPort() []uint32 {
	if x != nil {
		return x.UpPort
	}
	return nil
}

func (x *Cmd0X388_TryUpPttRsp) GetUpUkey() []byte {
	if x != nil {
		return x.UpUkey
	}
	return nil
}

func (x *Cmd0X388_TryUpPttRsp) GetFileid() uint64 {
	if x != nil {
		return x.Fileid
	}
	return 0
}

func (x *Cmd0X388_TryUpPttRsp) GetUpOffset() uint64 {
	if x != nil {
		return x.UpOffset
	}
	return 0
}

func (x *Cmd0X388_TryUpPttRsp) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *Cmd0X388_TryUpPttRsp) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *Cmd0X388_TryUpPttRsp) GetChannelType() uint32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *Cmd0X388_TryUpPttRsp) GetMsgUpIp6() []*Cmd0X388_IPv6Info {
	if x != nil {
		return x.MsgUpIp6
	}
	return nil
}

func (x *Cmd0X388_TryUpPttRsp) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

var File_daemon_message_pb_cmd_0x388_proto protoreflect.FileDescriptor

var file_daemon_message_pb_cmd_0x388_proto_rawDesc = []byte{
	0x0a, 0x21, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6d, 0x64, 0x5f, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x33, 0x0a, 0x08, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38,
	0x1a, 0x95, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74, 0x55, 0x69, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x69, 0x63, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x69, 0x63, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x5d, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x49,
	0x6d, 0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x1a, 0x29, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x52, 0x6f,
	0x61, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x65, 0x73,
	0x69, 0x64, 0x1a, 0x5b, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x50, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6b, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x70, 0x6b, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x69, 0x63, 0x49, 0x64, 0x1a,
	0x31, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x50, 0x69, 0x63, 0x54, 0x72, 0x79, 0x55, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x78, 0x74, 0x69, 0x6e,
	0x66, 0x6f, 0x1a, 0x62, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x54, 0x72, 0x79, 0x55, 0x70, 0x12, 0x49, 0x0a, 0x14, 0x6d,
	0x73, 0x67, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6d, 0x64, 0x30,
	0x78, 0x33, 0x38, 0x38, 0x2e, 0x45, 0x78, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x50, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x11, 0x6d, 0x73, 0x67, 0x45, 0x78, 0x70, 0x72, 0x6f, 0x61, 0x6d, 0x50,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xed, 0x05, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74, 0x55, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d,
	0x64, 0x35, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x72, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x75, 0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x70, 0x69, 0x63, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x71,
	0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x83, 0x06, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x67, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x33, 0x0a,
	0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x49,
	0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x49, 0x6d, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x77,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x69, 0x67, 0x44,
	0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69,
	0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x69, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x69, 0x67, 0x44,
	0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x62, 0x69, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x62, 0x69, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x55, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x49, 0x70, 0x36, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x1a, 0xb9, 0x03, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64,
	0x73, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x13,
	0x0a, 0x05, 0x62, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62,
	0x75, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x1a, 0xd3, 0x03, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6f,
	0x77, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x77,
	0x6e, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x34, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x70,
	0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33,
	0x38, 0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x73, 0x67,
	0x44, 0x6f, 0x77, 0x6e, 0x49, 0x70, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x30,
	0x0a, 0x08, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70,
	0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x70, 0x36, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0x9e, 0x01, 0x0a, 0x07, 0x49, 0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x1a, 0x4f, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x1a, 0xc4, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62,
	0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d,
	0x64, 0x12, 0x40, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x72, 0x79, 0x75, 0x70, 0x5f, 0x69,
	0x6d, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43,
	0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6d, 0x67,
	0x52, 0x65, 0x71, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x54, 0x72, 0x79, 0x75, 0x70, 0x49, 0x6d, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x65, 0x74, 0x69, 0x6d,
	0x67, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x69,
	0x6d, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x72, 0x79, 0x75, 0x70, 0x5f, 0x70, 0x74, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x54,
	0x72, 0x79, 0x55, 0x70, 0x50, 0x74, 0x74, 0x52, 0x65, 0x71, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x54,
	0x72, 0x79, 0x75, 0x70, 0x50, 0x74, 0x74, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x12, 0x6d, 0x73,
	0x67, 0x5f, 0x67, 0x65, 0x74, 0x70, 0x74, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38,
	0x38, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x0f,
	0x6d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x70, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33,
	0x38, 0x38, 0x2e, 0x44, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x52, 0x0c, 0x6d, 0x73,
	0x67, 0x44, 0x65, 0x6c, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x88, 0x03, 0x0a, 0x07, 0x52, 0x73,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x11, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x72, 0x79, 0x75, 0x70, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x72, 0x73, 0x70, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38,
	0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6d, 0x67, 0x52, 0x73, 0x70, 0x52, 0x0e, 0x6d, 0x73,
	0x67, 0x54, 0x72, 0x79, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x12,
	0x6d, 0x73, 0x67, 0x5f, 0x67, 0x65, 0x74, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72,
	0x73, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78,
	0x33, 0x38, 0x38, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70,
	0x52, 0x0f, 0x6d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x72, 0x79, 0x75, 0x70, 0x5f, 0x70,
	0x74, 0x74, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43,
	0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x50, 0x74, 0x74,
	0x52, 0x73, 0x70, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x54, 0x72, 0x79, 0x75, 0x70, 0x50, 0x74, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x65, 0x74, 0x70, 0x74,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x74,
	0x74, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x70,
	0x74, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x44, 0x65, 0x6c,
	0x49, 0x6d, 0x67, 0x52, 0x73, 0x70, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x49, 0x6d,
	0x67, 0x52, 0x73, 0x70, 0x1a, 0xb2, 0x05, 0x0a, 0x0b, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6d,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x5f, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x69, 0x63, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x69, 0x63, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x69,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x70,
	0x70, 0x50, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73,
	0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74,
	0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x72, 0x76, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x72, 0x76, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0xa4, 0x04, 0x0a, 0x0b, 0x54, 0x72,
	0x79, 0x55, 0x70, 0x49, 0x6d, 0x67, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x45, 0x78, 0x69, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6d,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43,
	0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x6d, 0x73, 0x67, 0x49, 0x6d, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x75,
	0x70, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x70, 0x49, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f,
	0x75, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x70, 0x55, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75,
	0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x69,
	0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65,
	0x77, 0x42, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f,
	0x75, 0x70, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43,
	0x6d, 0x64, 0x30, 0x78, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x6d, 0x73, 0x67, 0x55, 0x70, 0x49, 0x70, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x3e, 0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x34, 0x62, 0x75, 0x73,
	0x69, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x78,
	0x33, 0x38, 0x38, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x34, 0x42, 0x75,
	0x73, 0x69, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x34, 0x62, 0x75, 0x73, 0x69,
	0x1a, 0xc4, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x34, 0x42,
	0x75, 0x73, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f,
	0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44,
	0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69, 0x67, 0x5f, 0x64, 0x6f,
	0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x69,
	0x67, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x1a, 0xd5, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x79, 0x55,
	0x70, 0x50, 0x74, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x70, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x55,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x75, 0x49, 0x64, 0x1a,
	0xa4, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x79, 0x55, 0x70, 0x50, 0x74, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x73, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x74, 0x12, 0x13, 0x0a, 0x05,
	0x75, 0x70, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x70, 0x49,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70,
	0x5f, 0x75, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x70, 0x55,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x75, 0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x70, 0x5f,
	0x69, 0x70, 0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x30,
	0x78, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d,
	0x73, 0x67, 0x55, 0x70, 0x49, 0x70, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x67,
	0x75, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_daemon_message_pb_cmd_0x388_proto_rawDescOnce sync.Once
	file_daemon_message_pb_cmd_0x388_proto_rawDescData = file_daemon_message_pb_cmd_0x388_proto_rawDesc
)

func file_daemon_message_pb_cmd_0x388_proto_rawDescGZIP() []byte {
	file_daemon_message_pb_cmd_0x388_proto_rawDescOnce.Do(func() {
		file_daemon_message_pb_cmd_0x388_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_message_pb_cmd_0x388_proto_rawDescData)
	})
	return file_daemon_message_pb_cmd_0x388_proto_rawDescData
}

var file_daemon_message_pb_cmd_0x388_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_daemon_message_pb_cmd_0x388_proto_goTypes = []interface{}{
	(*Cmd0X388)(nil),                       // 0: Cmd0x388
	(*Cmd0X388_DelImgReq)(nil),             // 1: Cmd0x388.DelImgReq
	(*Cmd0X388_DelImgRsp)(nil),             // 2: Cmd0x388.DelImgRsp
	(*Cmd0X388_ExpRoamExtendInfo)(nil),     // 3: Cmd0x388.ExpRoamExtendInfo
	(*Cmd0X388_ExpRoamPicInfo)(nil),        // 4: Cmd0x388.ExpRoamPicInfo
	(*Cmd0X388_ExtensionCommPicTryUp)(nil), // 5: Cmd0x388.ExtensionCommPicTryUp
	(*Cmd0X388_ExtensionExpRoamTryUp)(nil), // 6: Cmd0x388.ExtensionExpRoamTryUp
	(*Cmd0X388_GetImgUrlReq)(nil),          // 7: Cmd0x388.GetImgUrlReq
	(*Cmd0X388_GetImgUrlRsp)(nil),          // 8: Cmd0x388.GetImgUrlRsp
	(*Cmd0X388_GetPttUrlReq)(nil),          // 9: Cmd0x388.GetPttUrlReq
	(*Cmd0X388_GetPttUrlRsp)(nil),          // 10: Cmd0x388.GetPttUrlRsp
	(*Cmd0X388_IPv6Info)(nil),              // 11: Cmd0x388.IPv6Info
	(*Cmd0X388_ImgInfo)(nil),               // 12: Cmd0x388.ImgInfo
	(*Cmd0X388_PicSize)(nil),               // 13: Cmd0x388.PicSize
	(*Cmd0X388_ReqBody)(nil),               // 14: Cmd0x388.ReqBody
	(*Cmd0X388_RspBody)(nil),               // 15: Cmd0x388.RspBody
	(*Cmd0X388_TryUpImgReq)(nil),           // 16: Cmd0x388.TryUpImgReq
	(*Cmd0X388_TryUpImgRsp)(nil),           // 17: Cmd0x388.TryUpImgRsp
	(*Cmd0X388_TryUpInfo4Busi)(nil),        // 18: Cmd0x388.TryUpInfo4Busi
	(*Cmd0X388_TryUpPttReq)(nil),           // 19: Cmd0x388.TryUpPttReq
	(*Cmd0X388_TryUpPttRsp)(nil),           // 20: Cmd0x388.TryUpPttRsp
}
var file_daemon_message_pb_cmd_0x388_proto_depIdxs = []int32{
	4,  // 0: Cmd0x388.ExtensionExpRoamTryUp.msg_exproam_pic_info:type_name -> Cmd0x388.ExpRoamPicInfo
	12, // 1: Cmd0x388.GetImgUrlRsp.msg_img_info:type_name -> Cmd0x388.ImgInfo
	11, // 2: Cmd0x388.GetImgUrlRsp.msg_down_ip6:type_name -> Cmd0x388.IPv6Info
	11, // 3: Cmd0x388.GetPttUrlRsp.msg_down_ip6:type_name -> Cmd0x388.IPv6Info
	16, // 4: Cmd0x388.ReqBody.msg_tryup_img_req:type_name -> Cmd0x388.TryUpImgReq
	7,  // 5: Cmd0x388.ReqBody.msg_getimg_url_req:type_name -> Cmd0x388.GetImgUrlReq
	19, // 6: Cmd0x388.ReqBody.msg_tryup_ptt_req:type_name -> Cmd0x388.TryUpPttReq
	9,  // 7: Cmd0x388.ReqBody.msg_getptt_url_req:type_name -> Cmd0x388.GetPttUrlReq
	1,  // 8: Cmd0x388.ReqBody.msg_del_img_req:type_name -> Cmd0x388.DelImgReq
	17, // 9: Cmd0x388.RspBody.msg_tryup_img_rsp:type_name -> Cmd0x388.TryUpImgRsp
	8,  // 10: Cmd0x388.RspBody.msg_getimg_url_rsp:type_name -> Cmd0x388.GetImgUrlRsp
	20, // 11: Cmd0x388.RspBody.msg_tryup_ptt_rsp:type_name -> Cmd0x388.TryUpPttRsp
	10, // 12: Cmd0x388.RspBody.msg_getptt_url_rsp:type_name -> Cmd0x388.GetPttUrlRsp
	2,  // 13: Cmd0x388.RspBody.msg_del_img_rsp:type_name -> Cmd0x388.DelImgRsp
	12, // 14: Cmd0x388.TryUpImgRsp.msg_img_info:type_name -> Cmd0x388.ImgInfo
	11, // 15: Cmd0x388.TryUpImgRsp.msg_up_ip6:type_name -> Cmd0x388.IPv6Info
	18, // 16: Cmd0x388.TryUpImgRsp.msg_info4busi:type_name -> Cmd0x388.TryUpInfo4Busi
	11, // 17: Cmd0x388.TryUpPttRsp.msg_up_ip6:type_name -> Cmd0x388.IPv6Info
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_daemon_message_pb_cmd_0x388_proto_init() }
func file_daemon_message_pb_cmd_0x388_proto_init() {
	if File_daemon_message_pb_cmd_0x388_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_DelImgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_DelImgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_ExpRoamExtendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_ExpRoamPicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_ExtensionCommPicTryUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_ExtensionExpRoamTryUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_GetImgUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_GetImgUrlRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_GetPttUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_GetPttUrlRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_IPv6Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_ImgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_PicSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_TryUpImgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_TryUpImgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_TryUpInfo4Busi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_TryUpPttReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_message_pb_cmd_0x388_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X388_TryUpPttRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_message_pb_cmd_0x388_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_message_pb_cmd_0x388_proto_goTypes,
		DependencyIndexes: file_daemon_message_pb_cmd_0x388_proto_depIdxs,
		MessageInfos:      file_daemon_message_pb_cmd_0x388_proto_msgTypes,
	}.Build()
	File_daemon_message_pb_cmd_0x388_proto = out.File
	file_daemon_message_pb_cmd_0x388_proto_rawDesc = nil
	file_daemon_message_pb_cmd_0x388_proto_goTypes = nil
	file_daemon_message_pb_cmd_0x388_proto_depIdxs = nil
}
