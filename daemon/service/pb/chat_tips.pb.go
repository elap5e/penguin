// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/service/pb/chat_tips.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1318im.oidb.cmd0x857.TroopTips0x857
//
// ChatTips is the message type for the TroopTips0x857.
type ChatTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatTips) Reset() {
	*x = ChatTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips) ProtoMessage() {}

func (x *ChatTips) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips.ProtoReflect.Descriptor instead.
func (*ChatTips) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0}
}

// AIOGrayTipsInfo is the message type for the AIOGrayTipsInfo.
type ChatTips_AIOGrayTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowLastest    *uint32 `protobuf:"varint,1,opt,name=show_lastest,json=showLastest,proto3,oneof" json:"show_lastest,omitempty"`      // opt_uint32_show_lastest
	Content        []byte  `protobuf:"bytes,2,opt,name=content,proto3,oneof" json:"content,omitempty"`                                  // opt_bytes_content
	Remind         *uint32 `protobuf:"varint,3,opt,name=remind,proto3,oneof" json:"remind,omitempty"`                                   // opt_uint32_remind
	Brief          []byte  `protobuf:"bytes,4,opt,name=brief,proto3,oneof" json:"brief,omitempty"`                                      // opt_bytes_brief
	ReceiverUin    uint64  `protobuf:"varint,5,opt,name=receiver_uin,json=receiverUin,proto3" json:"receiver_uin,omitempty"`            // uint64_receiver_uin
	ReliaoAdminOpt uint32  `protobuf:"varint,6,opt,name=reliao_admin_opt,json=reliaoAdminOpt,proto3" json:"reliao_admin_opt,omitempty"` // uint32_reliao_admin_opt
	RobotGroupOpt  uint32  `protobuf:"varint,7,opt,name=robot_group_opt,json=robotGroupOpt,proto3" json:"robot_group_opt,omitempty"`    // uint32_robot_group_opt
}

func (x *ChatTips_AIOGrayTipsInfo) Reset() {
	*x = ChatTips_AIOGrayTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_AIOGrayTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_AIOGrayTipsInfo) ProtoMessage() {}

func (x *ChatTips_AIOGrayTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_AIOGrayTipsInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_AIOGrayTipsInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChatTips_AIOGrayTipsInfo) GetShowLastest() uint32 {
	if x != nil && x.ShowLastest != nil {
		return *x.ShowLastest
	}
	return 0
}

func (x *ChatTips_AIOGrayTipsInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatTips_AIOGrayTipsInfo) GetRemind() uint32 {
	if x != nil && x.Remind != nil {
		return *x.Remind
	}
	return 0
}

func (x *ChatTips_AIOGrayTipsInfo) GetBrief() []byte {
	if x != nil {
		return x.Brief
	}
	return nil
}

func (x *ChatTips_AIOGrayTipsInfo) GetReceiverUin() uint64 {
	if x != nil {
		return x.ReceiverUin
	}
	return 0
}

func (x *ChatTips_AIOGrayTipsInfo) GetReliaoAdminOpt() uint32 {
	if x != nil {
		return x.ReliaoAdminOpt
	}
	return 0
}

func (x *ChatTips_AIOGrayTipsInfo) GetRobotGroupOpt() uint32 {
	if x != nil {
		return x.RobotGroupOpt
	}
	return 0
}

// AIOTopTipsInfo is the message type for the AIOTopTipsInfo.
type ChatTips_AIOTopTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content    []byte  `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"`                          // opt_bytes_content
	Icon       *uint32 `protobuf:"varint,2,opt,name=icon,proto3,oneof" json:"icon,omitempty"`                               // opt_uint32_icon
	EnumAction *int32  `protobuf:"varint,3,opt,name=enum_action,json=enumAction,proto3,oneof" json:"enum_action,omitempty"` // opt_enum_action
	Url        []byte  `protobuf:"bytes,4,opt,name=url,proto3,oneof" json:"url,omitempty"`                                  // opt_bytes_url
	Data       []byte  `protobuf:"bytes,5,opt,name=data,proto3,oneof" json:"data,omitempty"`                                // opt_bytes_data
	DataI      []byte  `protobuf:"bytes,6,opt,name=data_i,json=dataI,proto3,oneof" json:"data_i,omitempty"`                 // opt_bytes_data_i
	DataA      []byte  `protobuf:"bytes,7,opt,name=data_a,json=dataA,proto3,oneof" json:"data_a,omitempty"`                 // opt_bytes_data_a
	DataP      []byte  `protobuf:"bytes,8,opt,name=data_p,json=dataP,proto3,oneof" json:"data_p,omitempty"`                 // opt_bytes_data_p
}

func (x *ChatTips_AIOTopTipsInfo) Reset() {
	*x = ChatTips_AIOTopTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_AIOTopTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_AIOTopTipsInfo) ProtoMessage() {}

func (x *ChatTips_AIOTopTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_AIOTopTipsInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_AIOTopTipsInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChatTips_AIOTopTipsInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatTips_AIOTopTipsInfo) GetIcon() uint32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

func (x *ChatTips_AIOTopTipsInfo) GetEnumAction() int32 {
	if x != nil && x.EnumAction != nil {
		return *x.EnumAction
	}
	return 0
}

func (x *ChatTips_AIOTopTipsInfo) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *ChatTips_AIOTopTipsInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ChatTips_AIOTopTipsInfo) GetDataI() []byte {
	if x != nil {
		return x.DataI
	}
	return nil
}

func (x *ChatTips_AIOTopTipsInfo) GetDataA() []byte {
	if x != nil {
		return x.DataA
	}
	return nil
}

func (x *ChatTips_AIOTopTipsInfo) GetDataP() []byte {
	if x != nil {
		return x.DataP
	}
	return nil
}

// FloatedTipsInfo is the message type for the FloatedTipsInfo.
type ChatTips_FloatedTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"` // opt_bytes_content
}

func (x *ChatTips_FloatedTipsInfo) Reset() {
	*x = ChatTips_FloatedTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_FloatedTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_FloatedTipsInfo) ProtoMessage() {}

func (x *ChatTips_FloatedTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_FloatedTipsInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_FloatedTipsInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ChatTips_FloatedTipsInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// GeneralGrayTipInfo is the message type for the GeneralGrayTipInfo.
type ChatTips_GeneralGrayTipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusiType      uint64                 `protobuf:"varint,1,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`                 // uint64_busi_type
	BusiId        uint64                 `protobuf:"varint,2,opt,name=busi_id,json=busiId,proto3" json:"busi_id,omitempty"`                       // uint64_busi_id
	CtrlFlag      uint32                 `protobuf:"varint,3,opt,name=ctrl_flag,json=ctrlFlag,proto3" json:"ctrl_flag,omitempty"`                 // uint32_ctrl_flag
	C2CType       uint32                 `protobuf:"varint,4,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"`                    // uint32_c2c_type
	ServiceType   uint32                 `protobuf:"varint,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`        // uint32_service_type
	TemplId       uint64                 `protobuf:"varint,6,opt,name=templ_id,json=templId,proto3" json:"templ_id,omitempty"`                    // uint64_templ_id
	MsgTemplParam []*ChatTips_TemplParam `protobuf:"bytes,7,rep,name=msg_templ_param,json=msgTemplParam,proto3" json:"msg_templ_param,omitempty"` // rpt_msg_templ_param
	Content       []byte                 `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`                                    // bytes_content
	TipsSeqId     uint64                 `protobuf:"varint,10,opt,name=tips_seq_id,json=tipsSeqId,proto3" json:"tips_seq_id,omitempty"`           // uint64_tips_seq_id
	PbReserv      []byte                 `protobuf:"bytes,100,opt,name=pb_reserv,json=pbReserv,proto3" json:"pb_reserv,omitempty"`                // bytes_pb_reserv
}

func (x *ChatTips_GeneralGrayTipInfo) Reset() {
	*x = ChatTips_GeneralGrayTipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GeneralGrayTipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GeneralGrayTipInfo) ProtoMessage() {}

func (x *ChatTips_GeneralGrayTipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GeneralGrayTipInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_GeneralGrayTipInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ChatTips_GeneralGrayTipInfo) GetBusiType() uint64 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetBusiId() uint64 {
	if x != nil {
		return x.BusiId
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetCtrlFlag() uint32 {
	if x != nil {
		return x.CtrlFlag
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetC2CType() uint32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetTemplId() uint64 {
	if x != nil {
		return x.TemplId
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetMsgTemplParam() []*ChatTips_TemplParam {
	if x != nil {
		return x.MsgTemplParam
	}
	return nil
}

func (x *ChatTips_GeneralGrayTipInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatTips_GeneralGrayTipInfo) GetTipsSeqId() uint64 {
	if x != nil {
		return x.TipsSeqId
	}
	return 0
}

func (x *ChatTips_GeneralGrayTipInfo) GetPbReserv() []byte {
	if x != nil {
		return x.PbReserv
	}
	return nil
}

// GoldMsgTipsElem is the message type for the GoldMsgTipsElem.
type ChatTips_GoldMsgTipsElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`         // type
	Billno   string   `protobuf:"bytes,2,opt,name=billno,proto3" json:"billno,omitempty"`      // billno
	Result   uint32   `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`     // result
	Amount   uint32   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`     // amount
	Total    uint32   `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`       // total
	Interval uint32   `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"` // interval
	Finish   uint32   `protobuf:"varint,7,opt,name=finish,proto3" json:"finish,omitempty"`     // finish
	Uin      []uint64 `protobuf:"varint,8,rep,packed,name=uin,proto3" json:"uin,omitempty"`    // uin
	Action   uint32   `protobuf:"varint,9,opt,name=action,proto3" json:"action,omitempty"`     // action
}

func (x *ChatTips_GoldMsgTipsElem) Reset() {
	*x = ChatTips_GoldMsgTipsElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GoldMsgTipsElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GoldMsgTipsElem) ProtoMessage() {}

func (x *ChatTips_GoldMsgTipsElem) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GoldMsgTipsElem.ProtoReflect.Descriptor instead.
func (*ChatTips_GoldMsgTipsElem) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ChatTips_GoldMsgTipsElem) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ChatTips_GoldMsgTipsElem) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *ChatTips_GoldMsgTipsElem) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *ChatTips_GoldMsgTipsElem) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ChatTips_GoldMsgTipsElem) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ChatTips_GoldMsgTipsElem) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *ChatTips_GoldMsgTipsElem) GetFinish() uint32 {
	if x != nil {
		return x.Finish
	}
	return 0
}

func (x *ChatTips_GoldMsgTipsElem) GetUin() []uint64 {
	if x != nil {
		return x.Uin
	}
	return nil
}

func (x *ChatTips_GoldMsgTipsElem) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// GrayData is the message type for the GrayData.
type ChatTips_GrayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllRead uint32 `protobuf:"varint,1,opt,name=all_read,json=allRead,proto3" json:"all_read,omitempty"` // all_read
	FeedId  string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`     // feed_id
}

func (x *ChatTips_GrayData) Reset() {
	*x = ChatTips_GrayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GrayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GrayData) ProtoMessage() {}

func (x *ChatTips_GrayData) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GrayData.ProtoReflect.Descriptor instead.
func (*ChatTips_GrayData) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ChatTips_GrayData) GetAllRead() uint32 {
	if x != nil {
		return x.AllRead
	}
	return 0
}

func (x *ChatTips_GrayData) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

// GroupAnnounceTBCInfo is the message type for the GroupAnnounceTBCInfo.
type ChatTips_GroupAnnounceTBCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedsId []byte `protobuf:"bytes,1,opt,name=feeds_id,json=feedsId,proto3" json:"feeds_id,omitempty"`  // feeds_id
	GroupId uint64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // group_id
	Action  uint32 `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`                  // action
}

func (x *ChatTips_GroupAnnounceTBCInfo) Reset() {
	*x = ChatTips_GroupAnnounceTBCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GroupAnnounceTBCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GroupAnnounceTBCInfo) ProtoMessage() {}

func (x *ChatTips_GroupAnnounceTBCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GroupAnnounceTBCInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_GroupAnnounceTBCInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ChatTips_GroupAnnounceTBCInfo) GetFeedsId() []byte {
	if x != nil {
		return x.FeedsId
	}
	return nil
}

func (x *ChatTips_GroupAnnounceTBCInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ChatTips_GroupAnnounceTBCInfo) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// GroupAsyncNotify is the message type for the GroupAsyncNotify.
type ChatTips_GroupAsyncNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"` // uint32_msg_type
	MsgSeq  uint64 `protobuf:"varint,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`    // uint64_msg_seq
}

func (x *ChatTips_GroupAsyncNotify) Reset() {
	*x = ChatTips_GroupAsyncNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GroupAsyncNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GroupAsyncNotify) ProtoMessage() {}

func (x *ChatTips_GroupAsyncNotify) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GroupAsyncNotify.ProtoReflect.Descriptor instead.
func (*ChatTips_GroupAsyncNotify) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ChatTips_GroupAsyncNotify) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatTips_GroupAsyncNotify) GetMsgSeq() uint64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

// GroupInfoChange is the message type for the GroupInfoChange.
type ChatTips_GroupInfoChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupHonorSwitch       uint32 `protobuf:"varint,1,opt,name=group_honor_switch,json=groupHonorSwitch,proto3" json:"group_honor_switch,omitempty"`                     // uint32_group_honor_switch
	GroupMemberLevelSwitch uint32 `protobuf:"varint,2,opt,name=group_member_level_switch,json=groupMemberLevelSwitch,proto3" json:"group_member_level_switch,omitempty"` // uint32_group_member_level_switch
	GroupFlagext4          uint32 `protobuf:"varint,3,opt,name=group_flagext4,json=groupFlagext4,proto3" json:"group_flagext4,omitempty"`                                // uint32_group_flagext4
	AppealDeadline         uint32 `protobuf:"varint,4,opt,name=appeal_deadline,json=appealDeadline,proto3" json:"appeal_deadline,omitempty"`                             // uint32_appeal_deadline
	GroupFlag              uint32 `protobuf:"varint,5,opt,name=group_flag,json=groupFlag,proto3" json:"group_flag,omitempty"`                                            // uint32_group_flag
	GroupFlagext3          uint32 `protobuf:"varint,7,opt,name=group_flagext3,json=groupFlagext3,proto3" json:"group_flagext3,omitempty"`                                // uint32_group_flagext3
	GroupClassExt          uint32 `protobuf:"varint,8,opt,name=group_class_ext,json=groupClassExt,proto3" json:"group_class_ext,omitempty"`                              // uint32_group_class_ext
	GroupInfoExtSeq        uint32 `protobuf:"varint,9,opt,name=group_info_ext_seq,json=groupInfoExtSeq,proto3" json:"group_info_ext_seq,omitempty"`                      // uint32_group_info_ext_seq
}

func (x *ChatTips_GroupInfoChange) Reset() {
	*x = ChatTips_GroupInfoChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GroupInfoChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GroupInfoChange) ProtoMessage() {}

func (x *ChatTips_GroupInfoChange) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GroupInfoChange.ProtoReflect.Descriptor instead.
func (*ChatTips_GroupInfoChange) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 8}
}

func (x *ChatTips_GroupInfoChange) GetGroupHonorSwitch() uint32 {
	if x != nil {
		return x.GroupHonorSwitch
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetGroupMemberLevelSwitch() uint32 {
	if x != nil {
		return x.GroupMemberLevelSwitch
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetGroupFlagext4() uint32 {
	if x != nil {
		return x.GroupFlagext4
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetAppealDeadline() uint32 {
	if x != nil {
		return x.AppealDeadline
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetGroupFlag() uint32 {
	if x != nil {
		return x.GroupFlag
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetGroupFlagext3() uint32 {
	if x != nil {
		return x.GroupFlagext3
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetGroupClassExt() uint32 {
	if x != nil {
		return x.GroupClassExt
	}
	return 0
}

func (x *ChatTips_GroupInfoChange) GetGroupInfoExtSeq() uint32 {
	if x != nil {
		return x.GroupInfoExtSeq
	}
	return 0
}

// GroupNotifyInfo is the message type for the GroupNotifyInfo.
type ChatTips_GroupNotifyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoPullFlag *uint32 `protobuf:"varint,1,opt,name=auto_pull_flag,json=autoPullFlag,proto3,oneof" json:"auto_pull_flag,omitempty"` // opt_uint32_auto_pull_flag
	FeedsId      []byte  `protobuf:"bytes,2,opt,name=feeds_id,json=feedsId,proto3,oneof" json:"feeds_id,omitempty"`                   // opt_bytes_feeds_id
}

func (x *ChatTips_GroupNotifyInfo) Reset() {
	*x = ChatTips_GroupNotifyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_GroupNotifyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_GroupNotifyInfo) ProtoMessage() {}

func (x *ChatTips_GroupNotifyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_GroupNotifyInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_GroupNotifyInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 9}
}

func (x *ChatTips_GroupNotifyInfo) GetAutoPullFlag() uint32 {
	if x != nil && x.AutoPullFlag != nil {
		return *x.AutoPullFlag
	}
	return 0
}

func (x *ChatTips_GroupNotifyInfo) GetFeedsId() []byte {
	if x != nil {
		return x.FeedsId
	}
	return nil
}

// InstCtrl is the message type for the InstCtrl.
type ChatTips_InstCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgSendToInst  []*ChatTips_InstInfo `protobuf:"bytes,1,rep,name=msg_send_to_inst,json=msgSendToInst,proto3" json:"msg_send_to_inst,omitempty"`  // rpt_msg_send_to_inst
	MsgExcludeInst []*ChatTips_InstInfo `protobuf:"bytes,2,rep,name=msg_exclude_inst,json=msgExcludeInst,proto3" json:"msg_exclude_inst,omitempty"` // rpt_msg_exclude_inst
	MsgFromInst    *ChatTips_InstInfo   `protobuf:"bytes,3,opt,name=msg_from_inst,json=msgFromInst,proto3" json:"msg_from_inst,omitempty"`          // msg_from_inst
}

func (x *ChatTips_InstCtrl) Reset() {
	*x = ChatTips_InstCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_InstCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_InstCtrl) ProtoMessage() {}

func (x *ChatTips_InstCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_InstCtrl.ProtoReflect.Descriptor instead.
func (*ChatTips_InstCtrl) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 10}
}

func (x *ChatTips_InstCtrl) GetMsgSendToInst() []*ChatTips_InstInfo {
	if x != nil {
		return x.MsgSendToInst
	}
	return nil
}

func (x *ChatTips_InstCtrl) GetMsgExcludeInst() []*ChatTips_InstInfo {
	if x != nil {
		return x.MsgExcludeInst
	}
	return nil
}

func (x *ChatTips_InstCtrl) GetMsgFromInst() *ChatTips_InstInfo {
	if x != nil {
		return x.MsgFromInst
	}
	return nil
}

// InstInfo is the message type for the InstInfo.
type ChatTips_InstInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apppid    uint32 `protobuf:"varint,1,opt,name=apppid,proto3" json:"apppid,omitempty"`                        // uint32_apppid
	Instid    uint32 `protobuf:"varint,2,opt,name=instid,proto3" json:"instid,omitempty"`                        // uint32_instid
	Platform  uint32 `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`                    // uint32_platform
	OpenAppid uint32 `protobuf:"varint,4,opt,name=open_appid,json=openAppid,proto3" json:"open_appid,omitempty"` // uint32_open_appid
	Productid uint32 `protobuf:"varint,5,opt,name=productid,proto3" json:"productid,omitempty"`                  // uint32_productid
	SsoBid    uint32 `protobuf:"varint,6,opt,name=sso_bid,json=ssoBid,proto3" json:"sso_bid,omitempty"`          // uint32_sso_bid
	Guid      []byte `protobuf:"bytes,7,opt,name=guid,proto3" json:"guid,omitempty"`                             // bytes_guid
	VerMin    uint32 `protobuf:"varint,8,opt,name=ver_min,json=verMin,proto3" json:"ver_min,omitempty"`          // uint32_ver_min
	VerMax    uint32 `protobuf:"varint,9,opt,name=ver_max,json=verMax,proto3" json:"ver_max,omitempty"`          // uint32_ver_max
}

func (x *ChatTips_InstInfo) Reset() {
	*x = ChatTips_InstInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_InstInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_InstInfo) ProtoMessage() {}

func (x *ChatTips_InstInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_InstInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_InstInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 11}
}

func (x *ChatTips_InstInfo) GetApppid() uint32 {
	if x != nil {
		return x.Apppid
	}
	return 0
}

func (x *ChatTips_InstInfo) GetInstid() uint32 {
	if x != nil {
		return x.Instid
	}
	return 0
}

func (x *ChatTips_InstInfo) GetPlatform() uint32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *ChatTips_InstInfo) GetOpenAppid() uint32 {
	if x != nil {
		return x.OpenAppid
	}
	return 0
}

func (x *ChatTips_InstInfo) GetProductid() uint32 {
	if x != nil {
		return x.Productid
	}
	return 0
}

func (x *ChatTips_InstInfo) GetSsoBid() uint32 {
	if x != nil {
		return x.SsoBid
	}
	return 0
}

func (x *ChatTips_InstInfo) GetGuid() []byte {
	if x != nil {
		return x.Guid
	}
	return nil
}

func (x *ChatTips_InstInfo) GetVerMin() uint32 {
	if x != nil {
		return x.VerMin
	}
	return 0
}

func (x *ChatTips_InstInfo) GetVerMax() uint32 {
	if x != nil {
		return x.VerMax
	}
	return 0
}

// LbsShareChangePushInfo is the message type for the LbsShareChangePushInfo.
type ChatTips_LbsShareChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType     uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`            // uint32_msg_type
	MsgInfo     []byte `protobuf:"bytes,2,opt,name=msg_info,json=msgInfo,proto3" json:"msg_info,omitempty"`             // bytes_msg_info
	VersionCtrl []byte `protobuf:"bytes,3,opt,name=version_ctrl,json=versionCtrl,proto3" json:"version_ctrl,omitempty"` // bytes_version_ctrl
	GroupId     uint64 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`            // uint64_group_id
	OperUin     uint64 `protobuf:"varint,5,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`            // uint64_oper_uin
	GrayTips    []byte `protobuf:"bytes,6,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`          // bytes_gray_tips
	MsgSeq      uint64 `protobuf:"varint,7,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`               // uint64_msg_seq
	JoinNums    uint32 `protobuf:"varint,8,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`         // uint32_join_nums
	PushType    uint32 `protobuf:"varint,99,opt,name=push_type,json=pushType,proto3" json:"push_type,omitempty"`        // uint32_push_type
	ExtInfo     []byte `protobuf:"bytes,100,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`           // bytes_ext_info
}

func (x *ChatTips_LbsShareChangePushInfo) Reset() {
	*x = ChatTips_LbsShareChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_LbsShareChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_LbsShareChangePushInfo) ProtoMessage() {}

func (x *ChatTips_LbsShareChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_LbsShareChangePushInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_LbsShareChangePushInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 12}
}

func (x *ChatTips_LbsShareChangePushInfo) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatTips_LbsShareChangePushInfo) GetMsgInfo() []byte {
	if x != nil {
		return x.MsgInfo
	}
	return nil
}

func (x *ChatTips_LbsShareChangePushInfo) GetVersionCtrl() []byte {
	if x != nil {
		return x.VersionCtrl
	}
	return nil
}

func (x *ChatTips_LbsShareChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ChatTips_LbsShareChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *ChatTips_LbsShareChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *ChatTips_LbsShareChangePushInfo) GetMsgSeq() uint64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *ChatTips_LbsShareChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

func (x *ChatTips_LbsShareChangePushInfo) GetPushType() uint32 {
	if x != nil {
		return x.PushType
	}
	return 0
}

func (x *ChatTips_LbsShareChangePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// LuckyBagNotify is the message type for the LuckyBagNotify.
type ChatTips_LuckyBagNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgTips []byte `protobuf:"bytes,1,opt,name=msg_tips,json=msgTips,proto3" json:"msg_tips,omitempty"` // bytes_msg_tips
}

func (x *ChatTips_LuckyBagNotify) Reset() {
	*x = ChatTips_LuckyBagNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_LuckyBagNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_LuckyBagNotify) ProtoMessage() {}

func (x *ChatTips_LuckyBagNotify) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_LuckyBagNotify.ProtoReflect.Descriptor instead.
func (*ChatTips_LuckyBagNotify) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 13}
}

func (x *ChatTips_LuckyBagNotify) GetMsgTips() []byte {
	if x != nil {
		return x.MsgTips
	}
	return nil
}

// MediaChangePushInfo is the message type for the MediaChangePushInfo.
type ChatTips_MediaChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType         uint32                                        `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`                              // uint32_msg_type
	MsgInfo         []byte                                        `protobuf:"bytes,2,opt,name=msg_info,json=msgInfo,proto3" json:"msg_info,omitempty"`                               // bytes_msg_info
	VersionCtrl     []byte                                        `protobuf:"bytes,3,opt,name=version_ctrl,json=versionCtrl,proto3" json:"version_ctrl,omitempty"`                   // bytes_version_ctrl
	GroupId         uint64                                        `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                              // uint64_group_id
	OperUin         uint64                                        `protobuf:"varint,5,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`                              // uint64_oper_uin
	GrayTips        []byte                                        `protobuf:"bytes,6,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`                            // bytes_gray_tips
	MsgSeq          uint64                                        `protobuf:"varint,7,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`                                 // uint64_msg_seq
	JoinNums        uint32                                        `protobuf:"varint,8,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`                           // uint32_join_nums
	MsgPerSetting   *ChatTips_MediaChangePushInfo_PersonalSetting `protobuf:"bytes,9,opt,name=msg_per_setting,json=msgPerSetting,proto3" json:"msg_per_setting,omitempty"`           // msg_per_setting
	PlayMode        uint32                                        `protobuf:"varint,10,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`                          // uint32_play_mode
	IsJoinWhenStart bool                                          `protobuf:"varint,11,opt,name=is_join_when_start,json=isJoinWhenStart,proto3" json:"is_join_when_start,omitempty"` // is_join_when_start
	MediaType       uint32                                        `protobuf:"varint,99,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`                       // uint32_media_type
	ExtInfo         []byte                                        `protobuf:"bytes,100,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`                             // bytes_ext_info
}

func (x *ChatTips_MediaChangePushInfo) Reset() {
	*x = ChatTips_MediaChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MediaChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MediaChangePushInfo) ProtoMessage() {}

func (x *ChatTips_MediaChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MediaChangePushInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_MediaChangePushInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 14}
}

func (x *ChatTips_MediaChangePushInfo) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetMsgInfo() []byte {
	if x != nil {
		return x.MsgInfo
	}
	return nil
}

func (x *ChatTips_MediaChangePushInfo) GetVersionCtrl() []byte {
	if x != nil {
		return x.VersionCtrl
	}
	return nil
}

func (x *ChatTips_MediaChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *ChatTips_MediaChangePushInfo) GetMsgSeq() uint64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetMsgPerSetting() *ChatTips_MediaChangePushInfo_PersonalSetting {
	if x != nil {
		return x.MsgPerSetting
	}
	return nil
}

func (x *ChatTips_MediaChangePushInfo) GetPlayMode() uint32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetIsJoinWhenStart() bool {
	if x != nil {
		return x.IsJoinWhenStart
	}
	return false
}

func (x *ChatTips_MediaChangePushInfo) GetMediaType() uint32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// MessageBoxInfo is the message type for the MessageBoxInfo.
type ChatTips_MessageBoxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"` // opt_bytes_content
	Title   []byte `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`     // opt_bytes_title
	Button  []byte `protobuf:"bytes,3,opt,name=button,proto3,oneof" json:"button,omitempty"`   // opt_bytes_button
}

func (x *ChatTips_MessageBoxInfo) Reset() {
	*x = ChatTips_MessageBoxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MessageBoxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MessageBoxInfo) ProtoMessage() {}

func (x *ChatTips_MessageBoxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MessageBoxInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_MessageBoxInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 15}
}

func (x *ChatTips_MessageBoxInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatTips_MessageBoxInfo) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ChatTips_MessageBoxInfo) GetButton() []byte {
	if x != nil {
		return x.Button
	}
	return nil
}

// MessageRecallReminder is the message type for the MessageRecallReminder.
type ChatTips_MessageRecallReminder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin             uint64                                              `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                                 // uint64_uin
	Nickname        []byte                                              `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                        // bytes_nickname
	RecalledMsgList []*ChatTips_MessageRecallReminder_MessageMeta       `protobuf:"bytes,3,rep,name=recalled_msg_list,json=recalledMsgList,proto3" json:"recalled_msg_list,omitempty"` // uint32_recalled_msg_list
	ReminderContent []byte                                              `protobuf:"bytes,4,opt,name=reminder_content,json=reminderContent,proto3" json:"reminder_content,omitempty"`   // str_reminder_content
	Userdef         []byte                                              `protobuf:"bytes,5,opt,name=userdef,proto3" json:"userdef,omitempty"`                                          // bytes_userdef
	GroupType       uint32                                              `protobuf:"varint,6,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`                    // uint32_group_type
	OpType          uint32                                              `protobuf:"varint,7,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`                             // uint32_op_type
	AdminUin        uint64                                              `protobuf:"varint,8,opt,name=admin_uin,json=adminUin,proto3" json:"admin_uin,omitempty"`                       // uint64_admin_uin
	MsgWordingInfo  *ChatTips_MessageRecallReminder_WithDrawWordingInfo `protobuf:"bytes,9,opt,name=msg_wording_info,json=msgWordingInfo,proto3" json:"msg_wording_info,omitempty"`    // msg_wording_info
}

func (x *ChatTips_MessageRecallReminder) Reset() {
	*x = ChatTips_MessageRecallReminder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MessageRecallReminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MessageRecallReminder) ProtoMessage() {}

func (x *ChatTips_MessageRecallReminder) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MessageRecallReminder.ProtoReflect.Descriptor instead.
func (*ChatTips_MessageRecallReminder) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 16}
}

func (x *ChatTips_MessageRecallReminder) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder) GetNickname() []byte {
	if x != nil {
		return x.Nickname
	}
	return nil
}

func (x *ChatTips_MessageRecallReminder) GetRecalledMsgList() []*ChatTips_MessageRecallReminder_MessageMeta {
	if x != nil {
		return x.RecalledMsgList
	}
	return nil
}

func (x *ChatTips_MessageRecallReminder) GetReminderContent() []byte {
	if x != nil {
		return x.ReminderContent
	}
	return nil
}

func (x *ChatTips_MessageRecallReminder) GetUserdef() []byte {
	if x != nil {
		return x.Userdef
	}
	return nil
}

func (x *ChatTips_MessageRecallReminder) GetGroupType() uint32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder) GetOpType() uint32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder) GetAdminUin() uint64 {
	if x != nil {
		return x.AdminUin
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder) GetMsgWordingInfo() *ChatTips_MessageRecallReminder_WithDrawWordingInfo {
	if x != nil {
		return x.MsgWordingInfo
	}
	return nil
}

// MiniAppNotify is the message type for the MiniAppNotify.
type ChatTips_MiniAppNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []byte `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // bytes_msg
}

func (x *ChatTips_MiniAppNotify) Reset() {
	*x = ChatTips_MiniAppNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MiniAppNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MiniAppNotify) ProtoMessage() {}

func (x *ChatTips_MiniAppNotify) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MiniAppNotify.ProtoReflect.Descriptor instead.
func (*ChatTips_MiniAppNotify) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 17}
}

func (x *ChatTips_MiniAppNotify) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// NotifyMsgBody is the message type for the NotifyMsgBody.
type ChatTips_NotifyMsgBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnumType                *int32                               `protobuf:"varint,1,opt,name=enum_type,json=enumType,proto3,oneof" json:"enum_type,omitempty"`                                                 // opt_enum_type
	MsgTime                 *uint64                              `protobuf:"varint,2,opt,name=msg_time,json=msgTime,proto3,oneof" json:"msg_time,omitempty"`                                                    // opt_uint64_msg_time
	MsgExpires              *uint64                              `protobuf:"varint,3,opt,name=msg_expires,json=msgExpires,proto3,oneof" json:"msg_expires,omitempty"`                                           // opt_uint64_msg_expires
	GroupCode               *uint64                              `protobuf:"varint,4,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"`                                              // opt_uint64_group_code
	MsgGraytips             *ChatTips_AIOGrayTipsInfo            `protobuf:"bytes,5,opt,name=msg_graytips,json=msgGraytips,proto3,oneof" json:"msg_graytips,omitempty"`                                         // opt_msg_graytips
	MsgMessagebox           *ChatTips_MessageBoxInfo             `protobuf:"bytes,6,opt,name=msg_messagebox,json=msgMessagebox,proto3,oneof" json:"msg_messagebox,omitempty"`                                   // opt_msg_messagebox
	MsgFloatedtips          *ChatTips_FloatedTipsInfo            `protobuf:"bytes,7,opt,name=msg_floatedtips,json=msgFloatedtips,proto3,oneof" json:"msg_floatedtips,omitempty"`                                // opt_msg_floatedtips
	MsgToptips              *ChatTips_AIOTopTipsInfo             `protobuf:"bytes,8,opt,name=msg_toptips,json=msgToptips,proto3,oneof" json:"msg_toptips,omitempty"`                                            // opt_msg_toptips
	MsgRedtips              *ChatTips_RedGrayTipsInfo            `protobuf:"bytes,9,opt,name=msg_redtips,json=msgRedtips,proto3,oneof" json:"msg_redtips,omitempty"`                                            // opt_msg_redtips
	MsgGroupNotify          *ChatTips_GroupNotifyInfo            `protobuf:"bytes,10,opt,name=msg_group_notify,json=msgGroupNotify,proto3,oneof" json:"msg_group_notify,omitempty"`                             // opt_msg_group_notify
	MsgRecall               *ChatTips_MessageRecallReminder      `protobuf:"bytes,11,opt,name=msg_recall,json=msgRecall,proto3,oneof" json:"msg_recall,omitempty"`                                              // opt_msg_recall
	MsgThemeNotify          *ChatTips_ThemeStateNotify           `protobuf:"bytes,12,opt,name=msg_theme_notify,json=msgThemeNotify,proto3,oneof" json:"msg_theme_notify,omitempty"`                             // opt_msg_theme_notify
	ServiceType             uint32                               `protobuf:"varint,13,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`                                             // uint32_service_type
	MsgObjmsgUpdate         *ChatTips_NotifyObjmsgUpdate         `protobuf:"bytes,14,opt,name=msg_objmsg_update,json=msgObjmsgUpdate,proto3,oneof" json:"msg_objmsg_update,omitempty"`                          // opt_msg_objmsg_update
	MsgWerewolfPush         *ChatTips_WereWolfPush               `protobuf:"bytes,15,opt,name=msg_werewolf_push,json=msgWerewolfPush,proto3,oneof" json:"msg_werewolf_push,omitempty"`                          // opt_msg_werewolf_push
	StcmGameState           *ApolloGameStatus_STCMGameMessage    `protobuf:"bytes,16,opt,name=stcm_game_state,json=stcmGameState,proto3,oneof" json:"stcm_game_state,omitempty"`                                // opt_stcm_game_state
	AplloMsgPush            *ApolloPushMessage_STPushMsgElem     `protobuf:"bytes,17,opt,name=apllo_msg_push,json=aplloMsgPush,proto3" json:"apllo_msg_push,omitempty"`                                         // apllo_msg_push
	MsgGoldtips             *ChatTips_GoldMsgTipsElem            `protobuf:"bytes,18,opt,name=msg_goldtips,json=msgGoldtips,proto3,oneof" json:"msg_goldtips,omitempty"`                                        // opt_msg_goldtips
	MsgMiniappNotify        *ChatTips_MiniAppNotify              `protobuf:"bytes,20,opt,name=msg_miniapp_notify,json=msgMiniappNotify,proto3,oneof" json:"msg_miniapp_notify,omitempty"`                       // opt_msg_miniapp_notify
	SenderUin               *uint64                              `protobuf:"varint,21,opt,name=sender_uin,json=senderUin,proto3,oneof" json:"sender_uin,omitempty"`                                             // opt_uint64_sender_uin
	MsgLuckybagNotify       *ChatTips_LuckyBagNotify             `protobuf:"bytes,22,opt,name=msg_luckybag_notify,json=msgLuckybagNotify,proto3,oneof" json:"msg_luckybag_notify,omitempty"`                    // opt_msg_luckybag_notify
	MsgTroopformtipsPush    *ChatTips_TroopFormGrayTipsInfo      `protobuf:"bytes,23,opt,name=msg_troopformtips_push,json=msgTroopformtipsPush,proto3,oneof" json:"msg_troopformtips_push,omitempty"`           // opt_msg_troopformtips_push
	MsgMediaPush            *ChatTips_MediaChangePushInfo        `protobuf:"bytes,24,opt,name=msg_media_push,json=msgMediaPush,proto3,oneof" json:"msg_media_push,omitempty"`                                   // opt_msg_media_push
	GeneralGrayTip          *ChatTips_GeneralGrayTipInfo         `protobuf:"bytes,26,opt,name=general_gray_tip,json=generalGrayTip,proto3,oneof" json:"general_gray_tip,omitempty"`                             // opt_general_gray_tip
	MsgVideoPush            *ChatTips_VideoChangePushInfo        `protobuf:"bytes,27,opt,name=msg_video_push,json=msgVideoPush,proto3,oneof" json:"msg_video_push,omitempty"`                                   // opt_msg_video_push
	LbsShareChangePlusInfo  *ChatTips_LbsShareChangePushInfo     `protobuf:"bytes,28,opt,name=lbs_share_change_plus_info,json=lbsShareChangePlusInfo,proto3,oneof" json:"lbs_share_change_plus_info,omitempty"` // opt_lbs_share_change_plus_info
	MsgSingPush             *ChatTips_SingChangePushInfo         `protobuf:"bytes,29,opt,name=msg_sing_push,json=msgSingPush,proto3,oneof" json:"msg_sing_push,omitempty"`                                      // opt_msg_sing_push
	MsgGroupInfoChange      *ChatTips_GroupInfoChange            `protobuf:"bytes,30,opt,name=msg_group_info_change,json=msgGroupInfoChange,proto3,oneof" json:"msg_group_info_change,omitempty"`               // opt_msg_group_info_change
	GroupAnnounceTbcInfo    *ChatTips_GroupAnnounceTBCInfo       `protobuf:"bytes,31,opt,name=group_announce_tbc_info,json=groupAnnounceTbcInfo,proto3,oneof" json:"group_announce_tbc_info,omitempty"`         // opt_group_announce_tbc_info
	QqVedioGamePushInfo     *ChatTips_QQVedioGamePushInfo        `protobuf:"bytes,32,opt,name=qq_vedio_game_push_info,json=qqVedioGamePushInfo,proto3,oneof" json:"qq_vedio_game_push_info,omitempty"`          // opt_qq_vedio_game_push_info
	QqGroupDigestMsg        *ChatTips_QQGroupDigestMsg           `protobuf:"bytes,33,opt,name=qq_group_digest_msg,json=qqGroupDigestMsg,proto3,oneof" json:"qq_group_digest_msg,omitempty"`                     // opt_qq_group_digest_msg
	StudyRoomMemberMsg      *ChatTips_StudyRoomMemberChangePush  `protobuf:"bytes,34,opt,name=study_room_member_msg,json=studyRoomMemberMsg,proto3,oneof" json:"study_room_member_msg,omitempty"`               // opt_study_room_member_msg
	QqLiveNotify            *ChatTips_QQVaLiveNotifyMsg          `protobuf:"bytes,35,opt,name=qq_live_notify,json=qqLiveNotify,proto3,oneof" json:"qq_live_notify,omitempty"`                                   // opt_qq_live_notify
	GroupAsyncNotidy        *ChatTips_GroupAsyncNotify           `protobuf:"bytes,36,opt,name=group_async_notidy,json=groupAsyncNotidy,proto3,oneof" json:"group_async_notidy,omitempty"`                       // opt_group_async_notidy
	GroupCurMsgSeq          *uint64                              `protobuf:"varint,37,opt,name=group_cur_msg_seq,json=groupCurMsgSeq,proto3,oneof" json:"group_cur_msg_seq,omitempty"`                          // opt_uint64_group_cur_msg_seq
	GroupDigestMsgSummary   *ChatTips_QQGroupDigestMsgSummary    `protobuf:"bytes,38,opt,name=group_digest_msg_summary,json=groupDigestMsgSummary,proto3,oneof" json:"group_digest_msg_summary,omitempty"`      // opt_group_digest_msg_summary
	SysdbMsgId              *uint64                              `protobuf:"varint,39,opt,name=sysdb_msg_id,json=sysdbMsgId,proto3,oneof" json:"sysdb_msg_id,omitempty"`                                        // opt_uint64_sysdb_msg_id
	RevertGraytipsTraceless *ChatTips_RevertGrayTipsMsgTraceless `protobuf:"bytes,40,opt,name=revert_graytips_traceless,json=revertGraytipsTraceless,proto3,oneof" json:"revert_graytips_traceless,omitempty"`  // opt_revert_graytips_traceless
}

func (x *ChatTips_NotifyMsgBody) Reset() {
	*x = ChatTips_NotifyMsgBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_NotifyMsgBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_NotifyMsgBody) ProtoMessage() {}

func (x *ChatTips_NotifyMsgBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_NotifyMsgBody.ProtoReflect.Descriptor instead.
func (*ChatTips_NotifyMsgBody) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 18}
}

func (x *ChatTips_NotifyMsgBody) GetEnumType() int32 {
	if x != nil && x.EnumType != nil {
		return *x.EnumType
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetMsgTime() uint64 {
	if x != nil && x.MsgTime != nil {
		return *x.MsgTime
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetMsgExpires() uint64 {
	if x != nil && x.MsgExpires != nil {
		return *x.MsgExpires
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetMsgGraytips() *ChatTips_AIOGrayTipsInfo {
	if x != nil {
		return x.MsgGraytips
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgMessagebox() *ChatTips_MessageBoxInfo {
	if x != nil {
		return x.MsgMessagebox
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgFloatedtips() *ChatTips_FloatedTipsInfo {
	if x != nil {
		return x.MsgFloatedtips
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgToptips() *ChatTips_AIOTopTipsInfo {
	if x != nil {
		return x.MsgToptips
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgRedtips() *ChatTips_RedGrayTipsInfo {
	if x != nil {
		return x.MsgRedtips
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgGroupNotify() *ChatTips_GroupNotifyInfo {
	if x != nil {
		return x.MsgGroupNotify
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgRecall() *ChatTips_MessageRecallReminder {
	if x != nil {
		return x.MsgRecall
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgThemeNotify() *ChatTips_ThemeStateNotify {
	if x != nil {
		return x.MsgThemeNotify
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetMsgObjmsgUpdate() *ChatTips_NotifyObjmsgUpdate {
	if x != nil {
		return x.MsgObjmsgUpdate
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgWerewolfPush() *ChatTips_WereWolfPush {
	if x != nil {
		return x.MsgWerewolfPush
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetStcmGameState() *ApolloGameStatus_STCMGameMessage {
	if x != nil {
		return x.StcmGameState
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetAplloMsgPush() *ApolloPushMessage_STPushMsgElem {
	if x != nil {
		return x.AplloMsgPush
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgGoldtips() *ChatTips_GoldMsgTipsElem {
	if x != nil {
		return x.MsgGoldtips
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgMiniappNotify() *ChatTips_MiniAppNotify {
	if x != nil {
		return x.MsgMiniappNotify
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetSenderUin() uint64 {
	if x != nil && x.SenderUin != nil {
		return *x.SenderUin
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetMsgLuckybagNotify() *ChatTips_LuckyBagNotify {
	if x != nil {
		return x.MsgLuckybagNotify
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgTroopformtipsPush() *ChatTips_TroopFormGrayTipsInfo {
	if x != nil {
		return x.MsgTroopformtipsPush
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgMediaPush() *ChatTips_MediaChangePushInfo {
	if x != nil {
		return x.MsgMediaPush
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetGeneralGrayTip() *ChatTips_GeneralGrayTipInfo {
	if x != nil {
		return x.GeneralGrayTip
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgVideoPush() *ChatTips_VideoChangePushInfo {
	if x != nil {
		return x.MsgVideoPush
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetLbsShareChangePlusInfo() *ChatTips_LbsShareChangePushInfo {
	if x != nil {
		return x.LbsShareChangePlusInfo
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgSingPush() *ChatTips_SingChangePushInfo {
	if x != nil {
		return x.MsgSingPush
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetMsgGroupInfoChange() *ChatTips_GroupInfoChange {
	if x != nil {
		return x.MsgGroupInfoChange
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetGroupAnnounceTbcInfo() *ChatTips_GroupAnnounceTBCInfo {
	if x != nil {
		return x.GroupAnnounceTbcInfo
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetQqVedioGamePushInfo() *ChatTips_QQVedioGamePushInfo {
	if x != nil {
		return x.QqVedioGamePushInfo
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetQqGroupDigestMsg() *ChatTips_QQGroupDigestMsg {
	if x != nil {
		return x.QqGroupDigestMsg
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetStudyRoomMemberMsg() *ChatTips_StudyRoomMemberChangePush {
	if x != nil {
		return x.StudyRoomMemberMsg
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetQqLiveNotify() *ChatTips_QQVaLiveNotifyMsg {
	if x != nil {
		return x.QqLiveNotify
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetGroupAsyncNotidy() *ChatTips_GroupAsyncNotify {
	if x != nil {
		return x.GroupAsyncNotidy
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetGroupCurMsgSeq() uint64 {
	if x != nil && x.GroupCurMsgSeq != nil {
		return *x.GroupCurMsgSeq
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetGroupDigestMsgSummary() *ChatTips_QQGroupDigestMsgSummary {
	if x != nil {
		return x.GroupDigestMsgSummary
	}
	return nil
}

func (x *ChatTips_NotifyMsgBody) GetSysdbMsgId() uint64 {
	if x != nil && x.SysdbMsgId != nil {
		return *x.SysdbMsgId
	}
	return 0
}

func (x *ChatTips_NotifyMsgBody) GetRevertGraytipsTraceless() *ChatTips_RevertGrayTipsMsgTraceless {
	if x != nil {
		return x.RevertGraytipsTraceless
	}
	return nil
}

// NotifyObjmsgUpdate is the message type for the NotifyObjmsgUpdate.
type ChatTips_NotifyObjmsgUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjmsgId   []byte `protobuf:"bytes,1,opt,name=objmsg_id,json=objmsgId,proto3" json:"objmsg_id,omitempty"`        // bytes_objmsg_id
	UpdateType uint32 `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"` // uint32_update_type
	ExtMsg     []byte `protobuf:"bytes,3,opt,name=ext_msg,json=extMsg,proto3" json:"ext_msg,omitempty"`              // bytes_ext_msg
}

func (x *ChatTips_NotifyObjmsgUpdate) Reset() {
	*x = ChatTips_NotifyObjmsgUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_NotifyObjmsgUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_NotifyObjmsgUpdate) ProtoMessage() {}

func (x *ChatTips_NotifyObjmsgUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_NotifyObjmsgUpdate.ProtoReflect.Descriptor instead.
func (*ChatTips_NotifyObjmsgUpdate) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 19}
}

func (x *ChatTips_NotifyObjmsgUpdate) GetObjmsgId() []byte {
	if x != nil {
		return x.ObjmsgId
	}
	return nil
}

func (x *ChatTips_NotifyObjmsgUpdate) GetUpdateType() uint32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

func (x *ChatTips_NotifyObjmsgUpdate) GetExtMsg() []byte {
	if x != nil {
		return x.ExtMsg
	}
	return nil
}

// QQGroupDigestMsg is the message type for the QQGroupDigestMsg.
type ChatTips_QQGroupDigestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode     uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`               // group_code
	MsgSeq        uint32 `protobuf:"varint,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`                        // msg_seq
	MsgRandom     uint32 `protobuf:"varint,3,opt,name=msg_random,json=msgRandom,proto3" json:"msg_random,omitempty"`               // msg_random
	OpType        int32  `protobuf:"varint,4,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`                        // op_type
	MsgSender     uint64 `protobuf:"varint,5,opt,name=msg_sender,json=msgSender,proto3" json:"msg_sender,omitempty"`               // msg_sender
	DigestOper    uint64 `protobuf:"varint,6,opt,name=digest_oper,json=digestOper,proto3" json:"digest_oper,omitempty"`            // digest_oper
	OpTime        uint32 `protobuf:"varint,7,opt,name=op_time,json=opTime,proto3" json:"op_time,omitempty"`                        // op_time
	LastestMsgSeq uint32 `protobuf:"varint,8,opt,name=lastest_msg_seq,json=lastestMsgSeq,proto3" json:"lastest_msg_seq,omitempty"` // lastest_msg_seq
	OperNick      []byte `protobuf:"bytes,9,opt,name=oper_nick,json=operNick,proto3" json:"oper_nick,omitempty"`                   // oper_nick
	SenderNick    []byte `protobuf:"bytes,10,opt,name=sender_nick,json=senderNick,proto3" json:"sender_nick,omitempty"`            // sender_nick
	ExtInfo       int32  `protobuf:"varint,11,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`                    // ext_info
}

func (x *ChatTips_QQGroupDigestMsg) Reset() {
	*x = ChatTips_QQGroupDigestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_QQGroupDigestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_QQGroupDigestMsg) ProtoMessage() {}

func (x *ChatTips_QQGroupDigestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_QQGroupDigestMsg.ProtoReflect.Descriptor instead.
func (*ChatTips_QQGroupDigestMsg) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 20}
}

func (x *ChatTips_QQGroupDigestMsg) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetMsgSeq() uint32 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetMsgRandom() uint32 {
	if x != nil {
		return x.MsgRandom
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetMsgSender() uint64 {
	if x != nil {
		return x.MsgSender
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetDigestOper() uint64 {
	if x != nil {
		return x.DigestOper
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetOpTime() uint32 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetLastestMsgSeq() uint32 {
	if x != nil {
		return x.LastestMsgSeq
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsg) GetOperNick() []byte {
	if x != nil {
		return x.OperNick
	}
	return nil
}

func (x *ChatTips_QQGroupDigestMsg) GetSenderNick() []byte {
	if x != nil {
		return x.SenderNick
	}
	return nil
}

func (x *ChatTips_QQGroupDigestMsg) GetExtInfo() int32 {
	if x != nil {
		return x.ExtInfo
	}
	return 0
}

// QQGroupDigestMsgSummary is the message type for the QQGroupDigestMsgSummary.
type ChatTips_QQGroupDigestMsgSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigestOper  uint64                               `protobuf:"varint,1,opt,name=digest_oper,json=digestOper,proto3" json:"digest_oper,omitempty"`   // digest_oper
	OpType      int32                                `protobuf:"varint,2,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`               // op_type
	OpTime      uint32                               `protobuf:"varint,3,opt,name=op_time,json=opTime,proto3" json:"op_time,omitempty"`               // op_time
	DigestNick  []byte                               `protobuf:"bytes,4,opt,name=digest_nick,json=digestNick,proto3" json:"digest_nick,omitempty"`    // digest_nick
	SuccCnt     int32                                `protobuf:"varint,5,opt,name=succ_cnt,json=succCnt,proto3" json:"succ_cnt,omitempty"`            // succ_cnt
	SummaryInfo []*ChatTips_QQGroupDigestSummaryInfo `protobuf:"bytes,6,rep,name=summary_info,json=summaryInfo,proto3" json:"summary_info,omitempty"` // summary_info
}

func (x *ChatTips_QQGroupDigestMsgSummary) Reset() {
	*x = ChatTips_QQGroupDigestMsgSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_QQGroupDigestMsgSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_QQGroupDigestMsgSummary) ProtoMessage() {}

func (x *ChatTips_QQGroupDigestMsgSummary) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_QQGroupDigestMsgSummary.ProtoReflect.Descriptor instead.
func (*ChatTips_QQGroupDigestMsgSummary) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 21}
}

func (x *ChatTips_QQGroupDigestMsgSummary) GetDigestOper() uint64 {
	if x != nil {
		return x.DigestOper
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsgSummary) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsgSummary) GetOpTime() uint32 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsgSummary) GetDigestNick() []byte {
	if x != nil {
		return x.DigestNick
	}
	return nil
}

func (x *ChatTips_QQGroupDigestMsgSummary) GetSuccCnt() int32 {
	if x != nil {
		return x.SuccCnt
	}
	return 0
}

func (x *ChatTips_QQGroupDigestMsgSummary) GetSummaryInfo() []*ChatTips_QQGroupDigestSummaryInfo {
	if x != nil {
		return x.SummaryInfo
	}
	return nil
}

// QQGroupDigestSummaryInfo is the message type for the QQGroupDigestSummaryInfo.
type ChatTips_QQGroupDigestSummaryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgSeq    uint32 `protobuf:"varint,1,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`          // msg_seq
	MsgRandom uint32 `protobuf:"varint,2,opt,name=msg_random,json=msgRandom,proto3" json:"msg_random,omitempty"` // msg_random
	ErrorCode uint32 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // error_code
}

func (x *ChatTips_QQGroupDigestSummaryInfo) Reset() {
	*x = ChatTips_QQGroupDigestSummaryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_QQGroupDigestSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_QQGroupDigestSummaryInfo) ProtoMessage() {}

func (x *ChatTips_QQGroupDigestSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_QQGroupDigestSummaryInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_QQGroupDigestSummaryInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 22}
}

func (x *ChatTips_QQGroupDigestSummaryInfo) GetMsgSeq() uint32 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *ChatTips_QQGroupDigestSummaryInfo) GetMsgRandom() uint32 {
	if x != nil {
		return x.MsgRandom
	}
	return 0
}

func (x *ChatTips_QQGroupDigestSummaryInfo) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// QQVaLiveNotifyMsg is the message type for the QQVaLiveNotifyMsg.
type ChatTips_QQVaLiveNotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        []byte `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                  // bytes_uid
	NotifyType int32  `protobuf:"varint,2,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"` // notify_type
	Ext1       []byte `protobuf:"bytes,3,opt,name=ext1,proto3" json:"ext1,omitempty"`                                // bytes_ext1
	Ext2       []byte `protobuf:"bytes,4,opt,name=ext2,proto3" json:"ext2,omitempty"`                                // bytes_ext2
	Ext3       []byte `protobuf:"bytes,5,opt,name=ext3,proto3" json:"ext3,omitempty"`                                // bytes_ext3
}

func (x *ChatTips_QQVaLiveNotifyMsg) Reset() {
	*x = ChatTips_QQVaLiveNotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_QQVaLiveNotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_QQVaLiveNotifyMsg) ProtoMessage() {}

func (x *ChatTips_QQVaLiveNotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_QQVaLiveNotifyMsg.ProtoReflect.Descriptor instead.
func (*ChatTips_QQVaLiveNotifyMsg) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 23}
}

func (x *ChatTips_QQVaLiveNotifyMsg) GetUid() []byte {
	if x != nil {
		return x.Uid
	}
	return nil
}

func (x *ChatTips_QQVaLiveNotifyMsg) GetNotifyType() int32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *ChatTips_QQVaLiveNotifyMsg) GetExt1() []byte {
	if x != nil {
		return x.Ext1
	}
	return nil
}

func (x *ChatTips_QQVaLiveNotifyMsg) GetExt2() []byte {
	if x != nil {
		return x.Ext2
	}
	return nil
}

func (x *ChatTips_QQVaLiveNotifyMsg) GetExt3() []byte {
	if x != nil {
		return x.Ext3
	}
	return nil
}

// QQVedioGamePushInfo is the message type for the QQVedioGamePushInfo.
type ChatTips_QQVedioGamePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType     uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`            // uint32_msg_type
	GroupCode   uint64 `protobuf:"varint,2,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`      // uint64_group_code
	OperUin     uint64 `protobuf:"varint,3,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`            // uint64_oper_uin
	VersionCtrl []byte `protobuf:"bytes,4,opt,name=version_ctrl,json=versionCtrl,proto3" json:"version_ctrl,omitempty"` // bytes_version_ctrl
	ExtInfo     []byte `protobuf:"bytes,5,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`             // bytes_ext_info
}

func (x *ChatTips_QQVedioGamePushInfo) Reset() {
	*x = ChatTips_QQVedioGamePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_QQVedioGamePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_QQVedioGamePushInfo) ProtoMessage() {}

func (x *ChatTips_QQVedioGamePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_QQVedioGamePushInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_QQVedioGamePushInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 24}
}

func (x *ChatTips_QQVedioGamePushInfo) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatTips_QQVedioGamePushInfo) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *ChatTips_QQVedioGamePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *ChatTips_QQVedioGamePushInfo) GetVersionCtrl() []byte {
	if x != nil {
		return x.VersionCtrl
	}
	return nil
}

func (x *ChatTips_QQVedioGamePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// RedGrayTipsInfo is the message type for the RedGrayTipsInfo.
type ChatTips_RedGrayTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowLastest          *uint32 `protobuf:"varint,1,opt,name=show_lastest,json=showLastest,proto3,oneof" json:"show_lastest,omitempty"`                        // opt_uint32_show_lastest
	SenderUin            uint64  `protobuf:"varint,2,opt,name=sender_uin,json=senderUin,proto3" json:"sender_uin,omitempty"`                                    // uint64_sender_uin
	ReceiverUin          uint64  `protobuf:"varint,3,opt,name=receiver_uin,json=receiverUin,proto3" json:"receiver_uin,omitempty"`                              // uint64_receiver_uin
	SenderRichContent    []byte  `protobuf:"bytes,4,opt,name=sender_rich_content,json=senderRichContent,proto3" json:"sender_rich_content,omitempty"`           // bytes_sender_rich_content
	ReceiverRichContent  []byte  `protobuf:"bytes,5,opt,name=receiver_rich_content,json=receiverRichContent,proto3" json:"receiver_rich_content,omitempty"`     // bytes_receiver_rich_content
	Authkey              []byte  `protobuf:"bytes,6,opt,name=authkey,proto3" json:"authkey,omitempty"`                                                          // bytes_authkey
	Msgtype              int32   `protobuf:"zigzag32,7,opt,name=msgtype,proto3" json:"msgtype,omitempty"`                                                       // sint32_msgtype
	LuckyFlag            uint32  `protobuf:"varint,8,opt,name=lucky_flag,json=luckyFlag,proto3" json:"lucky_flag,omitempty"`                                    // uint32_lucky_flag
	HideFlag             uint32  `protobuf:"varint,9,opt,name=hide_flag,json=hideFlag,proto3" json:"hide_flag,omitempty"`                                       // uint32_hide_flag
	PcBody               []byte  `protobuf:"bytes,10,opt,name=pc_body,json=pcBody,proto3" json:"pc_body,omitempty"`                                             // bytes_pc_body
	Icon                 uint32  `protobuf:"varint,11,opt,name=icon,proto3" json:"icon,omitempty"`                                                              // uint32_icon
	LuckyUin             uint64  `protobuf:"varint,12,opt,name=lucky_uin,json=luckyUin,proto3" json:"lucky_uin,omitempty"`                                      // uint64_lucky_uin
	Time                 uint32  `protobuf:"varint,13,opt,name=time,proto3" json:"time,omitempty"`                                                              // uint32_time
	Random               uint32  `protobuf:"varint,14,opt,name=random,proto3" json:"random,omitempty"`                                                          // uint32_random
	BroadcastRichContent []byte  `protobuf:"bytes,15,opt,name=broadcast_rich_content,json=broadcastRichContent,proto3" json:"broadcast_rich_content,omitempty"` // bytes_broadcast_rich_content
	Idiom                []byte  `protobuf:"bytes,16,opt,name=idiom,proto3" json:"idiom,omitempty"`                                                             // bytes_idiom
	IdiomSeq             uint32  `protobuf:"varint,17,opt,name=idiom_seq,json=idiomSeq,proto3" json:"idiom_seq,omitempty"`                                      // uint32_idiom_seq
	IdiomAlpha           []byte  `protobuf:"bytes,18,opt,name=idiom_alpha,json=idiomAlpha,proto3" json:"idiom_alpha,omitempty"`                                 // bytes_idiom_alpha
	Jumpurl              []byte  `protobuf:"bytes,19,opt,name=jumpurl,proto3" json:"jumpurl,omitempty"`                                                         // bytes_jumpurl
	Subchannel           uint32  `protobuf:"varint,20,opt,name=subchannel,proto3" json:"subchannel,omitempty"`                                                  // uint32_subchannel
	PoemRule             []byte  `protobuf:"bytes,21,opt,name=poem_rule,json=poemRule,proto3" json:"poem_rule,omitempty"`                                       // bytes_poem_rule
}

func (x *ChatTips_RedGrayTipsInfo) Reset() {
	*x = ChatTips_RedGrayTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_RedGrayTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_RedGrayTipsInfo) ProtoMessage() {}

func (x *ChatTips_RedGrayTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_RedGrayTipsInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_RedGrayTipsInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 25}
}

func (x *ChatTips_RedGrayTipsInfo) GetShowLastest() uint32 {
	if x != nil && x.ShowLastest != nil {
		return *x.ShowLastest
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetSenderUin() uint64 {
	if x != nil {
		return x.SenderUin
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetReceiverUin() uint64 {
	if x != nil {
		return x.ReceiverUin
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetSenderRichContent() []byte {
	if x != nil {
		return x.SenderRichContent
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetReceiverRichContent() []byte {
	if x != nil {
		return x.ReceiverRichContent
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetAuthkey() []byte {
	if x != nil {
		return x.Authkey
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetMsgtype() int32 {
	if x != nil {
		return x.Msgtype
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetLuckyFlag() uint32 {
	if x != nil {
		return x.LuckyFlag
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetHideFlag() uint32 {
	if x != nil {
		return x.HideFlag
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetPcBody() []byte {
	if x != nil {
		return x.PcBody
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetIcon() uint32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetLuckyUin() uint64 {
	if x != nil {
		return x.LuckyUin
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetRandom() uint32 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetBroadcastRichContent() []byte {
	if x != nil {
		return x.BroadcastRichContent
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetIdiom() []byte {
	if x != nil {
		return x.Idiom
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetIdiomSeq() uint32 {
	if x != nil {
		return x.IdiomSeq
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetIdiomAlpha() []byte {
	if x != nil {
		return x.IdiomAlpha
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetJumpurl() []byte {
	if x != nil {
		return x.Jumpurl
	}
	return nil
}

func (x *ChatTips_RedGrayTipsInfo) GetSubchannel() uint32 {
	if x != nil {
		return x.Subchannel
	}
	return 0
}

func (x *ChatTips_RedGrayTipsInfo) GetPoemRule() []byte {
	if x != nil {
		return x.PoemRule
	}
	return nil
}

// ReqBody is the message type for the ReqBody.
type ChatTips_ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode   *uint64            `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"`  // opt_uint64_group_code
	Memberuins  []uint64           `protobuf:"varint,2,rep,packed,name=memberuins,proto3" json:"memberuins,omitempty"`                // rpt_uint64_memberuins
	Offline     *uint32            `protobuf:"varint,3,opt,name=offline,proto3,oneof" json:"offline,omitempty"`                       // opt_uint32_offline
	MsgInstCtrl *ChatTips_InstCtrl `protobuf:"bytes,4,opt,name=msg_inst_ctrl,json=msgInstCtrl,proto3" json:"msg_inst_ctrl,omitempty"` // msg_inst_ctrl
	Msg         []byte             `protobuf:"bytes,5,opt,name=msg,proto3,oneof" json:"msg,omitempty"`                                // opt_bytes_msg
	BusiType    *uint32            `protobuf:"varint,6,opt,name=busi_type,json=busiType,proto3,oneof" json:"busi_type,omitempty"`     // opt_uint32_busi_type
}

func (x *ChatTips_ReqBody) Reset() {
	*x = ChatTips_ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_ReqBody) ProtoMessage() {}

func (x *ChatTips_ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_ReqBody.ProtoReflect.Descriptor instead.
func (*ChatTips_ReqBody) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 26}
}

func (x *ChatTips_ReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *ChatTips_ReqBody) GetMemberuins() []uint64 {
	if x != nil {
		return x.Memberuins
	}
	return nil
}

func (x *ChatTips_ReqBody) GetOffline() uint32 {
	if x != nil && x.Offline != nil {
		return *x.Offline
	}
	return 0
}

func (x *ChatTips_ReqBody) GetMsgInstCtrl() *ChatTips_InstCtrl {
	if x != nil {
		return x.MsgInstCtrl
	}
	return nil
}

func (x *ChatTips_ReqBody) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ChatTips_ReqBody) GetBusiType() uint32 {
	if x != nil && x.BusiType != nil {
		return *x.BusiType
	}
	return 0
}

// RevertGrayTipsMsgTraceless is the message type for the RevertGrayTipsMsgTraceless.
type ChatTips_RevertGrayTipsMsgTraceless struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      uint64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`                              // uint64_from
	To        uint64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`                                  // uint64_to
	GroupCode uint64 `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`   // group_code
	BusiId    uint64 `protobuf:"varint,4,opt,name=busi_id,json=busiId,proto3" json:"busi_id,omitempty"`            // uint64_busi_id
	TipsSeqId uint64 `protobuf:"varint,5,opt,name=tips_seq_id,json=tipsSeqId,proto3" json:"tips_seq_id,omitempty"` // uint64_tips_seq_id
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) Reset() {
	*x = ChatTips_RevertGrayTipsMsgTraceless{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_RevertGrayTipsMsgTraceless) ProtoMessage() {}

func (x *ChatTips_RevertGrayTipsMsgTraceless) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_RevertGrayTipsMsgTraceless.ProtoReflect.Descriptor instead.
func (*ChatTips_RevertGrayTipsMsgTraceless) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 27}
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) GetBusiId() uint64 {
	if x != nil {
		return x.BusiId
	}
	return 0
}

func (x *ChatTips_RevertGrayTipsMsgTraceless) GetTipsSeqId() uint64 {
	if x != nil {
		return x.TipsSeqId
	}
	return 0
}

// RspBody is the message type for the RspBody.
type ChatTips_RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode *uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"` // opt_uint64_group_code
}

func (x *ChatTips_RspBody) Reset() {
	*x = ChatTips_RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_RspBody) ProtoMessage() {}

func (x *ChatTips_RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_RspBody.ProtoReflect.Descriptor instead.
func (*ChatTips_RspBody) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 28}
}

func (x *ChatTips_RspBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

// SingChangePushInfo is the message type for the SingChangePushInfo.
type ChatTips_SingChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq        uint64 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`                                 // uint64_seq
	ActionType uint32 `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // uint32_action_type
	GroupId    uint64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // uint64_group_id
	OperUin    uint64 `protobuf:"varint,4,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`          // uint64_oper_uin
	GrayTips   []byte `protobuf:"bytes,5,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`        // bytes_gray_tips
	JoinNums   uint32 `protobuf:"varint,6,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`       // uint32_join_nums
}

func (x *ChatTips_SingChangePushInfo) Reset() {
	*x = ChatTips_SingChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_SingChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_SingChangePushInfo) ProtoMessage() {}

func (x *ChatTips_SingChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_SingChangePushInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_SingChangePushInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 29}
}

func (x *ChatTips_SingChangePushInfo) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ChatTips_SingChangePushInfo) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *ChatTips_SingChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ChatTips_SingChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *ChatTips_SingChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *ChatTips_SingChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

// StudyRoomMemberChangePush is the message type for the StudyRoomMemberChangePush.
type ChatTips_StudyRoomMemberChangePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberCount uint32 `protobuf:"varint,1,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"` // member_count
}

func (x *ChatTips_StudyRoomMemberChangePush) Reset() {
	*x = ChatTips_StudyRoomMemberChangePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_StudyRoomMemberChangePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_StudyRoomMemberChangePush) ProtoMessage() {}

func (x *ChatTips_StudyRoomMemberChangePush) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_StudyRoomMemberChangePush.ProtoReflect.Descriptor instead.
func (*ChatTips_StudyRoomMemberChangePush) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 30}
}

func (x *ChatTips_StudyRoomMemberChangePush) GetMemberCount() uint32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

// TemplParam is the message type for the TemplParam.
type ChatTips_TemplParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  []byte `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // bytes_name
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // bytes_value
}

func (x *ChatTips_TemplParam) Reset() {
	*x = ChatTips_TemplParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_TemplParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_TemplParam) ProtoMessage() {}

func (x *ChatTips_TemplParam) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_TemplParam.ProtoReflect.Descriptor instead.
func (*ChatTips_TemplParam) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 31}
}

func (x *ChatTips_TemplParam) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ChatTips_TemplParam) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// ThemeStateNotify is the message type for the ThemeStateNotify.
type ChatTips_ThemeStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`                          // uint32_state
	FeedsId   []byte `protobuf:"bytes,2,opt,name=feeds_id,json=feedsId,proto3" json:"feeds_id,omitempty"`        // bytes_feeds_id
	ThemeName []byte `protobuf:"bytes,3,opt,name=theme_name,json=themeName,proto3" json:"theme_name,omitempty"`  // bytes_theme_name
	ActionUin uint64 `protobuf:"varint,4,opt,name=action_uin,json=actionUin,proto3" json:"action_uin,omitempty"` // uint64_action_uin
	CreateUin uint64 `protobuf:"varint,5,opt,name=create_uin,json=createUin,proto3" json:"create_uin,omitempty"` // uint64_create_uin
}

func (x *ChatTips_ThemeStateNotify) Reset() {
	*x = ChatTips_ThemeStateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_ThemeStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_ThemeStateNotify) ProtoMessage() {}

func (x *ChatTips_ThemeStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_ThemeStateNotify.ProtoReflect.Descriptor instead.
func (*ChatTips_ThemeStateNotify) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 32}
}

func (x *ChatTips_ThemeStateNotify) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *ChatTips_ThemeStateNotify) GetFeedsId() []byte {
	if x != nil {
		return x.FeedsId
	}
	return nil
}

func (x *ChatTips_ThemeStateNotify) GetThemeName() []byte {
	if x != nil {
		return x.ThemeName
	}
	return nil
}

func (x *ChatTips_ThemeStateNotify) GetActionUin() uint64 {
	if x != nil {
		return x.ActionUin
	}
	return 0
}

func (x *ChatTips_ThemeStateNotify) GetCreateUin() uint64 {
	if x != nil {
		return x.CreateUin
	}
	return 0
}

// TroopFormGrayTipsInfo is the message type for the TroopFormGrayTipsInfo.
type ChatTips_TroopFormGrayTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriterUin   uint64 `protobuf:"varint,1,opt,name=writer_uin,json=writerUin,proto3" json:"writer_uin,omitempty"`      // uint64_writer_uin
	CreatorUin  uint64 `protobuf:"varint,2,opt,name=creator_uin,json=creatorUin,proto3" json:"creator_uin,omitempty"`   // uint64_creator_uin
	RichContent []byte `protobuf:"bytes,3,opt,name=rich_content,json=richContent,proto3" json:"rich_content,omitempty"` // bytes_rich_content
	Url         []byte `protobuf:"bytes,4,opt,name=url,proto3,oneof" json:"url,omitempty"`                              // bytes_opt_bytes_url
	CreatorNick []byte `protobuf:"bytes,5,opt,name=creator_nick,json=creatorNick,proto3" json:"creator_nick,omitempty"` // bytes_creator_nick
}

func (x *ChatTips_TroopFormGrayTipsInfo) Reset() {
	*x = ChatTips_TroopFormGrayTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_TroopFormGrayTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_TroopFormGrayTipsInfo) ProtoMessage() {}

func (x *ChatTips_TroopFormGrayTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_TroopFormGrayTipsInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_TroopFormGrayTipsInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 33}
}

func (x *ChatTips_TroopFormGrayTipsInfo) GetWriterUin() uint64 {
	if x != nil {
		return x.WriterUin
	}
	return 0
}

func (x *ChatTips_TroopFormGrayTipsInfo) GetCreatorUin() uint64 {
	if x != nil {
		return x.CreatorUin
	}
	return 0
}

func (x *ChatTips_TroopFormGrayTipsInfo) GetRichContent() []byte {
	if x != nil {
		return x.RichContent
	}
	return nil
}

func (x *ChatTips_TroopFormGrayTipsInfo) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *ChatTips_TroopFormGrayTipsInfo) GetCreatorNick() []byte {
	if x != nil {
		return x.CreatorNick
	}
	return nil
}

// VideoChangePushInfo is the message type for the VideoChangePushInfo.
type ChatTips_VideoChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq        uint64 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`                                 // uint64_seq
	ActionType uint32 `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // uint32_action_type
	GroupId    uint64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // uint64_group_id
	OperUin    uint64 `protobuf:"varint,4,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`          // uint64_oper_uin
	GrayTips   []byte `protobuf:"bytes,5,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`        // bytes_gray_tips
	JoinNums   uint32 `protobuf:"varint,6,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`       // uint32_join_nums
	JoinState  uint32 `protobuf:"varint,7,opt,name=join_state,json=joinState,proto3" json:"join_state,omitempty"`    // uint32_join_state
	ExtInfo    []byte `protobuf:"bytes,100,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`         // bytes_ext_info
}

func (x *ChatTips_VideoChangePushInfo) Reset() {
	*x = ChatTips_VideoChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_VideoChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_VideoChangePushInfo) ProtoMessage() {}

func (x *ChatTips_VideoChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_VideoChangePushInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_VideoChangePushInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 34}
}

func (x *ChatTips_VideoChangePushInfo) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ChatTips_VideoChangePushInfo) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *ChatTips_VideoChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ChatTips_VideoChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *ChatTips_VideoChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *ChatTips_VideoChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

func (x *ChatTips_VideoChangePushInfo) GetJoinState() uint32 {
	if x != nil {
		return x.JoinState
	}
	return 0
}

func (x *ChatTips_VideoChangePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// WereWolfPush is the message type for the WereWolfPush.
type ChatTips_WereWolfPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushType      uint32                        `protobuf:"varint,1,opt,name=push_type,json=pushType,proto3" json:"push_type,omitempty"`                          // uint32_push_type
	GameRoom      uint64                        `protobuf:"varint,2,opt,name=game_room,json=gameRoom,proto3" json:"game_room,omitempty"`                          // uint64_game_room
	EnumGameState uint32                        `protobuf:"varint,3,opt,name=enum_game_state,json=enumGameState,proto3" json:"enum_game_state,omitempty"`         // enum_game_state
	GameRound     uint32                        `protobuf:"varint,4,opt,name=game_round,json=gameRound,proto3" json:"game_round,omitempty"`                       // uint32_game_round
	Roles         []*ChatTips_WereWolfPush_Role `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`                                                 // rpt_roles
	Speaker       uint64                        `protobuf:"varint,6,opt,name=speaker,proto3" json:"speaker,omitempty"`                                            // uint64_speaker
	JudgeUin      uint64                        `protobuf:"varint,7,opt,name=judge_uin,json=judgeUin,proto3" json:"judge_uin,omitempty"`                          // uint64_judge_uin
	JudgeWords    []byte                        `protobuf:"bytes,8,opt,name=judge_words,json=judgeWords,proto3" json:"judge_words,omitempty"`                     // bytes_judge_words
	EnumOperation uint32                        `protobuf:"varint,9,opt,name=enum_operation,json=enumOperation,proto3" json:"enum_operation,omitempty"`           // enum_operation
	SrcUser       uint64                        `protobuf:"varint,10,opt,name=src_user,json=srcUser,proto3" json:"src_user,omitempty"`                            // uint64_src_user
	DstUser       uint64                        `protobuf:"varint,11,opt,name=dst_user,json=dstUser,proto3" json:"dst_user,omitempty"`                            // uint64_dst_user
	DeadUsers     []uint64                      `protobuf:"varint,12,rep,packed,name=dead_users,json=deadUsers,proto3" json:"dead_users,omitempty"`               // rpt_dead_users
	GameResult    uint32                        `protobuf:"varint,13,opt,name=game_result,json=gameResult,proto3" json:"game_result,omitempty"`                   // uint32_game_result
	TimeoutSec    uint32                        `protobuf:"varint,14,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"`                   // uint32_timeout_sec
	KillConfirmed uint32                        `protobuf:"varint,15,opt,name=kill_confirmed,json=killConfirmed,proto3" json:"kill_confirmed,omitempty"`          // uint32_kill_confirmed
	JudgeNickname []byte                        `protobuf:"bytes,16,opt,name=judge_nickname,json=judgeNickname,proto3" json:"judge_nickname,omitempty"`           // bytes_judge_nickname
	VotedTieUsers []uint64                      `protobuf:"varint,17,rep,packed,name=voted_tie_users,json=votedTieUsers,proto3" json:"voted_tie_users,omitempty"` // rpt_voted_tie_users
}

func (x *ChatTips_WereWolfPush) Reset() {
	*x = ChatTips_WereWolfPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_WereWolfPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_WereWolfPush) ProtoMessage() {}

func (x *ChatTips_WereWolfPush) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_WereWolfPush.ProtoReflect.Descriptor instead.
func (*ChatTips_WereWolfPush) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 35}
}

func (x *ChatTips_WereWolfPush) GetPushType() uint32 {
	if x != nil {
		return x.PushType
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetGameRoom() uint64 {
	if x != nil {
		return x.GameRoom
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetEnumGameState() uint32 {
	if x != nil {
		return x.EnumGameState
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetGameRound() uint32 {
	if x != nil {
		return x.GameRound
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetRoles() []*ChatTips_WereWolfPush_Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ChatTips_WereWolfPush) GetSpeaker() uint64 {
	if x != nil {
		return x.Speaker
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetJudgeUin() uint64 {
	if x != nil {
		return x.JudgeUin
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetJudgeWords() []byte {
	if x != nil {
		return x.JudgeWords
	}
	return nil
}

func (x *ChatTips_WereWolfPush) GetEnumOperation() uint32 {
	if x != nil {
		return x.EnumOperation
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetSrcUser() uint64 {
	if x != nil {
		return x.SrcUser
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetDstUser() uint64 {
	if x != nil {
		return x.DstUser
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetDeadUsers() []uint64 {
	if x != nil {
		return x.DeadUsers
	}
	return nil
}

func (x *ChatTips_WereWolfPush) GetGameResult() uint32 {
	if x != nil {
		return x.GameResult
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetTimeoutSec() uint32 {
	if x != nil {
		return x.TimeoutSec
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetKillConfirmed() uint32 {
	if x != nil {
		return x.KillConfirmed
	}
	return 0
}

func (x *ChatTips_WereWolfPush) GetJudgeNickname() []byte {
	if x != nil {
		return x.JudgeNickname
	}
	return nil
}

func (x *ChatTips_WereWolfPush) GetVotedTieUsers() []uint64 {
	if x != nil {
		return x.VotedTieUsers
	}
	return nil
}

// PersonalSetting is the message type for the PersonalSetting.
type ChatTips_MediaChangePushInfo_PersonalSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThemeId  uint32 `protobuf:"varint,1,opt,name=theme_id,json=themeId,proto3" json:"theme_id,omitempty"`    // uint32_theme_id
	PlayerId uint32 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // uint32_player_id
	FontId   uint32 `protobuf:"varint,3,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty"`       // uint32_font_id
}

func (x *ChatTips_MediaChangePushInfo_PersonalSetting) Reset() {
	*x = ChatTips_MediaChangePushInfo_PersonalSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MediaChangePushInfo_PersonalSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MediaChangePushInfo_PersonalSetting) ProtoMessage() {}

func (x *ChatTips_MediaChangePushInfo_PersonalSetting) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MediaChangePushInfo_PersonalSetting.ProtoReflect.Descriptor instead.
func (*ChatTips_MediaChangePushInfo_PersonalSetting) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 14, 0}
}

func (x *ChatTips_MediaChangePushInfo_PersonalSetting) GetThemeId() uint32 {
	if x != nil {
		return x.ThemeId
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo_PersonalSetting) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ChatTips_MediaChangePushInfo_PersonalSetting) GetFontId() uint32 {
	if x != nil {
		return x.FontId
	}
	return 0
}

// MessageMeta is the message type for the MessageMeta.
type ChatTips_MessageRecallReminder_MessageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq        uint32 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`                                   // uint32_seq
	Time       uint32 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`                                 // uint32_time
	MsgRandom  uint32 `protobuf:"varint,3,opt,name=msg_random,json=msgRandom,proto3" json:"msg_random,omitempty"`      // uint32_msg_random
	MsgType    uint32 `protobuf:"varint,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`            // uint32_msg_type
	MsgFlag    uint32 `protobuf:"varint,5,opt,name=msg_flag,json=msgFlag,proto3" json:"msg_flag,omitempty"`            // uint32_msg_flag
	AuthorUin  uint64 `protobuf:"varint,6,opt,name=author_uin,json=authorUin,proto3" json:"author_uin,omitempty"`      // uint64_author_uin
	IsAnonyMsg uint32 `protobuf:"varint,7,opt,name=is_anony_msg,json=isAnonyMsg,proto3" json:"is_anony_msg,omitempty"` // uint32_is_anony_msg
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) Reset() {
	*x = ChatTips_MessageRecallReminder_MessageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MessageRecallReminder_MessageMeta) ProtoMessage() {}

func (x *ChatTips_MessageRecallReminder_MessageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MessageRecallReminder_MessageMeta.ProtoReflect.Descriptor instead.
func (*ChatTips_MessageRecallReminder_MessageMeta) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 16, 0}
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetMsgRandom() uint32 {
	if x != nil {
		return x.MsgRandom
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetMsgFlag() uint32 {
	if x != nil {
		return x.MsgFlag
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetAuthorUin() uint64 {
	if x != nil {
		return x.AuthorUin
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_MessageMeta) GetIsAnonyMsg() uint32 {
	if x != nil {
		return x.IsAnonyMsg
	}
	return 0
}

// WithDrawWordingInfo is the message type for the WithDrawWordingInfo.
type ChatTips_MessageRecallReminder_WithDrawWordingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   int32  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`      // int32_item_id
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"` // string_item_name
}

func (x *ChatTips_MessageRecallReminder_WithDrawWordingInfo) Reset() {
	*x = ChatTips_MessageRecallReminder_WithDrawWordingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_MessageRecallReminder_WithDrawWordingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_MessageRecallReminder_WithDrawWordingInfo) ProtoMessage() {}

func (x *ChatTips_MessageRecallReminder_WithDrawWordingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_MessageRecallReminder_WithDrawWordingInfo.ProtoReflect.Descriptor instead.
func (*ChatTips_MessageRecallReminder_WithDrawWordingInfo) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 16, 1}
}

func (x *ChatTips_MessageRecallReminder_WithDrawWordingInfo) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ChatTips_MessageRecallReminder_WithDrawWordingInfo) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

// GameRecord is the message type for the GameRecord.
type ChatTips_WereWolfPush_GameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // uint32_total
	Win   uint32 `protobuf:"varint,2,opt,name=win,proto3" json:"win,omitempty"`     // uint32_win
	Lose  uint32 `protobuf:"varint,3,opt,name=lose,proto3" json:"lose,omitempty"`   // uint32_lose
	Draw  uint32 `protobuf:"varint,4,opt,name=draw,proto3" json:"draw,omitempty"`   // uint32_draw
}

func (x *ChatTips_WereWolfPush_GameRecord) Reset() {
	*x = ChatTips_WereWolfPush_GameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_WereWolfPush_GameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_WereWolfPush_GameRecord) ProtoMessage() {}

func (x *ChatTips_WereWolfPush_GameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_WereWolfPush_GameRecord.ProtoReflect.Descriptor instead.
func (*ChatTips_WereWolfPush_GameRecord) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 35, 0}
}

func (x *ChatTips_WereWolfPush_GameRecord) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ChatTips_WereWolfPush_GameRecord) GetWin() uint32 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *ChatTips_WereWolfPush_GameRecord) GetLose() uint32 {
	if x != nil {
		return x.Lose
	}
	return 0
}

func (x *ChatTips_WereWolfPush_GameRecord) GetDraw() uint32 {
	if x != nil {
		return x.Draw
	}
	return 0
}

// Role is the message type for the Role.
type ChatTips_WereWolfPush_Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin             uint64                            `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                                 // uint64_uin
	EnumType        uint32                            `protobuf:"varint,2,opt,name=enum_type,json=enumType,proto3" json:"enum_type,omitempty"`                       // enum_type
	EnumState       uint32                            `protobuf:"varint,3,opt,name=enum_state,json=enumState,proto3" json:"enum_state,omitempty"`                    // enum_state
	CanSpeak        uint32                            `protobuf:"varint,4,opt,name=can_speak,json=canSpeak,proto3" json:"can_speak,omitempty"`                       // uint32_can_speak
	CanListen       uint32                            `protobuf:"varint,5,opt,name=can_listen,json=canListen,proto3" json:"can_listen,omitempty"`                    // uint32_can_listen
	Position        uint32                            `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`                                       // uint32_position
	CanVote         uint32                            `protobuf:"varint,7,opt,name=can_vote,json=canVote,proto3" json:"can_vote,omitempty"`                          // uint32_can_vote
	CanVoted        uint32                            `protobuf:"varint,8,opt,name=can_voted,json=canVoted,proto3" json:"can_voted,omitempty"`                       // uint32_can_voted
	AlreadyChecked  uint32                            `protobuf:"varint,9,opt,name=already_checked,json=alreadyChecked,proto3" json:"already_checked,omitempty"`     // uint32_already_checked
	AlreadySaved    uint32                            `protobuf:"varint,10,opt,name=already_saved,json=alreadySaved,proto3" json:"already_saved,omitempty"`          // uint32_already_saved
	AlreadyPoisoned uint32                            `protobuf:"varint,11,opt,name=already_poisoned,json=alreadyPoisoned,proto3" json:"already_poisoned,omitempty"` // uint32_already_poisoned
	PlayerState     uint32                            `protobuf:"varint,12,opt,name=player_state,json=playerState,proto3" json:"player_state,omitempty"`             // uint32_player_state
	EnumDeadOp      uint32                            `protobuf:"varint,13,opt,name=enum_dead_op,json=enumDeadOp,proto3" json:"enum_dead_op,omitempty"`              // enum_dead_op
	EnumOperation   uint32                            `protobuf:"varint,14,opt,name=enum_operation,json=enumOperation,proto3" json:"enum_operation,omitempty"`       // enum_operation
	DstUser         uint64                            `protobuf:"varint,15,opt,name=dst_user,json=dstUser,proto3" json:"dst_user,omitempty"`                         // uint64_dst_user
	OperationRound  uint32                            `protobuf:"varint,16,opt,name=operation_round,json=operationRound,proto3" json:"operation_round,omitempty"`    // uint32_operation_round
	MsgGameRecord   *ChatTips_WereWolfPush_GameRecord `protobuf:"bytes,17,opt,name=msg_game_record,json=msgGameRecord,proto3" json:"msg_game_record,omitempty"`      // msg_game_record
	IsWerewolf      uint32                            `protobuf:"varint,18,opt,name=is_werewolf,json=isWerewolf,proto3" json:"is_werewolf,omitempty"`                // uint32_is_werewolf
	DefendedUser    uint64                            `protobuf:"varint,19,opt,name=defended_user,json=defendedUser,proto3" json:"defended_user,omitempty"`          // uint64_defended_user
	IsSheriff       uint32                            `protobuf:"varint,20,opt,name=is_sheriff,json=isSheriff,proto3" json:"is_sheriff,omitempty"`                   // uint32_is_sheriff
}

func (x *ChatTips_WereWolfPush_Role) Reset() {
	*x = ChatTips_WereWolfPush_Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatTips_WereWolfPush_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatTips_WereWolfPush_Role) ProtoMessage() {}

func (x *ChatTips_WereWolfPush_Role) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_service_pb_chat_tips_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatTips_WereWolfPush_Role.ProtoReflect.Descriptor instead.
func (*ChatTips_WereWolfPush_Role) Descriptor() ([]byte, []int) {
	return file_daemon_service_pb_chat_tips_proto_rawDescGZIP(), []int{0, 35, 1}
}

func (x *ChatTips_WereWolfPush_Role) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetEnumType() uint32 {
	if x != nil {
		return x.EnumType
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetEnumState() uint32 {
	if x != nil {
		return x.EnumState
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetCanSpeak() uint32 {
	if x != nil {
		return x.CanSpeak
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetCanListen() uint32 {
	if x != nil {
		return x.CanListen
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetCanVote() uint32 {
	if x != nil {
		return x.CanVote
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetCanVoted() uint32 {
	if x != nil {
		return x.CanVoted
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetAlreadyChecked() uint32 {
	if x != nil {
		return x.AlreadyChecked
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetAlreadySaved() uint32 {
	if x != nil {
		return x.AlreadySaved
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetAlreadyPoisoned() uint32 {
	if x != nil {
		return x.AlreadyPoisoned
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetPlayerState() uint32 {
	if x != nil {
		return x.PlayerState
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetEnumDeadOp() uint32 {
	if x != nil {
		return x.EnumDeadOp
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetEnumOperation() uint32 {
	if x != nil {
		return x.EnumOperation
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetDstUser() uint64 {
	if x != nil {
		return x.DstUser
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetOperationRound() uint32 {
	if x != nil {
		return x.OperationRound
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetMsgGameRecord() *ChatTips_WereWolfPush_GameRecord {
	if x != nil {
		return x.MsgGameRecord
	}
	return nil
}

func (x *ChatTips_WereWolfPush_Role) GetIsWerewolf() uint32 {
	if x != nil {
		return x.IsWerewolf
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetDefendedUser() uint64 {
	if x != nil {
		return x.DefendedUser
	}
	return 0
}

func (x *ChatTips_WereWolfPush_Role) GetIsSheriff() uint32 {
	if x != nil {
		return x.IsSheriff
	}
	return 0
}

var File_daemon_service_pb_chat_tips_proto protoreflect.FileDescriptor

var file_daemon_service_pb_chat_tips_proto_rawDesc = []byte{
	0x0a, 0x21, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x70, 0x62, 0x2f, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x5f, 0x0a,
	0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x1a, 0xb7, 0x02, 0x0a, 0x0f, 0x41, 0x49,
	0x4f, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a,
	0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x65,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x03, 0x52, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x69, 0x61, 0x6f, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x6f, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x69, 0x61,
	0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x70,
	0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x1a, 0xc9, 0x02, 0x0a, 0x0e, 0x41, 0x49, 0x4f, 0x54, 0x6f, 0x70, 0x54, 0x69,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x05, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x49, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x06, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x41, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x50, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x1a,
	0x3c, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0xd5, 0x02,
	0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x62, 0x75, 0x73, 0x69, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74,
	0x72, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x74, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x32, 0x63, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x32, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x0d, 0x6d, 0x73, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x69, 0x70, 0x73,
	0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x70, 0x73, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x62, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x62, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x1a, 0xe1, 0x01, 0x0a, 0x0f, 0x47, 0x6f, 0x6c, 0x64, 0x4d, 0x73,
	0x67, 0x54, 0x69, 0x70, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3e, 0x0a, 0x08, 0x47, 0x72, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x1a, 0x64, 0x0a, 0x14, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x42, 0x43, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x46, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x1a, 0xe5, 0x02, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f,
	0x6e, 0x6f, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x39, 0x0a, 0x19, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x65, 0x78, 0x74, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x34, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x65, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x44, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x65, 0x78, 0x74, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x33, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45,
	0x78, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x53, 0x65, 0x71, 0x1a,
	0x7c, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x50, 0x75, 0x6c, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x01, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x1a, 0xbd, 0x01,
	0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x10, 0x6d, 0x73,
	0x67, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x1a, 0xf2, 0x01,
	0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e,
	0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x73, 0x6f, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x73, 0x6f, 0x42, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x65, 0x72, 0x4d,
	0x61, 0x78, 0x1a, 0xb2, 0x02, 0x0a, 0x16, 0x4c, 0x62, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x74, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2b, 0x0a, 0x0e, 0x4c, 0x75, 0x63, 0x6b, 0x79,
	0x42, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67,
	0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x69, 0x70, 0x73, 0x1a, 0xb6, 0x04, 0x0a, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x74,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x55,
	0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69,
	0x70, 0x73, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x77, 0x68,
	0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x68, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x63, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x62, 0x0a, 0x0f, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x88, 0x01,
	0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x06, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x1a, 0xb0, 0x05, 0x0a, 0x15, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x57, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0xc9, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x73,
	0x67, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x4b,
	0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x21, 0x0a, 0x0d, 0x4d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0xe1,
	0x1a, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x20, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0c,
	0x6d, 0x73, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x41, 0x49,
	0x4f, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x04, 0x52,
	0x0b, 0x6d, 0x73, 0x67, 0x47, 0x72, 0x61, 0x79, 0x74, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x44, 0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x6f,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69,
	0x70, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x05, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62,
	0x6f, 0x78, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x65, 0x64, 0x74, 0x69, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x06, 0x52, 0x0e, 0x6d, 0x73, 0x67,
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x64, 0x74, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3e,
	0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x74, 0x69, 0x70, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x41,
	0x49, 0x4f, 0x54, 0x6f, 0x70, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x07, 0x52,
	0x0a, 0x6d, 0x73, 0x67, 0x54, 0x6f, 0x70, 0x74, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3f,
	0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x64, 0x74, 0x69, 0x70, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x52,
	0x65, 0x64, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x08,
	0x52, 0x0a, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x74, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x48, 0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x09, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x73, 0x67,
	0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x0a,
	0x52, 0x09, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x49,
	0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x69, 0x70, 0x73, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x48, 0x0b, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x11,
	0x6d, 0x73, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69,
	0x70, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x62, 0x6a, 0x6d, 0x73, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x0c, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x4f, 0x62, 0x6a, 0x6d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x11, 0x6d,
	0x73, 0x67, 0x5f, 0x77, 0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70,
	0x73, 0x2e, 0x57, 0x65, 0x72, 0x65, 0x57, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x48, 0x0d,
	0x52, 0x0f, 0x6d, 0x73, 0x67, 0x57, 0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x0f, 0x73, 0x74, 0x63, 0x6d, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x53, 0x54, 0x43, 0x4d, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x0e, 0x52, 0x0d, 0x73, 0x74, 0x63, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x70, 0x6c, 0x6c, 0x6f, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x41,
	0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x54, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0c,
	0x61, 0x70, 0x6c, 0x6c, 0x6f, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x12, 0x41, 0x0a, 0x0c,
	0x6d, 0x73, 0x67, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x70, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x47, 0x6f,
	0x6c, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x0f, 0x52,
	0x0b, 0x6d, 0x73, 0x67, 0x47, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x4a, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x61, 0x70, 0x70, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x48, 0x10, 0x52, 0x10, 0x6d, 0x73, 0x67, 0x4d, 0x69, 0x6e, 0x69, 0x61,
	0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x11, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x4d, 0x0a, 0x13, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x62, 0x61, 0x67, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x42, 0x61, 0x67,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x12, 0x52, 0x11, 0x6d, 0x73, 0x67, 0x4c, 0x75, 0x63,
	0x6b, 0x79, 0x62, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12, 0x5a,
	0x0a, 0x16, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x66, 0x6f, 0x72, 0x6d, 0x74,
	0x69, 0x70, 0x73, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x46,
	0x6f, 0x72, 0x6d, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x13, 0x52, 0x14, 0x6d, 0x73, 0x67, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x66, 0x6f, 0x72, 0x6d, 0x74,
	0x69, 0x70, 0x73, 0x50, 0x75, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x73,
	0x67, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x14, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x73,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f,
	0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x15, 0x52, 0x0e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x88, 0x01,
	0x01, 0x12, 0x48, 0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70,
	0x75, 0x73, 0x68, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x16, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x1a, 0x6c,
	0x62, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x4c, 0x62, 0x73, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x17, 0x52, 0x16, 0x6c, 0x62, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x45,
	0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x18, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x53, 0x69, 0x6e, 0x67, 0x50, 0x75,
	0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x15, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48,
	0x19, 0x52, 0x12, 0x6d, 0x73, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x17, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x62, 0x63, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x54, 0x42, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x1a, 0x52, 0x14, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x62, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x17, 0x71, 0x71, 0x5f, 0x76, 0x65, 0x64, 0x69, 0x6f,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73,
	0x2e, 0x51, 0x51, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x1b, 0x52, 0x13, 0x71, 0x71, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x4e,
	0x0a, 0x13, 0x71, 0x71, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x48, 0x1c, 0x52, 0x10, 0x71, 0x71, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x5b,
	0x0a, 0x15, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f,
	0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x48, 0x1d, 0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x71,
	0x71, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x51,
	0x51, 0x56, 0x61, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67,
	0x48, 0x1e, 0x52, 0x0c, 0x71, 0x71, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x64, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x1f, 0x52, 0x10, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x64, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x48, 0x20, 0x52,
	0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x75, 0x72, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x88,
	0x01, 0x01, 0x12, 0x5f, 0x0a, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e,
	0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x48, 0x21, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x73, 0x79, 0x73, 0x64, 0x62, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x04, 0x48, 0x22, 0x52, 0x0a, 0x73, 0x79, 0x73,
	0x64, 0x62, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x65, 0x0a, 0x19, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x47,
	0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x48, 0x23, 0x52, 0x17, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x47, 0x72, 0x61,
	0x79, 0x74, 0x69, 0x70, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x74, 0x69, 0x70, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x6f, 0x78, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x64, 0x74,
	0x69, 0x70, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x74,
	0x69, 0x70, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x64, 0x74,
	0x69, 0x70, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x77, 0x65, 0x72, 0x65, 0x77,
	0x6f, 0x6c, 0x66, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x74, 0x63,
	0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x70, 0x73, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x75, 0x69, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x75, 0x63, 0x6b,
	0x79, 0x62, 0x61, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x19, 0x0a, 0x17, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x66, 0x6f, 0x72, 0x6d, 0x74, 0x69, 0x70,
	0x73, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x75, 0x73,
	0x68, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x6c, 0x62, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x1a, 0x0a, 0x18,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f,
	0x74, 0x62, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x71, 0x71, 0x5f,
	0x76, 0x65, 0x64, 0x69, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x71, 0x71, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x71, 0x71, 0x5f, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x64, 0x79,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x79, 0x73, 0x64, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x5f,
	0x67, 0x72, 0x61, 0x79, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x1a, 0x6b, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x62, 0x6a, 0x6d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x1a,
	0xdc, 0x02, 0x0a, 0x10, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x73, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6d, 0x73, 0x67, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xef,
	0x01, 0x0a, 0x17, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x4d, 0x73, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x75, 0x63, 0x63, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x51, 0x51, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x71, 0x0a, 0x18, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d,
	0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x11, 0x51, 0x51, 0x56, 0x61, 0x4c, 0x69, 0x76, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x65, 0x78, 0x74, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x78, 0x74, 0x31,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x65, 0x78, 0x74, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x74, 0x33, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x65, 0x78, 0x74, 0x33, 0x1a, 0xa8, 0x01, 0x0a, 0x13, 0x51, 0x51, 0x56,
	0x65, 0x64, 0x69, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70,
	0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0xb7, 0x05, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x47, 0x72, 0x61, 0x79, 0x54,
	0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x69,
	0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x69, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69,
	0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x69, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x75, 0x63,
	0x6b, 0x79, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c,
	0x75, 0x63, 0x6b, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x69, 0x64,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x63, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x55, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x34, 0x0a, 0x16, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x69, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x69, 0x6f, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x69, 0x64, 0x69, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x69, 0x6f, 0x6d,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x69, 0x6f,
	0x6d, 0x53, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x69, 0x6f, 0x6d, 0x5f, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x64, 0x69, 0x6f, 0x6d,
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x75, 0x72, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x75, 0x72, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x65, 0x6d, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x65, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x8e, 0x02,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x75, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x75, 0x69, 0x6e, 0x73, 0x12, 0x1d, 0x0a,
	0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01,
	0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0d,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x43, 0x74, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62,
	0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03,
	0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x73, 0x67,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x98,
	0x01, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70,
	0x73, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x62, 0x75, 0x73, 0x69, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x69, 0x70,
	0x73, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x70, 0x73, 0x53, 0x65, 0x71, 0x49, 0x64, 0x1a, 0x3c, 0x0a, 0x07, 0x52, 0x73, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xb7, 0x01, 0x0a, 0x12, 0x53, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x65, 0x71,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x79, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x61, 0x79,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x73, 0x1a, 0x3e, 0x0a, 0x19, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x36, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xa0, 0x01, 0x0a, 0x10, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x6e, 0x1a, 0xbc, 0x01, 0x0a,
	0x15, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x69,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x1a, 0xf2, 0x01, 0x0a, 0x13,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0xec, 0x0a, 0x0a, 0x0c, 0x57, 0x65, 0x72, 0x65, 0x57, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x65,
	0x6e, 0x75, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x75, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x57, 0x65, 0x72,
	0x65, 0x57, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x72, 0x63, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x64, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x61, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09,
	0x64, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x6f, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x54, 0x69, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x1a, 0x5c, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x72, 0x61, 0x77, 0x1a,
	0xbd, 0x05, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65,
	0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x75,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x70,
	0x65, 0x61, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x70,
	0x65, 0x61, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x61, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e,
	0x5f, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61,
	0x6e, 0x56, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53,
	0x61, 0x76, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x70, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x50, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x5f,
	0x6f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x44, 0x65,
	0x61, 0x64, 0x4f, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e,
	0x75, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x49, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x69, 0x70, 0x73, 0x2e, 0x57, 0x65, 0x72, 0x65, 0x57, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x6d, 0x73, 0x67,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x77, 0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x69, 0x73, 0x57, 0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x65, 0x72, 0x69, 0x66, 0x66, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x73, 0x53, 0x68, 0x65, 0x72, 0x69, 0x66, 0x66, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c,
	0x61, 0x70, 0x35, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x67, 0x75, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_daemon_service_pb_chat_tips_proto_rawDescOnce sync.Once
	file_daemon_service_pb_chat_tips_proto_rawDescData = file_daemon_service_pb_chat_tips_proto_rawDesc
)

func file_daemon_service_pb_chat_tips_proto_rawDescGZIP() []byte {
	file_daemon_service_pb_chat_tips_proto_rawDescOnce.Do(func() {
		file_daemon_service_pb_chat_tips_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_service_pb_chat_tips_proto_rawDescData)
	})
	return file_daemon_service_pb_chat_tips_proto_rawDescData
}

var file_daemon_service_pb_chat_tips_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_daemon_service_pb_chat_tips_proto_goTypes = []interface{}{
	(*ChatTips)(nil),                                           // 0: ChatTips
	(*ChatTips_AIOGrayTipsInfo)(nil),                           // 1: ChatTips.AIOGrayTipsInfo
	(*ChatTips_AIOTopTipsInfo)(nil),                            // 2: ChatTips.AIOTopTipsInfo
	(*ChatTips_FloatedTipsInfo)(nil),                           // 3: ChatTips.FloatedTipsInfo
	(*ChatTips_GeneralGrayTipInfo)(nil),                        // 4: ChatTips.GeneralGrayTipInfo
	(*ChatTips_GoldMsgTipsElem)(nil),                           // 5: ChatTips.GoldMsgTipsElem
	(*ChatTips_GrayData)(nil),                                  // 6: ChatTips.GrayData
	(*ChatTips_GroupAnnounceTBCInfo)(nil),                      // 7: ChatTips.GroupAnnounceTBCInfo
	(*ChatTips_GroupAsyncNotify)(nil),                          // 8: ChatTips.GroupAsyncNotify
	(*ChatTips_GroupInfoChange)(nil),                           // 9: ChatTips.GroupInfoChange
	(*ChatTips_GroupNotifyInfo)(nil),                           // 10: ChatTips.GroupNotifyInfo
	(*ChatTips_InstCtrl)(nil),                                  // 11: ChatTips.InstCtrl
	(*ChatTips_InstInfo)(nil),                                  // 12: ChatTips.InstInfo
	(*ChatTips_LbsShareChangePushInfo)(nil),                    // 13: ChatTips.LbsShareChangePushInfo
	(*ChatTips_LuckyBagNotify)(nil),                            // 14: ChatTips.LuckyBagNotify
	(*ChatTips_MediaChangePushInfo)(nil),                       // 15: ChatTips.MediaChangePushInfo
	(*ChatTips_MessageBoxInfo)(nil),                            // 16: ChatTips.MessageBoxInfo
	(*ChatTips_MessageRecallReminder)(nil),                     // 17: ChatTips.MessageRecallReminder
	(*ChatTips_MiniAppNotify)(nil),                             // 18: ChatTips.MiniAppNotify
	(*ChatTips_NotifyMsgBody)(nil),                             // 19: ChatTips.NotifyMsgBody
	(*ChatTips_NotifyObjmsgUpdate)(nil),                        // 20: ChatTips.NotifyObjmsgUpdate
	(*ChatTips_QQGroupDigestMsg)(nil),                          // 21: ChatTips.QQGroupDigestMsg
	(*ChatTips_QQGroupDigestMsgSummary)(nil),                   // 22: ChatTips.QQGroupDigestMsgSummary
	(*ChatTips_QQGroupDigestSummaryInfo)(nil),                  // 23: ChatTips.QQGroupDigestSummaryInfo
	(*ChatTips_QQVaLiveNotifyMsg)(nil),                         // 24: ChatTips.QQVaLiveNotifyMsg
	(*ChatTips_QQVedioGamePushInfo)(nil),                       // 25: ChatTips.QQVedioGamePushInfo
	(*ChatTips_RedGrayTipsInfo)(nil),                           // 26: ChatTips.RedGrayTipsInfo
	(*ChatTips_ReqBody)(nil),                                   // 27: ChatTips.ReqBody
	(*ChatTips_RevertGrayTipsMsgTraceless)(nil),                // 28: ChatTips.RevertGrayTipsMsgTraceless
	(*ChatTips_RspBody)(nil),                                   // 29: ChatTips.RspBody
	(*ChatTips_SingChangePushInfo)(nil),                        // 30: ChatTips.SingChangePushInfo
	(*ChatTips_StudyRoomMemberChangePush)(nil),                 // 31: ChatTips.StudyRoomMemberChangePush
	(*ChatTips_TemplParam)(nil),                                // 32: ChatTips.TemplParam
	(*ChatTips_ThemeStateNotify)(nil),                          // 33: ChatTips.ThemeStateNotify
	(*ChatTips_TroopFormGrayTipsInfo)(nil),                     // 34: ChatTips.TroopFormGrayTipsInfo
	(*ChatTips_VideoChangePushInfo)(nil),                       // 35: ChatTips.VideoChangePushInfo
	(*ChatTips_WereWolfPush)(nil),                              // 36: ChatTips.WereWolfPush
	(*ChatTips_MediaChangePushInfo_PersonalSetting)(nil),       // 37: ChatTips.MediaChangePushInfo.PersonalSetting
	(*ChatTips_MessageRecallReminder_MessageMeta)(nil),         // 38: ChatTips.MessageRecallReminder.MessageMeta
	(*ChatTips_MessageRecallReminder_WithDrawWordingInfo)(nil), // 39: ChatTips.MessageRecallReminder.WithDrawWordingInfo
	(*ChatTips_WereWolfPush_GameRecord)(nil),                   // 40: ChatTips.WereWolfPush.GameRecord
	(*ChatTips_WereWolfPush_Role)(nil),                         // 41: ChatTips.WereWolfPush.Role
	(*ApolloGameStatus_STCMGameMessage)(nil),                   // 42: ApolloGameStatus.STCMGameMessage
	(*ApolloPushMessage_STPushMsgElem)(nil),                    // 43: ApolloPushMessage.STPushMsgElem
}
var file_daemon_service_pb_chat_tips_proto_depIdxs = []int32{
	32, // 0: ChatTips.GeneralGrayTipInfo.msg_templ_param:type_name -> ChatTips.TemplParam
	12, // 1: ChatTips.InstCtrl.msg_send_to_inst:type_name -> ChatTips.InstInfo
	12, // 2: ChatTips.InstCtrl.msg_exclude_inst:type_name -> ChatTips.InstInfo
	12, // 3: ChatTips.InstCtrl.msg_from_inst:type_name -> ChatTips.InstInfo
	37, // 4: ChatTips.MediaChangePushInfo.msg_per_setting:type_name -> ChatTips.MediaChangePushInfo.PersonalSetting
	38, // 5: ChatTips.MessageRecallReminder.recalled_msg_list:type_name -> ChatTips.MessageRecallReminder.MessageMeta
	39, // 6: ChatTips.MessageRecallReminder.msg_wording_info:type_name -> ChatTips.MessageRecallReminder.WithDrawWordingInfo
	1,  // 7: ChatTips.NotifyMsgBody.msg_graytips:type_name -> ChatTips.AIOGrayTipsInfo
	16, // 8: ChatTips.NotifyMsgBody.msg_messagebox:type_name -> ChatTips.MessageBoxInfo
	3,  // 9: ChatTips.NotifyMsgBody.msg_floatedtips:type_name -> ChatTips.FloatedTipsInfo
	2,  // 10: ChatTips.NotifyMsgBody.msg_toptips:type_name -> ChatTips.AIOTopTipsInfo
	26, // 11: ChatTips.NotifyMsgBody.msg_redtips:type_name -> ChatTips.RedGrayTipsInfo
	10, // 12: ChatTips.NotifyMsgBody.msg_group_notify:type_name -> ChatTips.GroupNotifyInfo
	17, // 13: ChatTips.NotifyMsgBody.msg_recall:type_name -> ChatTips.MessageRecallReminder
	33, // 14: ChatTips.NotifyMsgBody.msg_theme_notify:type_name -> ChatTips.ThemeStateNotify
	20, // 15: ChatTips.NotifyMsgBody.msg_objmsg_update:type_name -> ChatTips.NotifyObjmsgUpdate
	36, // 16: ChatTips.NotifyMsgBody.msg_werewolf_push:type_name -> ChatTips.WereWolfPush
	42, // 17: ChatTips.NotifyMsgBody.stcm_game_state:type_name -> ApolloGameStatus.STCMGameMessage
	43, // 18: ChatTips.NotifyMsgBody.apllo_msg_push:type_name -> ApolloPushMessage.STPushMsgElem
	5,  // 19: ChatTips.NotifyMsgBody.msg_goldtips:type_name -> ChatTips.GoldMsgTipsElem
	18, // 20: ChatTips.NotifyMsgBody.msg_miniapp_notify:type_name -> ChatTips.MiniAppNotify
	14, // 21: ChatTips.NotifyMsgBody.msg_luckybag_notify:type_name -> ChatTips.LuckyBagNotify
	34, // 22: ChatTips.NotifyMsgBody.msg_troopformtips_push:type_name -> ChatTips.TroopFormGrayTipsInfo
	15, // 23: ChatTips.NotifyMsgBody.msg_media_push:type_name -> ChatTips.MediaChangePushInfo
	4,  // 24: ChatTips.NotifyMsgBody.general_gray_tip:type_name -> ChatTips.GeneralGrayTipInfo
	35, // 25: ChatTips.NotifyMsgBody.msg_video_push:type_name -> ChatTips.VideoChangePushInfo
	13, // 26: ChatTips.NotifyMsgBody.lbs_share_change_plus_info:type_name -> ChatTips.LbsShareChangePushInfo
	30, // 27: ChatTips.NotifyMsgBody.msg_sing_push:type_name -> ChatTips.SingChangePushInfo
	9,  // 28: ChatTips.NotifyMsgBody.msg_group_info_change:type_name -> ChatTips.GroupInfoChange
	7,  // 29: ChatTips.NotifyMsgBody.group_announce_tbc_info:type_name -> ChatTips.GroupAnnounceTBCInfo
	25, // 30: ChatTips.NotifyMsgBody.qq_vedio_game_push_info:type_name -> ChatTips.QQVedioGamePushInfo
	21, // 31: ChatTips.NotifyMsgBody.qq_group_digest_msg:type_name -> ChatTips.QQGroupDigestMsg
	31, // 32: ChatTips.NotifyMsgBody.study_room_member_msg:type_name -> ChatTips.StudyRoomMemberChangePush
	24, // 33: ChatTips.NotifyMsgBody.qq_live_notify:type_name -> ChatTips.QQVaLiveNotifyMsg
	8,  // 34: ChatTips.NotifyMsgBody.group_async_notidy:type_name -> ChatTips.GroupAsyncNotify
	22, // 35: ChatTips.NotifyMsgBody.group_digest_msg_summary:type_name -> ChatTips.QQGroupDigestMsgSummary
	28, // 36: ChatTips.NotifyMsgBody.revert_graytips_traceless:type_name -> ChatTips.RevertGrayTipsMsgTraceless
	23, // 37: ChatTips.QQGroupDigestMsgSummary.summary_info:type_name -> ChatTips.QQGroupDigestSummaryInfo
	11, // 38: ChatTips.ReqBody.msg_inst_ctrl:type_name -> ChatTips.InstCtrl
	41, // 39: ChatTips.WereWolfPush.roles:type_name -> ChatTips.WereWolfPush.Role
	40, // 40: ChatTips.WereWolfPush.Role.msg_game_record:type_name -> ChatTips.WereWolfPush.GameRecord
	41, // [41:41] is the sub-list for method output_type
	41, // [41:41] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_daemon_service_pb_chat_tips_proto_init() }
func file_daemon_service_pb_chat_tips_proto_init() {
	if File_daemon_service_pb_chat_tips_proto != nil {
		return
	}
	file_daemon_service_pb_apollo_game_status_proto_init()
	file_daemon_service_pb_apollo_push_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_daemon_service_pb_chat_tips_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_AIOGrayTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_AIOTopTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_FloatedTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GeneralGrayTipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GoldMsgTipsElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GrayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GroupAnnounceTBCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GroupAsyncNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GroupInfoChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_GroupNotifyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_InstCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_InstInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_LbsShareChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_LuckyBagNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MediaChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MessageBoxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MessageRecallReminder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MiniAppNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_NotifyMsgBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_NotifyObjmsgUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_QQGroupDigestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_QQGroupDigestMsgSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_QQGroupDigestSummaryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_QQVaLiveNotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_QQVedioGamePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_RedGrayTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_RevertGrayTipsMsgTraceless); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_SingChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_StudyRoomMemberChangePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_TemplParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_ThemeStateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_TroopFormGrayTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_VideoChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_WereWolfPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MediaChangePushInfo_PersonalSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MessageRecallReminder_MessageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_MessageRecallReminder_WithDrawWordingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_WereWolfPush_GameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_service_pb_chat_tips_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatTips_WereWolfPush_Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_daemon_service_pb_chat_tips_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_daemon_service_pb_chat_tips_proto_msgTypes[34].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_service_pb_chat_tips_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_service_pb_chat_tips_proto_goTypes,
		DependencyIndexes: file_daemon_service_pb_chat_tips_proto_depIdxs,
		MessageInfos:      file_daemon_service_pb_chat_tips_proto_msgTypes,
	}.Build()
	File_daemon_service_pb_chat_tips_proto = out.File
	file_daemon_service_pb_chat_tips_proto_rawDesc = nil
	file_daemon_service_pb_chat_tips_proto_goTypes = nil
	file_daemon_service_pb_chat_tips_proto_depIdxs = nil
}
