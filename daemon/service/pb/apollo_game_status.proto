syntax = "proto3";

option go_package = "github.com/elap5e/penguin/daemon/service/pb";

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1318im.apollo_game_status
//
// ApolloGameStatus is the message type for the apollo_game_status.
message ApolloGameStatus {
  // STCMGameMessage is the message type for the STCMGameMessage.
  message STCMGameMessage {
    uint32 msg_cmd          = 1; // uint32_msg_cmd
    STMsgComm msg_comm      = 2; // msg_comm
    STGameJoinRoom msg_0x01 = 3; // msg_0x01
    STGameQuitRoom msg_0x02 = 4; // msg_0x02
    STGameStart msg_0x03    = 5; // msg_0x03
    STGameOver msg_0x04     = 6; // msg_0x04
    STGameInvalid msg_0x05  = 7; // msg_0x05
    STGameCancel msg_0x06   = 8; // msg_0x06
    // STGameCancel is the message type for the STGameCancel.
    message STGameCancel {
      bytes game_cancel_info = 1; // str_game_cancel_info
    }
    // STGameInvalid is the message type for the STGameInvalid.
    message STGameInvalid {
      bytes game_invlid_info = 1; // str_game_invlid_info
    }
    // STGameJoinRoom is the message type for the STGameJoinRoom.
    message STGameJoinRoom {
      uint32 room_vol          = 1; // uint32_room_vol
      repeated uint32 uin_list = 2; // rpt_uint32_uin_list
      bytes game_join_info     = 3; // str_game_join_info
    }
    // STGameOver is the message type for the STGameOver.
    message STGameOver {
      repeated STScoreInfo msg_winner_info = 1; // rpt_msg_winner_info
      uint32 over_type                     = 2; // uint32_over_type
      bytes game_over_info                 = 3; // str_game_over_info
    }
    // STGameQuitRoom is the message type for the STGameQuitRoom.
    message STGameQuitRoom {
      uint32 room_vol          = 1; // uint32_room_vol
      repeated uint32 uin_list = 2; // rpt_uint32_uin_list
      bytes game_quit_info     = 3; // str_game_quit_info
    }
    // STGameStart is the message type for the STGameStart.
    message STGameStart {
      bytes game_start_info = 1; // str_game_start_info
    }
    // STMsgComm is the message type for the STMsgComm.
    message STMsgComm {
      uint32 game_id               = 1; // uint32_game_id
      string room_id               = 2; // str_room_id
      uint64 time_stamp            = 3; // uint64_time_stamp
      uint32 session_id            = 4; // uint32_session_id
      repeated uint32 session_list = 5; // rpt_uint32_session_list
      uint32 play_model            = 6; // uint32_play_model
      bytes game_comm_info         = 7; // str_game_comm_info
      repeated uint32 uin_list     = 8; // rpt_uint32_uin_list
      uint32 room_vol              = 9; // uint32_room_vol
    }
    // STScoreInfo is the message type for the STScoreInfo.
    message STScoreInfo {
      uint32 winner  = 1; // uint32_winner
      string wording = 2; // str_wording
    }
  }
  // STGameStateMsgList is the message type for the STGameStateMsgList.
  message STGameStateMsgList {
    repeated STCMGameMessage msg_list = 1; // rpt_msg_list
  }
}
