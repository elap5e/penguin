// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/contact/pb/oidb_0xd50.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1298im.oidb.cmd0xd50.Oidb_0xd50
//
// Oidb_0xd50 is the message type for the Oidb_0xd50.
type OIDB0XD50 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OIDB0XD50) Reset() {
	*x = OIDB0XD50{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB0XD50) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB0XD50) ProtoMessage() {}

func (x *OIDB0XD50) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB0XD50.ProtoReflect.Descriptor instead.
func (*OIDB0XD50) Descriptor() ([]byte, []int) {
	return file_daemon_contact_pb_oidb_0xd50_proto_rawDescGZIP(), []int{0}
}

// ExtSnsFrdData is the message type for the ExtSnsFrdData.
type OIDB0XD50_ExtSnsFrdData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrdUin                     uint64 `protobuf:"varint,1,opt,name=frd_uin,json=frdUin,proto3" json:"frd_uin,omitempty"`                                                                         // frd_uin
	Lovers                     []byte `protobuf:"bytes,11002,opt,name=lovers,proto3" json:"lovers,omitempty"`                                                                                    // bytes_lovers
	Confidante                 []byte `protobuf:"bytes,21002,opt,name=confidante,proto3" json:"confidante,omitempty"`                                                                            // bytes_confidante
	Buddy                      []byte `protobuf:"bytes,31002,opt,name=buddy,proto3" json:"buddy,omitempty"`                                                                                      // bytes_buddy
	FrdTree                    []byte `protobuf:"bytes,41001,opt,name=frd_tree,json=frdTree,proto3" json:"frd_tree,omitempty"`                                                                   // bytes_frd_tree
	Chat                       []byte `protobuf:"bytes,51001,opt,name=chat,proto3" json:"chat,omitempty"`                                                                                        // bytes_chat
	Praise                     []byte `protobuf:"bytes,61001,opt,name=praise,proto3" json:"praise,omitempty"`                                                                                    // bytes_praise
	QzoneLove                  []byte `protobuf:"bytes,71001,opt,name=qzone_love,json=qzoneLove,proto3" json:"qzone_love,omitempty"`                                                             // bytes_qzone_love
	QzoneHouse                 []byte `protobuf:"bytes,81001,opt,name=qzone_house,json=qzoneHouse,proto3" json:"qzone_house,omitempty"`                                                          // bytes_qzone_house
	MusicSwitch                []byte `protobuf:"bytes,91001,opt,name=music_switch,json=musicSwitch,proto3" json:"music_switch,omitempty"`                                                       // bytes_music_switch
	MutualmarkAlienation       []byte `protobuf:"bytes,101001,opt,name=mutualmark_alienation,json=mutualmarkAlienation,proto3" json:"mutualmark_alienation,omitempty"`                           // bytes_mutualmark_alienation
	UnreadMessage              []byte `protobuf:"bytes,111001,opt,name=unread_message,json=unreadMessage,proto3" json:"unread_message,omitempty"`                                                // bytes_unread_message
	Boat                       []byte `protobuf:"bytes,121001,opt,name=boat,proto3" json:"boat,omitempty"`                                                                                       // bytes_boat
	CloseFrd                   []byte `protobuf:"bytes,131001,opt,name=close_frd,json=closeFrd,proto3" json:"close_frd,omitempty"`                                                               // bytes_close_frd
	MutualmarkScore            []byte `protobuf:"bytes,141001,opt,name=mutualmark_score,json=mutualmarkScore,proto3" json:"mutualmark_score,omitempty"`                                          // bytes_mutualmark_score
	KsingSwitch                []byte `protobuf:"bytes,151001,opt,name=ksing_switch,json=ksingSwitch,proto3" json:"ksing_switch,omitempty"`                                                      // bytes_ksing_switch
	LbsShare                   []byte `protobuf:"bytes,181001,opt,name=lbs_share,json=lbsShare,proto3" json:"lbs_share,omitempty"`                                                               // bytes_lbs_share
	DontForgetMe               []byte `protobuf:"bytes,211001,opt,name=dont_forget_me,json=dontForgetMe,proto3" json:"dont_forget_me,omitempty"`                                                 // bytes_dont_forget_me
	MyOnlineStatusVisibleToFrd []byte `protobuf:"bytes,221001,opt,name=my_online_status_visible_to_frd,json=myOnlineStatusVisibleToFrd,proto3" json:"my_online_status_visible_to_frd,omitempty"` // bytes_my_online_status_visible_to_frd
	FrdOnlineStatusVisibleToMe []byte `protobuf:"bytes,221002,opt,name=frd_online_status_visible_to_me,json=frdOnlineStatusVisibleToMe,proto3" json:"frd_online_status_visible_to_me,omitempty"` // bytes_frd_online_status_visible_to_me
	VisitorRecord              []byte `protobuf:"bytes,231001,opt,name=visitor_record,json=visitorRecord,proto3" json:"visitor_record,omitempty"`                                                // bytes_visitor_record
	FrdStealRecord             []byte `protobuf:"bytes,231002,opt,name=frd_steal_record,json=frdStealRecord,proto3" json:"frd_steal_record,omitempty"`                                           // bytes_frd_steal_record
	MyStealRecord              []byte `protobuf:"bytes,231003,opt,name=my_steal_record,json=myStealRecord,proto3" json:"my_steal_record,omitempty"`                                              // bytes_my_steal_record
	Avgame                     []byte `protobuf:"bytes,241001,opt,name=avgame,proto3" json:"avgame,omitempty"`                                                                                   // bytes_avgame
	AioQuickApp                []byte `protobuf:"bytes,251001,opt,name=aio_quick_app,json=aioQuickApp,proto3" json:"aio_quick_app,omitempty"`                                                    // bytes_aio_quick_app
}

func (x *OIDB0XD50_ExtSnsFrdData) Reset() {
	*x = OIDB0XD50_ExtSnsFrdData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB0XD50_ExtSnsFrdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB0XD50_ExtSnsFrdData) ProtoMessage() {}

func (x *OIDB0XD50_ExtSnsFrdData) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB0XD50_ExtSnsFrdData.ProtoReflect.Descriptor instead.
func (*OIDB0XD50_ExtSnsFrdData) Descriptor() ([]byte, []int) {
	return file_daemon_contact_pb_oidb_0xd50_proto_rawDescGZIP(), []int{0, 0}
}

func (x *OIDB0XD50_ExtSnsFrdData) GetFrdUin() uint64 {
	if x != nil {
		return x.FrdUin
	}
	return 0
}

func (x *OIDB0XD50_ExtSnsFrdData) GetLovers() []byte {
	if x != nil {
		return x.Lovers
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetConfidante() []byte {
	if x != nil {
		return x.Confidante
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetBuddy() []byte {
	if x != nil {
		return x.Buddy
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetFrdTree() []byte {
	if x != nil {
		return x.FrdTree
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetChat() []byte {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetPraise() []byte {
	if x != nil {
		return x.Praise
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetQzoneLove() []byte {
	if x != nil {
		return x.QzoneLove
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetQzoneHouse() []byte {
	if x != nil {
		return x.QzoneHouse
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetMusicSwitch() []byte {
	if x != nil {
		return x.MusicSwitch
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetMutualmarkAlienation() []byte {
	if x != nil {
		return x.MutualmarkAlienation
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetUnreadMessage() []byte {
	if x != nil {
		return x.UnreadMessage
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetBoat() []byte {
	if x != nil {
		return x.Boat
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetCloseFrd() []byte {
	if x != nil {
		return x.CloseFrd
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetMutualmarkScore() []byte {
	if x != nil {
		return x.MutualmarkScore
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetKsingSwitch() []byte {
	if x != nil {
		return x.KsingSwitch
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetLbsShare() []byte {
	if x != nil {
		return x.LbsShare
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetDontForgetMe() []byte {
	if x != nil {
		return x.DontForgetMe
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetMyOnlineStatusVisibleToFrd() []byte {
	if x != nil {
		return x.MyOnlineStatusVisibleToFrd
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetFrdOnlineStatusVisibleToMe() []byte {
	if x != nil {
		return x.FrdOnlineStatusVisibleToMe
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetVisitorRecord() []byte {
	if x != nil {
		return x.VisitorRecord
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetFrdStealRecord() []byte {
	if x != nil {
		return x.FrdStealRecord
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetMyStealRecord() []byte {
	if x != nil {
		return x.MyStealRecord
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetAvgame() []byte {
	if x != nil {
		return x.Avgame
	}
	return nil
}

func (x *OIDB0XD50_ExtSnsFrdData) GetAioQuickApp() []byte {
	if x != nil {
		return x.AioQuickApp
	}
	return nil
}

// KSingRelationInfo is the message type for the KSingRelationInfo.
type OIDB0XD50_KSingRelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag uint32 `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"` // flag
}

func (x *OIDB0XD50_KSingRelationInfo) Reset() {
	*x = OIDB0XD50_KSingRelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB0XD50_KSingRelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB0XD50_KSingRelationInfo) ProtoMessage() {}

func (x *OIDB0XD50_KSingRelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB0XD50_KSingRelationInfo.ProtoReflect.Descriptor instead.
func (*OIDB0XD50_KSingRelationInfo) Descriptor() ([]byte, []int) {
	return file_daemon_contact_pb_oidb_0xd50_proto_rawDescGZIP(), []int{0, 1}
}

func (x *OIDB0XD50_KSingRelationInfo) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

// ReqBody is the message type for the ReqBody.
type OIDB0XD50_ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid                         uint64   `protobuf:"varint,1,opt,name=appid,proto3" json:"appid,omitempty"`                                                                                                     // appid
	MaxPkgSize                    uint32   `protobuf:"varint,2,opt,name=max_pkg_size,json=maxPkgSize,proto3" json:"max_pkg_size,omitempty"`                                                                       // max_pkg_size
	StartTime                     uint32   `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                            // start_time
	StartIndex                    uint32   `protobuf:"varint,4,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`                                                                         // start_index
	ReqNum                        uint32   `protobuf:"varint,5,opt,name=req_num,json=reqNum,proto3" json:"req_num,omitempty"`                                                                                     // req_num
	UinList                       []uint64 `protobuf:"varint,6,rep,packed,name=uin_list,json=uinList,proto3" json:"uin_list,omitempty"`                                                                           // rpt_uin_list
	ReqLovers                     uint32   `protobuf:"varint,11002,opt,name=req_lovers,json=reqLovers,proto3" json:"req_lovers,omitempty"`                                                                        // req_lovers
	ReqConfidante                 uint32   `protobuf:"varint,21002,opt,name=req_confidante,json=reqConfidante,proto3" json:"req_confidante,omitempty"`                                                            // req_confidante
	ReqBuddy                      uint32   `protobuf:"varint,31002,opt,name=req_buddy,json=reqBuddy,proto3" json:"req_buddy,omitempty"`                                                                           // req_buddy
	ReqFrdTree                    uint32   `protobuf:"varint,41001,opt,name=req_frd_tree,json=reqFrdTree,proto3" json:"req_frd_tree,omitempty"`                                                                   // req_frd_tree
	ReqChat                       uint32   `protobuf:"varint,51001,opt,name=req_chat,json=reqChat,proto3" json:"req_chat,omitempty"`                                                                              // req_chat
	ReqPraise                     uint32   `protobuf:"varint,61001,opt,name=req_praise,json=reqPraise,proto3" json:"req_praise,omitempty"`                                                                        // req_praise
	ReqQzoneLove                  uint32   `protobuf:"varint,71001,opt,name=req_qzone_love,json=reqQzoneLove,proto3" json:"req_qzone_love,omitempty"`                                                             // req_qzone_love
	ReqQzoneHouse                 uint32   `protobuf:"varint,81001,opt,name=req_qzone_house,json=reqQzoneHouse,proto3" json:"req_qzone_house,omitempty"`                                                          // req_qzone_house
	ReqMusicSwitch                uint32   `protobuf:"varint,91001,opt,name=req_music_switch,json=reqMusicSwitch,proto3" json:"req_music_switch,omitempty"`                                                       // req_music_switch
	ReqMutualmarkAlienation       uint32   `protobuf:"varint,101001,opt,name=req_mutualmark_alienation,json=reqMutualmarkAlienation,proto3" json:"req_mutualmark_alienation,omitempty"`                           // req_mutualmark_alienation
	ReqUnreadMessage              uint32   `protobuf:"varint,111001,opt,name=req_unread_message,json=reqUnreadMessage,proto3" json:"req_unread_message,omitempty"`                                                // req_unread_message
	ReqBoat                       uint32   `protobuf:"varint,121001,opt,name=req_boat,json=reqBoat,proto3" json:"req_boat,omitempty"`                                                                             // req_boat
	ReqCloseFrd                   uint32   `protobuf:"varint,131001,opt,name=req_close_frd,json=reqCloseFrd,proto3" json:"req_close_frd,omitempty"`                                                               // req_close_frd
	ReqMutualmarkScore            uint32   `protobuf:"varint,141001,opt,name=req_mutualmark_score,json=reqMutualmarkScore,proto3" json:"req_mutualmark_score,omitempty"`                                          // req_mutualmark_score
	ReqKsingSwitch                uint32   `protobuf:"varint,151001,opt,name=req_ksing_switch,json=reqKsingSwitch,proto3" json:"req_ksing_switch,omitempty"`                                                      // req_ksing_switch
	ReqMutualmarkLbsshare         uint32   `protobuf:"varint,181001,opt,name=req_mutualmark_lbsshare,json=reqMutualmarkLbsshare,proto3" json:"req_mutualmark_lbsshare,omitempty"`                                 // req_mutualmark_lbsshare
	ReqDontForgetMe               uint32   `protobuf:"varint,211001,opt,name=req_dont_forget_me,json=reqDontForgetMe,proto3" json:"req_dont_forget_me,omitempty"`                                                 // req_dont_forget_me
	ReqMyOnlineStatusVisibleToFrd uint32   `protobuf:"varint,221001,opt,name=req_my_online_status_visible_to_frd,json=reqMyOnlineStatusVisibleToFrd,proto3" json:"req_my_online_status_visible_to_frd,omitempty"` // req_my_online_status_visible_to_frd
	ReqFrdOnlineStatusVisibleToMe uint32   `protobuf:"varint,221002,opt,name=req_frd_online_status_visible_to_me,json=reqFrdOnlineStatusVisibleToMe,proto3" json:"req_frd_online_status_visible_to_me,omitempty"` // req_frd_online_status_visible_to_me
	ReqVisitorRecord              uint32   `protobuf:"varint,231001,opt,name=req_visitor_record,json=reqVisitorRecord,proto3" json:"req_visitor_record,omitempty"`                                                // req_visitor_record
	ReqFrdStealRecord             uint32   `protobuf:"varint,231002,opt,name=req_frd_steal_record,json=reqFrdStealRecord,proto3" json:"req_frd_steal_record,omitempty"`                                           // req_frd_steal_record
	ReqMyStealRecord              uint32   `protobuf:"varint,231003,opt,name=req_my_steal_record,json=reqMyStealRecord,proto3" json:"req_my_steal_record,omitempty"`                                              // req_my_steal_record
	ReqAvgame                     uint32   `protobuf:"varint,241001,opt,name=req_avgame,json=reqAvgame,proto3" json:"req_avgame,omitempty"`                                                                       // req_avgame
	ReqAioQuickApp                uint32   `protobuf:"varint,251001,opt,name=req_aio_quick_app,json=reqAioQuickApp,proto3" json:"req_aio_quick_app,omitempty"`                                                    // req_aio_quick_app
}

func (x *OIDB0XD50_ReqBody) Reset() {
	*x = OIDB0XD50_ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB0XD50_ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB0XD50_ReqBody) ProtoMessage() {}

func (x *OIDB0XD50_ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB0XD50_ReqBody.ProtoReflect.Descriptor instead.
func (*OIDB0XD50_ReqBody) Descriptor() ([]byte, []int) {
	return file_daemon_contact_pb_oidb_0xd50_proto_rawDescGZIP(), []int{0, 2}
}

func (x *OIDB0XD50_ReqBody) GetAppid() uint64 {
	if x != nil {
		return x.Appid
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetMaxPkgSize() uint32 {
	if x != nil {
		return x.MaxPkgSize
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqNum() uint32 {
	if x != nil {
		return x.ReqNum
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetUinList() []uint64 {
	if x != nil {
		return x.UinList
	}
	return nil
}

func (x *OIDB0XD50_ReqBody) GetReqLovers() uint32 {
	if x != nil {
		return x.ReqLovers
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqConfidante() uint32 {
	if x != nil {
		return x.ReqConfidante
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqBuddy() uint32 {
	if x != nil {
		return x.ReqBuddy
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqFrdTree() uint32 {
	if x != nil {
		return x.ReqFrdTree
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqChat() uint32 {
	if x != nil {
		return x.ReqChat
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqPraise() uint32 {
	if x != nil {
		return x.ReqPraise
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqQzoneLove() uint32 {
	if x != nil {
		return x.ReqQzoneLove
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqQzoneHouse() uint32 {
	if x != nil {
		return x.ReqQzoneHouse
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqMusicSwitch() uint32 {
	if x != nil {
		return x.ReqMusicSwitch
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqMutualmarkAlienation() uint32 {
	if x != nil {
		return x.ReqMutualmarkAlienation
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqUnreadMessage() uint32 {
	if x != nil {
		return x.ReqUnreadMessage
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqBoat() uint32 {
	if x != nil {
		return x.ReqBoat
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqCloseFrd() uint32 {
	if x != nil {
		return x.ReqCloseFrd
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqMutualmarkScore() uint32 {
	if x != nil {
		return x.ReqMutualmarkScore
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqKsingSwitch() uint32 {
	if x != nil {
		return x.ReqKsingSwitch
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqMutualmarkLbsshare() uint32 {
	if x != nil {
		return x.ReqMutualmarkLbsshare
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqDontForgetMe() uint32 {
	if x != nil {
		return x.ReqDontForgetMe
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqMyOnlineStatusVisibleToFrd() uint32 {
	if x != nil {
		return x.ReqMyOnlineStatusVisibleToFrd
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqFrdOnlineStatusVisibleToMe() uint32 {
	if x != nil {
		return x.ReqFrdOnlineStatusVisibleToMe
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqVisitorRecord() uint32 {
	if x != nil {
		return x.ReqVisitorRecord
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqFrdStealRecord() uint32 {
	if x != nil {
		return x.ReqFrdStealRecord
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqMyStealRecord() uint32 {
	if x != nil {
		return x.ReqMyStealRecord
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqAvgame() uint32 {
	if x != nil {
		return x.ReqAvgame
	}
	return 0
}

func (x *OIDB0XD50_ReqBody) GetReqAioQuickApp() uint32 {
	if x != nil {
		return x.ReqAioQuickApp
	}
	return 0
}

// RspBody is the message type for the RspBody.
type OIDB0XD50_RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgUpdateData  []*OIDB0XD50_ExtSnsFrdData `protobuf:"bytes,1,rep,name=msg_update_data,json=msgUpdateData,proto3" json:"msg_update_data,omitempty"`           // rpt_msg_update_data
	Over           uint32                     `protobuf:"varint,11,opt,name=over,proto3" json:"over,omitempty"`                                                  // uint32_over
	NextStart      uint32                     `protobuf:"varint,12,opt,name=next_start,json=nextStart,proto3" json:"next_start,omitempty"`                       // uint32_next_start
	UnfinishedUins []uint64                   `protobuf:"varint,13,rep,packed,name=unfinished_uins,json=unfinishedUins,proto3" json:"unfinished_uins,omitempty"` // rpt_uint64_unfinished_uins
}

func (x *OIDB0XD50_RspBody) Reset() {
	*x = OIDB0XD50_RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB0XD50_RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB0XD50_RspBody) ProtoMessage() {}

func (x *OIDB0XD50_RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB0XD50_RspBody.ProtoReflect.Descriptor instead.
func (*OIDB0XD50_RspBody) Descriptor() ([]byte, []int) {
	return file_daemon_contact_pb_oidb_0xd50_proto_rawDescGZIP(), []int{0, 3}
}

func (x *OIDB0XD50_RspBody) GetMsgUpdateData() []*OIDB0XD50_ExtSnsFrdData {
	if x != nil {
		return x.MsgUpdateData
	}
	return nil
}

func (x *OIDB0XD50_RspBody) GetOver() uint32 {
	if x != nil {
		return x.Over
	}
	return 0
}

func (x *OIDB0XD50_RspBody) GetNextStart() uint32 {
	if x != nil {
		return x.NextStart
	}
	return 0
}

func (x *OIDB0XD50_RspBody) GetUnfinishedUins() []uint64 {
	if x != nil {
		return x.UnfinishedUins
	}
	return nil
}

var File_daemon_contact_pb_oidb_0xd50_proto protoreflect.FileDescriptor

var file_daemon_contact_pb_oidb_0xd50_proto_rawDesc = []byte{
	0x0a, 0x22, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x2f, 0x70, 0x62, 0x2f, 0x6f, 0x69, 0x64, 0x62, 0x5f, 0x30, 0x78, 0x64, 0x35, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x13, 0x0a, 0x09, 0x4f, 0x49, 0x44, 0x42, 0x30, 0x78, 0x44,
	0x35, 0x30, 0x1a, 0xac, 0x07, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x53, 0x6e, 0x73, 0x46, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x72, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a,
	0x06, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0xfa, 0x55, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x61, 0x6e, 0x74, 0x65, 0x18, 0x8a, 0xa4, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x61, 0x6e, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x75, 0x64, 0x64,
	0x79, 0x18, 0x9a, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x75, 0x64, 0x64, 0x79,
	0x12, 0x1b, 0x0a, 0x08, 0x66, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0xa9, 0xc0, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a,
	0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0xb9, 0x8e, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63,
	0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x18, 0xc9, 0xdc,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0a, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x18, 0xd9, 0xaa, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x4c, 0x6f, 0x76, 0x65, 0x12, 0x21,
	0x0a, 0x0b, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0xe9, 0xf8,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0xf9, 0xc6, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x15, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x6c, 0x69, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x89, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d,
	0x61, 0x72, 0x6b, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x99, 0xe3, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x61, 0x74, 0x18, 0xa9,
	0xb1, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x09,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x72, 0x64, 0x18, 0xb9, 0xff, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x6d,
	0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0xc9, 0xcd, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d,
	0x61, 0x72, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6b, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0xd9, 0x9b, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x6b, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x0a,
	0x09, 0x6c, 0x62, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x89, 0x86, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6c, 0x62, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x18, 0xb9,
	0xf0, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x74, 0x4d, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x6d, 0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x72, 0x64, 0x18, 0xc9, 0xbe, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x1a, 0x6d, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x46, 0x72, 0x64, 0x12, 0x45, 0x0a, 0x1f, 0x66,
	0x72, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x18, 0xca,
	0xbe, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x66, 0x72, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f,
	0x4d, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0xd9, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x76, 0x69,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x66,
	0x72, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0xda, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x72, 0x64, 0x53, 0x74, 0x65, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x79, 0x5f, 0x73, 0x74,
	0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xdb, 0x8c, 0x0e, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x6d, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x18, 0x0a, 0x06, 0x61, 0x76, 0x67, 0x61, 0x6d, 0x65, 0x18, 0xe9, 0xda, 0x0e, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x76, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x69, 0x6f, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x18, 0xf9, 0xa8, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x69, 0x6f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x41, 0x70,
	0x70, 0x1a, 0x27, 0x0a, 0x11, 0x4b, 0x53, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x1a, 0xf5, 0x09, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6b, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6b, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x18, 0xfa, 0x55, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x4c, 0x6f, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x27, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x61, 0x6e, 0x74, 0x65, 0x18, 0x8a, 0xa4, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65,
	0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x61, 0x6e, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x5f, 0x62, 0x75, 0x64, 0x64, 0x79, 0x18, 0x9a, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x71, 0x42, 0x75, 0x64, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x5f, 0x66, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0xa9, 0xc0, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x46, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1b,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0xb9, 0x8e, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x5f, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x18, 0xc9, 0xdc, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x72, 0x65, 0x71, 0x5f, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x18, 0xd9,
	0xaa, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x51, 0x7a, 0x6f, 0x6e, 0x65,
	0x4c, 0x6f, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x5f, 0x71, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0xe9, 0xf8, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x72, 0x65, 0x71, 0x51, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0xf9, 0xc6, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65,
	0x71, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x6c, 0x69,
	0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x89, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x72, 0x65, 0x71, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x6c,
	0x69, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x5f,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x99,
	0xe3, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x71, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f,
	0x62, 0x6f, 0x61, 0x74, 0x18, 0xa9, 0xb1, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x42, 0x6f, 0x61, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x66, 0x72, 0x64, 0x18, 0xb9, 0xff, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x72,
	0x65, 0x71, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0xc9, 0xcd, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x65, 0x71,
	0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x6b, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0xd9, 0x9b, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x71,
	0x4b, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x38, 0x0a, 0x17, 0x72,
	0x65, 0x71, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6c, 0x62,
	0x73, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x89, 0x86, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x72, 0x65, 0x71, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x62, 0x73,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x5f, 0x64, 0x6f, 0x6e,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x18, 0xb9, 0xf0, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x44, 0x6f, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x74, 0x4d, 0x65, 0x12, 0x4c, 0x0a, 0x23, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x79, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x72, 0x64, 0x18, 0xc9, 0xbe, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1d, 0x72, 0x65, 0x71, 0x4d, 0x79, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x46,
	0x72, 0x64, 0x12, 0x4c, 0x0a, 0x23, 0x72, 0x65, 0x71, 0x5f, 0x66, 0x72, 0x64, 0x5f, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x18, 0xca, 0xbe, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x1d, 0x72, 0x65, 0x71, 0x46, 0x72, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x4d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xd9, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x5f, 0x66, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xda, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x72, 0x65, 0x71, 0x46, 0x72, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x79, 0x5f, 0x73, 0x74,
	0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xdb, 0x8c, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x71, 0x4d, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x76, 0x67, 0x61,
	0x6d, 0x65, 0x18, 0xe9, 0xda, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x41,
	0x76, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x69, 0x6f,
	0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x18, 0xf9, 0xa8, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x41, 0x69, 0x6f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x1a, 0xa7, 0x01, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x40,
	0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x30, 0x78,
	0x44, 0x35, 0x30, 0x2e, 0x45, 0x78, 0x74, 0x53, 0x6e, 0x73, 0x46, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x75, 0x69, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x6e,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x73, 0x42, 0x2d, 0x5a, 0x2b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35,
	0x65, 0x2f, 0x70, 0x65, 0x6e, 0x67, 0x75, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_daemon_contact_pb_oidb_0xd50_proto_rawDescOnce sync.Once
	file_daemon_contact_pb_oidb_0xd50_proto_rawDescData = file_daemon_contact_pb_oidb_0xd50_proto_rawDesc
)

func file_daemon_contact_pb_oidb_0xd50_proto_rawDescGZIP() []byte {
	file_daemon_contact_pb_oidb_0xd50_proto_rawDescOnce.Do(func() {
		file_daemon_contact_pb_oidb_0xd50_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_contact_pb_oidb_0xd50_proto_rawDescData)
	})
	return file_daemon_contact_pb_oidb_0xd50_proto_rawDescData
}

var file_daemon_contact_pb_oidb_0xd50_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_daemon_contact_pb_oidb_0xd50_proto_goTypes = []interface{}{
	(*OIDB0XD50)(nil),                   // 0: OIDB0xD50
	(*OIDB0XD50_ExtSnsFrdData)(nil),     // 1: OIDB0xD50.ExtSnsFrdData
	(*OIDB0XD50_KSingRelationInfo)(nil), // 2: OIDB0xD50.KSingRelationInfo
	(*OIDB0XD50_ReqBody)(nil),           // 3: OIDB0xD50.ReqBody
	(*OIDB0XD50_RspBody)(nil),           // 4: OIDB0xD50.RspBody
}
var file_daemon_contact_pb_oidb_0xd50_proto_depIdxs = []int32{
	1, // 0: OIDB0xD50.RspBody.msg_update_data:type_name -> OIDB0xD50.ExtSnsFrdData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_daemon_contact_pb_oidb_0xd50_proto_init() }
func file_daemon_contact_pb_oidb_0xd50_proto_init() {
	if File_daemon_contact_pb_oidb_0xd50_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB0XD50); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB0XD50_ExtSnsFrdData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB0XD50_KSingRelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB0XD50_ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_contact_pb_oidb_0xd50_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB0XD50_RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_contact_pb_oidb_0xd50_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_contact_pb_oidb_0xd50_proto_goTypes,
		DependencyIndexes: file_daemon_contact_pb_oidb_0xd50_proto_depIdxs,
		MessageInfos:      file_daemon_contact_pb_oidb_0xd50_proto_msgTypes,
	}.Build()
	File_daemon_contact_pb_oidb_0xd50_proto = out.File
	file_daemon_contact_pb_oidb_0xd50_proto_rawDesc = nil
	file_daemon_contact_pb_oidb_0xd50_proto_goTypes = nil
	file_daemon_contact_pb_oidb_0xd50_proto_depIdxs = nil
}
