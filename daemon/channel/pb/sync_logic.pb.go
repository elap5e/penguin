// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/channel/pb/sync_logic.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1298im.group_pro_proto.synclogic.C72451synclogic
//
// SyncLogic is the message type for the C72451synclogic.
type SyncLogic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncLogic) Reset() {
	*x = SyncLogic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic) ProtoMessage() {}

func (x *SyncLogic) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic.ProtoReflect.Descriptor instead.
func (*SyncLogic) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0}
}

// ChannelMsg is the message type for the ChannelMsg.
type SyncLogic_ChannelMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId     uint64        `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`               // guild_id
	ChannelId   uint64        `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`         // channel_id
	Result      uint32        `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                                // result
	RspBeginSeq uint64        `protobuf:"varint,4,opt,name=rsp_begin_seq,json=rspBeginSeq,proto3" json:"rsp_begin_seq,omitempty"` // rsp_begin_seq
	RspEndSeq   uint64        `protobuf:"varint,5,opt,name=rsp_end_seq,json=rspEndSeq,proto3" json:"rsp_end_seq,omitempty"`       // rsp_end_seq
	Msgs        []*Common_Msg `protobuf:"bytes,6,rep,name=msgs,proto3" json:"msgs,omitempty"`                                     // rpt_msgs
}

func (x *SyncLogic_ChannelMsg) Reset() {
	*x = SyncLogic_ChannelMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_ChannelMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_ChannelMsg) ProtoMessage() {}

func (x *SyncLogic_ChannelMsg) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_ChannelMsg.ProtoReflect.Descriptor instead.
func (*SyncLogic_ChannelMsg) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SyncLogic_ChannelMsg) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *SyncLogic_ChannelMsg) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *SyncLogic_ChannelMsg) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SyncLogic_ChannelMsg) GetRspBeginSeq() uint64 {
	if x != nil {
		return x.RspBeginSeq
	}
	return 0
}

func (x *SyncLogic_ChannelMsg) GetRspEndSeq() uint64 {
	if x != nil {
		return x.RspEndSeq
	}
	return 0
}

func (x *SyncLogic_ChannelMsg) GetMsgs() []*Common_Msg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

// ChannelMsgReq is the message type for the ChannelMsgReq.
type SyncLogic_ChannelMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelParam      *SyncLogic_ChannelParam `protobuf:"bytes,1,opt,name=channel_param,json=channelParam,proto3" json:"channel_param,omitempty"`                   // channel_param
	WithVersionFlag   uint32                  `protobuf:"varint,2,opt,name=with_version_flag,json=withVersionFlag,proto3" json:"with_version_flag,omitempty"`       // with_version_flag
	DirectMessageFlag uint32                  `protobuf:"varint,3,opt,name=direct_message_flag,json=directMessageFlag,proto3" json:"direct_message_flag,omitempty"` // direct_message_flag
	PullDirection     uint32                  `protobuf:"varint,4,opt,name=pull_direction,json=pullDirection,proto3" json:"pull_direction,omitempty"`               // pull_direction
}

func (x *SyncLogic_ChannelMsgReq) Reset() {
	*x = SyncLogic_ChannelMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_ChannelMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_ChannelMsgReq) ProtoMessage() {}

func (x *SyncLogic_ChannelMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_ChannelMsgReq.ProtoReflect.Descriptor instead.
func (*SyncLogic_ChannelMsgReq) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SyncLogic_ChannelMsgReq) GetChannelParam() *SyncLogic_ChannelParam {
	if x != nil {
		return x.ChannelParam
	}
	return nil
}

func (x *SyncLogic_ChannelMsgReq) GetWithVersionFlag() uint32 {
	if x != nil {
		return x.WithVersionFlag
	}
	return 0
}

func (x *SyncLogic_ChannelMsgReq) GetDirectMessageFlag() uint32 {
	if x != nil {
		return x.DirectMessageFlag
	}
	return 0
}

func (x *SyncLogic_ChannelMsgReq) GetPullDirection() uint32 {
	if x != nil {
		return x.PullDirection
	}
	return 0
}

// ChannelMsgRsp is the message type for the ChannelMsgRsp.
type SyncLogic_ChannelMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          uint32                `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                            // result
	ErrMsg          []byte                `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`                               // err_msg
	ChannelMsg      *SyncLogic_ChannelMsg `protobuf:"bytes,3,opt,name=channel_msg,json=channelMsg,proto3" json:"channel_msg,omitempty"`                   // channel_msg
	WithVersionFlag uint32                `protobuf:"varint,4,opt,name=with_version_flag,json=withVersionFlag,proto3" json:"with_version_flag,omitempty"` // with_version_flag
	GetMsgTime      uint64                `protobuf:"varint,5,opt,name=get_msg_time,json=getMsgTime,proto3" json:"get_msg_time,omitempty"`                // get_msg_time
}

func (x *SyncLogic_ChannelMsgRsp) Reset() {
	*x = SyncLogic_ChannelMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_ChannelMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_ChannelMsgRsp) ProtoMessage() {}

func (x *SyncLogic_ChannelMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_ChannelMsgRsp.ProtoReflect.Descriptor instead.
func (*SyncLogic_ChannelMsgRsp) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 2}
}

func (x *SyncLogic_ChannelMsgRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SyncLogic_ChannelMsgRsp) GetErrMsg() []byte {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *SyncLogic_ChannelMsgRsp) GetChannelMsg() *SyncLogic_ChannelMsg {
	if x != nil {
		return x.ChannelMsg
	}
	return nil
}

func (x *SyncLogic_ChannelMsgRsp) GetWithVersionFlag() uint32 {
	if x != nil {
		return x.WithVersionFlag
	}
	return 0
}

func (x *SyncLogic_ChannelMsgRsp) GetGetMsgTime() uint64 {
	if x != nil {
		return x.GetMsgTime
	}
	return 0
}

// ChannelNode is the message type for the ChannelNode.
type SyncLogic_ChannelNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId        uint64                `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`                          // channel_id
	MsgSeq           uint64                `protobuf:"varint,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`                                   // msg_seq
	CntSeq           uint64                `protobuf:"varint,3,opt,name=cnt_seq,json=cntSeq,proto3" json:"cnt_seq,omitempty"`                                   // cnt_seq
	MsgTime          uint64                `protobuf:"varint,4,opt,name=msg_time,json=msgTime,proto3" json:"msg_time,omitempty"`                                // msg_time
	MemberReadMsgSeq uint64                `protobuf:"varint,5,opt,name=member_read_msg_seq,json=memberReadMsgSeq,proto3" json:"member_read_msg_seq,omitempty"` // member_read_msg_seq
	MemberReadCntSeq uint64                `protobuf:"varint,6,opt,name=member_read_cnt_seq,json=memberReadCntSeq,proto3" json:"member_read_cnt_seq,omitempty"` // member_read_cnt_seq
	MsgNotifyType    uint32                `protobuf:"varint,7,opt,name=msg_notify_type,json=msgNotifyType,proto3" json:"msg_notify_type,omitempty"`            // msg_notify_type
	ChannelName      []byte                `protobuf:"bytes,8,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`                     // channel_name
	ChannelType      uint32                `protobuf:"varint,9,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`                    // channel_type
	MsgMeta          []byte                `protobuf:"bytes,10,opt,name=msg_meta,json=msgMeta,proto3" json:"msg_meta,omitempty"`                                // msg_meta
	ReadMsgMeta      []byte                `protobuf:"bytes,11,opt,name=read_msg_meta,json=readMsgMeta,proto3" json:"read_msg_meta,omitempty"`                  // read_msg_meta
	EventTime        uint32                `protobuf:"varint,12,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`                         // event_time
	MsgListTab       *SyncLogic_MsgListTab `protobuf:"bytes,13,opt,name=msg_list_tab,json=msgListTab,proto3" json:"msg_list_tab,omitempty"`                     // msg_list_tab
}

func (x *SyncLogic_ChannelNode) Reset() {
	*x = SyncLogic_ChannelNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_ChannelNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_ChannelNode) ProtoMessage() {}

func (x *SyncLogic_ChannelNode) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_ChannelNode.ProtoReflect.Descriptor instead.
func (*SyncLogic_ChannelNode) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 3}
}

func (x *SyncLogic_ChannelNode) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMsgSeq() uint64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetCntSeq() uint64 {
	if x != nil {
		return x.CntSeq
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMsgTime() uint64 {
	if x != nil {
		return x.MsgTime
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMemberReadMsgSeq() uint64 {
	if x != nil {
		return x.MemberReadMsgSeq
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMemberReadCntSeq() uint64 {
	if x != nil {
		return x.MemberReadCntSeq
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMsgNotifyType() uint32 {
	if x != nil {
		return x.MsgNotifyType
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetChannelName() []byte {
	if x != nil {
		return x.ChannelName
	}
	return nil
}

func (x *SyncLogic_ChannelNode) GetChannelType() uint32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMsgMeta() []byte {
	if x != nil {
		return x.MsgMeta
	}
	return nil
}

func (x *SyncLogic_ChannelNode) GetReadMsgMeta() []byte {
	if x != nil {
		return x.ReadMsgMeta
	}
	return nil
}

func (x *SyncLogic_ChannelNode) GetEventTime() uint32 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

func (x *SyncLogic_ChannelNode) GetMsgListTab() *SyncLogic_MsgListTab {
	if x != nil {
		return x.MsgListTab
	}
	return nil
}

// ChannelParam is the message type for the ChannelParam.
type SyncLogic_ChannelParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId     uint64               `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`               // guild_id
	ChannelId   uint64               `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`         // channel_id
	BeginSeq    uint64               `protobuf:"varint,3,opt,name=begin_seq,json=beginSeq,proto3" json:"begin_seq,omitempty"`            // begin_seq
	EndSeq      uint64               `protobuf:"varint,4,opt,name=end_seq,json=endSeq,proto3" json:"end_seq,omitempty"`                  // end_seq
	MsgTime     uint64               `protobuf:"varint,5,opt,name=msg_time,json=msgTime,proto3" json:"msg_time,omitempty"`               // msg_time
	Version     []uint64             `protobuf:"varint,6,rep,packed,name=version,proto3" json:"version,omitempty"`                       // rpt_version
	Seqs        []*SyncLogic_MsgCond `protobuf:"bytes,7,rep,name=seqs,proto3" json:"seqs,omitempty"`                                     // seqs
	MaxSeqLocal uint64               `protobuf:"varint,8,opt,name=max_seq_local,json=maxSeqLocal,proto3" json:"max_seq_local,omitempty"` // max_seq_local
}

func (x *SyncLogic_ChannelParam) Reset() {
	*x = SyncLogic_ChannelParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_ChannelParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_ChannelParam) ProtoMessage() {}

func (x *SyncLogic_ChannelParam) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_ChannelParam.ProtoReflect.Descriptor instead.
func (*SyncLogic_ChannelParam) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 4}
}

func (x *SyncLogic_ChannelParam) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *SyncLogic_ChannelParam) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *SyncLogic_ChannelParam) GetBeginSeq() uint64 {
	if x != nil {
		return x.BeginSeq
	}
	return 0
}

func (x *SyncLogic_ChannelParam) GetEndSeq() uint64 {
	if x != nil {
		return x.EndSeq
	}
	return 0
}

func (x *SyncLogic_ChannelParam) GetMsgTime() uint64 {
	if x != nil {
		return x.MsgTime
	}
	return 0
}

func (x *SyncLogic_ChannelParam) GetVersion() []uint64 {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *SyncLogic_ChannelParam) GetSeqs() []*SyncLogic_MsgCond {
	if x != nil {
		return x.Seqs
	}
	return nil
}

func (x *SyncLogic_ChannelParam) GetMaxSeqLocal() uint64 {
	if x != nil {
		return x.MaxSeqLocal
	}
	return 0
}

// DirectMessageSource is the message type for the DirectMessageSource.
type SyncLogic_DirectMessageSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TinyId     uint64 `protobuf:"varint,1,opt,name=tiny_id,json=tinyId,proto3" json:"tiny_id,omitempty"`             // tiny_id
	GuildId    uint64 `protobuf:"varint,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`          // guild_id
	GuildName  []byte `protobuf:"bytes,3,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`     // guild_name
	MemberName []byte `protobuf:"bytes,4,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`  // member_name
	NickName   []byte `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`        // nick_name
	MemberType uint32 `protobuf:"varint,6,opt,name=member_type,json=memberType,proto3" json:"member_type,omitempty"` // member_type
}

func (x *SyncLogic_DirectMessageSource) Reset() {
	*x = SyncLogic_DirectMessageSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_DirectMessageSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_DirectMessageSource) ProtoMessage() {}

func (x *SyncLogic_DirectMessageSource) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_DirectMessageSource.ProtoReflect.Descriptor instead.
func (*SyncLogic_DirectMessageSource) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 5}
}

func (x *SyncLogic_DirectMessageSource) GetTinyId() uint64 {
	if x != nil {
		return x.TinyId
	}
	return 0
}

func (x *SyncLogic_DirectMessageSource) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *SyncLogic_DirectMessageSource) GetGuildName() []byte {
	if x != nil {
		return x.GuildName
	}
	return nil
}

func (x *SyncLogic_DirectMessageSource) GetMemberName() []byte {
	if x != nil {
		return x.MemberName
	}
	return nil
}

func (x *SyncLogic_DirectMessageSource) GetNickName() []byte {
	if x != nil {
		return x.NickName
	}
	return nil
}

func (x *SyncLogic_DirectMessageSource) GetMemberType() uint32 {
	if x != nil {
		return x.MemberType
	}
	return 0
}

// FeedsEventNode is the message type for the FeedsEventNode.
type SyncLogic_FeedsEventNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid       uint64 `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`                     // is_valid
	UnreadNum     uint64 `protobuf:"varint,2,opt,name=unread_num,json=unreadNum,proto3" json:"unread_num,omitempty"`               // unread_num
	MsgSummary    []byte `protobuf:"bytes,3,opt,name=msg_summary,json=msgSummary,proto3" json:"msg_summary,omitempty"`             // msg_summary
	LastEventTime uint64 `protobuf:"varint,4,opt,name=last_event_time,json=lastEventTime,proto3" json:"last_event_time,omitempty"` // last_event_time
	LastFeedId    []byte `protobuf:"bytes,5,opt,name=last_feed_id,json=lastFeedId,proto3" json:"last_feed_id,omitempty"`           // last_feed_id
}

func (x *SyncLogic_FeedsEventNode) Reset() {
	*x = SyncLogic_FeedsEventNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_FeedsEventNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_FeedsEventNode) ProtoMessage() {}

func (x *SyncLogic_FeedsEventNode) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_FeedsEventNode.ProtoReflect.Descriptor instead.
func (*SyncLogic_FeedsEventNode) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 6}
}

func (x *SyncLogic_FeedsEventNode) GetIsValid() uint64 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *SyncLogic_FeedsEventNode) GetUnreadNum() uint64 {
	if x != nil {
		return x.UnreadNum
	}
	return 0
}

func (x *SyncLogic_FeedsEventNode) GetMsgSummary() []byte {
	if x != nil {
		return x.MsgSummary
	}
	return nil
}

func (x *SyncLogic_FeedsEventNode) GetLastEventTime() uint64 {
	if x != nil {
		return x.LastEventTime
	}
	return 0
}

func (x *SyncLogic_FeedsEventNode) GetLastFeedId() []byte {
	if x != nil {
		return x.LastFeedId
	}
	return nil
}

// FirstViewMsg is the message type for the FirstViewMsg.
type SyncLogic_FirstViewMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushFlag                uint32                  `protobuf:"varint,1,opt,name=push_flag,json=pushFlag,proto3" json:"push_flag,omitempty"`                                                 // push_flag
	Seq                     uint32                  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                                                                           // seq
	GuildNodes              []*SyncLogic_GuildNode  `protobuf:"bytes,3,rep,name=guild_nodes,json=guildNodes,proto3" json:"guild_nodes,omitempty"`                                            // rpt_guild_nodes
	ChannelMsgs             []*SyncLogic_ChannelMsg `protobuf:"bytes,4,rep,name=channel_msgs,json=channelMsgs,proto3" json:"channel_msgs,omitempty"`                                         // rpt_channel_msgs
	GetMsgTime              uint64                  `protobuf:"varint,5,opt,name=get_msg_time,json=getMsgTime,proto3" json:"get_msg_time,omitempty"`                                         // get_msg_time
	DirectMessageGuildNodes []*SyncLogic_GuildNode  `protobuf:"bytes,6,rep,name=direct_message_guild_nodes,json=directMessageGuildNodes,proto3" json:"direct_message_guild_nodes,omitempty"` // direct_message_guild_nodes
}

func (x *SyncLogic_FirstViewMsg) Reset() {
	*x = SyncLogic_FirstViewMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_FirstViewMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_FirstViewMsg) ProtoMessage() {}

func (x *SyncLogic_FirstViewMsg) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_FirstViewMsg.ProtoReflect.Descriptor instead.
func (*SyncLogic_FirstViewMsg) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 7}
}

func (x *SyncLogic_FirstViewMsg) GetPushFlag() uint32 {
	if x != nil {
		return x.PushFlag
	}
	return 0
}

func (x *SyncLogic_FirstViewMsg) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SyncLogic_FirstViewMsg) GetGuildNodes() []*SyncLogic_GuildNode {
	if x != nil {
		return x.GuildNodes
	}
	return nil
}

func (x *SyncLogic_FirstViewMsg) GetChannelMsgs() []*SyncLogic_ChannelMsg {
	if x != nil {
		return x.ChannelMsgs
	}
	return nil
}

func (x *SyncLogic_FirstViewMsg) GetGetMsgTime() uint64 {
	if x != nil {
		return x.GetMsgTime
	}
	return 0
}

func (x *SyncLogic_FirstViewMsg) GetDirectMessageGuildNodes() []*SyncLogic_GuildNode {
	if x != nil {
		return x.DirectMessageGuildNodes
	}
	return nil
}

// FirstViewReq is the message type for the FirstViewReq.
type SyncLogic_FirstViewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastMsgTime       uint64 `protobuf:"varint,1,opt,name=last_msg_time,json=lastMsgTime,proto3" json:"last_msg_time,omitempty"`                   // last_msg_time
	UdcFlag           uint32 `protobuf:"varint,2,opt,name=udc_flag,json=udcFlag,proto3" json:"udc_flag,omitempty"`                                 // udc_flag
	Seq               uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                                                        // seq
	DirectMessageFlag uint32 `protobuf:"varint,4,opt,name=direct_message_flag,json=directMessageFlag,proto3" json:"direct_message_flag,omitempty"` // direct_message_flag
	NoNeedMsg         uint32 `protobuf:"varint,5,opt,name=no_need_msg,json=noNeedMsg,proto3" json:"no_need_msg,omitempty"`                         // no_need_msg
}

func (x *SyncLogic_FirstViewReq) Reset() {
	*x = SyncLogic_FirstViewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_FirstViewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_FirstViewReq) ProtoMessage() {}

func (x *SyncLogic_FirstViewReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_FirstViewReq.ProtoReflect.Descriptor instead.
func (*SyncLogic_FirstViewReq) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 8}
}

func (x *SyncLogic_FirstViewReq) GetLastMsgTime() uint64 {
	if x != nil {
		return x.LastMsgTime
	}
	return 0
}

func (x *SyncLogic_FirstViewReq) GetUdcFlag() uint32 {
	if x != nil {
		return x.UdcFlag
	}
	return 0
}

func (x *SyncLogic_FirstViewReq) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SyncLogic_FirstViewReq) GetDirectMessageFlag() uint32 {
	if x != nil {
		return x.DirectMessageFlag
	}
	return 0
}

func (x *SyncLogic_FirstViewReq) GetNoNeedMsg() uint32 {
	if x != nil {
		return x.NoNeedMsg
	}
	return 0
}

// FirstViewRsp is the message type for the FirstViewRsp.
type SyncLogic_FirstViewRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                  uint32                    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                                                      // result
	ErrMsg                  []byte                    `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`                                                         // err_msg
	Seq                     uint32                    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                                                                            // seq
	UdcFlag                 uint32                    `protobuf:"varint,4,opt,name=udc_flag,json=udcFlag,proto3" json:"udc_flag,omitempty"`                                                     // udc_flag
	GuildCount              uint32                    `protobuf:"varint,5,opt,name=guild_count,json=guildCount,proto3" json:"guild_count,omitempty"`                                            // guild_count
	SelfTinyid              uint64                    `protobuf:"varint,6,opt,name=self_tinyid,json=selfTinyid,proto3" json:"self_tinyid,omitempty"`                                            // self_tinyid
	DirectMessageSwitch     uint32                    `protobuf:"varint,7,opt,name=direct_message_switch,json=directMessageSwitch,proto3" json:"direct_message_switch,omitempty"`               // direct_message_switch
	DirectMessageGuildCount uint32                    `protobuf:"varint,8,opt,name=direct_message_guild_count,json=directMessageGuildCount,proto3" json:"direct_message_guild_count,omitempty"` // direct_message_guild_count
	FeedsEventNode          *SyncLogic_FeedsEventNode `protobuf:"bytes,9,opt,name=feeds_event_node,json=feedsEventNode,proto3" json:"feeds_event_node,omitempty"`                               // feeds_event_node
}

func (x *SyncLogic_FirstViewRsp) Reset() {
	*x = SyncLogic_FirstViewRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_FirstViewRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_FirstViewRsp) ProtoMessage() {}

func (x *SyncLogic_FirstViewRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_FirstViewRsp.ProtoReflect.Descriptor instead.
func (*SyncLogic_FirstViewRsp) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 9}
}

func (x *SyncLogic_FirstViewRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetErrMsg() []byte {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *SyncLogic_FirstViewRsp) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetUdcFlag() uint32 {
	if x != nil {
		return x.UdcFlag
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetGuildCount() uint32 {
	if x != nil {
		return x.GuildCount
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetSelfTinyid() uint64 {
	if x != nil {
		return x.SelfTinyid
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetDirectMessageSwitch() uint32 {
	if x != nil {
		return x.DirectMessageSwitch
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetDirectMessageGuildCount() uint32 {
	if x != nil {
		return x.DirectMessageGuildCount
	}
	return 0
}

func (x *SyncLogic_FirstViewRsp) GetFeedsEventNode() *SyncLogic_FeedsEventNode {
	if x != nil {
		return x.FeedsEventNode
	}
	return nil
}

// GuildNode is the message type for the GuildNode.
type SyncLogic_GuildNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId      uint64                         `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`               // guild_id
	GuildCode    uint64                         `protobuf:"varint,2,opt,name=guild_code,json=guildCode,proto3" json:"guild_code,omitempty"`         // guild_code
	ChannelNodes []*SyncLogic_ChannelNode       `protobuf:"bytes,3,rep,name=channel_nodes,json=channelNodes,proto3" json:"channel_nodes,omitempty"` // rpt_channel_nodes
	GuildName    []byte                         `protobuf:"bytes,4,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`          // guild_name
	PeerSource   *SyncLogic_DirectMessageSource `protobuf:"bytes,5,opt,name=peer_source,json=peerSource,proto3" json:"peer_source,omitempty"`       // peer_source
	HugeFlag     uint32                         `protobuf:"varint,6,opt,name=huge_flag,json=hugeFlag,proto3" json:"huge_flag,omitempty"`            // huge_flag
	FaceSeq      uint64                         `protobuf:"varint,7,opt,name=face_seq,json=faceSeq,proto3" json:"face_seq,omitempty"`               // face_seq
}

func (x *SyncLogic_GuildNode) Reset() {
	*x = SyncLogic_GuildNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_GuildNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_GuildNode) ProtoMessage() {}

func (x *SyncLogic_GuildNode) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_GuildNode.ProtoReflect.Descriptor instead.
func (*SyncLogic_GuildNode) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 10}
}

func (x *SyncLogic_GuildNode) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *SyncLogic_GuildNode) GetGuildCode() uint64 {
	if x != nil {
		return x.GuildCode
	}
	return 0
}

func (x *SyncLogic_GuildNode) GetChannelNodes() []*SyncLogic_ChannelNode {
	if x != nil {
		return x.ChannelNodes
	}
	return nil
}

func (x *SyncLogic_GuildNode) GetGuildName() []byte {
	if x != nil {
		return x.GuildName
	}
	return nil
}

func (x *SyncLogic_GuildNode) GetPeerSource() *SyncLogic_DirectMessageSource {
	if x != nil {
		return x.PeerSource
	}
	return nil
}

func (x *SyncLogic_GuildNode) GetHugeFlag() uint32 {
	if x != nil {
		return x.HugeFlag
	}
	return 0
}

func (x *SyncLogic_GuildNode) GetFaceSeq() uint64 {
	if x != nil {
		return x.FaceSeq
	}
	return 0
}

// MsgCond is the message type for the MsgCond.
type SyncLogic_MsgCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgSeq       uint64 `protobuf:"varint,1,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`                   // msg_seq
	EventVersion uint64 `protobuf:"varint,2,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"` // event_version
}

func (x *SyncLogic_MsgCond) Reset() {
	*x = SyncLogic_MsgCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_MsgCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_MsgCond) ProtoMessage() {}

func (x *SyncLogic_MsgCond) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_MsgCond.ProtoReflect.Descriptor instead.
func (*SyncLogic_MsgCond) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 11}
}

func (x *SyncLogic_MsgCond) GetMsgSeq() uint64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *SyncLogic_MsgCond) GetEventVersion() uint64 {
	if x != nil {
		return x.EventVersion
	}
	return 0
}

// MsgListTab is the message type for the MsgListTab.
type SyncLogic_MsgListTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInList     uint32 `protobuf:"varint,1,opt,name=is_in_list,json=isInList,proto3" json:"is_in_list,omitempty"`           // is_in_list
	TopTimestamp uint64 `protobuf:"varint,2,opt,name=top_timestamp,json=topTimestamp,proto3" json:"top_timestamp,omitempty"` // top_timestamp
}

func (x *SyncLogic_MsgListTab) Reset() {
	*x = SyncLogic_MsgListTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_MsgListTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_MsgListTab) ProtoMessage() {}

func (x *SyncLogic_MsgListTab) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_MsgListTab.ProtoReflect.Descriptor instead.
func (*SyncLogic_MsgListTab) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 12}
}

func (x *SyncLogic_MsgListTab) GetIsInList() uint32 {
	if x != nil {
		return x.IsInList
	}
	return 0
}

func (x *SyncLogic_MsgListTab) GetTopTimestamp() uint64 {
	if x != nil {
		return x.TopTimestamp
	}
	return 0
}

// MultiChannelMsg is the message type for the MultiChannelMsg.
type SyncLogic_MultiChannelMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushFlag    uint32                  `protobuf:"varint,1,opt,name=push_flag,json=pushFlag,proto3" json:"push_flag,omitempty"`         // push_flag
	Seq         uint32                  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                                   // seq
	ChannelMsgs []*SyncLogic_ChannelMsg `protobuf:"bytes,3,rep,name=channel_msgs,json=channelMsgs,proto3" json:"channel_msgs,omitempty"` // rpt_channel_msgs
	GetMsgTime  uint64                  `protobuf:"varint,4,opt,name=get_msg_time,json=getMsgTime,proto3" json:"get_msg_time,omitempty"` // get_msg_time
}

func (x *SyncLogic_MultiChannelMsg) Reset() {
	*x = SyncLogic_MultiChannelMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_MultiChannelMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_MultiChannelMsg) ProtoMessage() {}

func (x *SyncLogic_MultiChannelMsg) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_MultiChannelMsg.ProtoReflect.Descriptor instead.
func (*SyncLogic_MultiChannelMsg) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 13}
}

func (x *SyncLogic_MultiChannelMsg) GetPushFlag() uint32 {
	if x != nil {
		return x.PushFlag
	}
	return 0
}

func (x *SyncLogic_MultiChannelMsg) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SyncLogic_MultiChannelMsg) GetChannelMsgs() []*SyncLogic_ChannelMsg {
	if x != nil {
		return x.ChannelMsgs
	}
	return nil
}

func (x *SyncLogic_MultiChannelMsg) GetGetMsgTime() uint64 {
	if x != nil {
		return x.GetMsgTime
	}
	return 0
}

// MultiChannelMsgReq is the message type for the MultiChannelMsgReq.
type SyncLogic_MultiChannelMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelParams     []*SyncLogic_ChannelParam `protobuf:"bytes,1,rep,name=channel_params,json=channelParams,proto3" json:"channel_params,omitempty"`                // rpt_channel_params
	Seq               uint32                    `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`                                                        // seq
	DirectMessageFlag uint32                    `protobuf:"varint,3,opt,name=direct_message_flag,json=directMessageFlag,proto3" json:"direct_message_flag,omitempty"` // direct_message_flag
}

func (x *SyncLogic_MultiChannelMsgReq) Reset() {
	*x = SyncLogic_MultiChannelMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_MultiChannelMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_MultiChannelMsgReq) ProtoMessage() {}

func (x *SyncLogic_MultiChannelMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_MultiChannelMsgReq.ProtoReflect.Descriptor instead.
func (*SyncLogic_MultiChannelMsgReq) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 14}
}

func (x *SyncLogic_MultiChannelMsgReq) GetChannelParams() []*SyncLogic_ChannelParam {
	if x != nil {
		return x.ChannelParams
	}
	return nil
}

func (x *SyncLogic_MultiChannelMsgReq) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SyncLogic_MultiChannelMsgReq) GetDirectMessageFlag() uint32 {
	if x != nil {
		return x.DirectMessageFlag
	}
	return 0
}

// MultiChannelMsgRsp is the message type for the MultiChannelMsgRsp.
type SyncLogic_MultiChannelMsgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`              // result
	ErrMsg []byte `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"` // err_msg
	Seq    uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                    // seq
}

func (x *SyncLogic_MultiChannelMsgRsp) Reset() {
	*x = SyncLogic_MultiChannelMsgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_MultiChannelMsgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_MultiChannelMsgRsp) ProtoMessage() {}

func (x *SyncLogic_MultiChannelMsgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_MultiChannelMsgRsp.ProtoReflect.Descriptor instead.
func (*SyncLogic_MultiChannelMsgRsp) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 15}
}

func (x *SyncLogic_MultiChannelMsgRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SyncLogic_MultiChannelMsgRsp) GetErrMsg() []byte {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *SyncLogic_MultiChannelMsgRsp) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

// ReqBody is the message type for the ReqBody.
type SyncLogic_ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelParam      *SyncLogic_ChannelParam `protobuf:"bytes,1,opt,name=channel_param,json=channelParam,proto3" json:"channel_param,omitempty"`                   // channel_param
	DirectMessageFlag uint32                  `protobuf:"varint,2,opt,name=direct_message_flag,json=directMessageFlag,proto3" json:"direct_message_flag,omitempty"` // direct_message_flag
}

func (x *SyncLogic_ReqBody) Reset() {
	*x = SyncLogic_ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_ReqBody) ProtoMessage() {}

func (x *SyncLogic_ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_ReqBody.ProtoReflect.Descriptor instead.
func (*SyncLogic_ReqBody) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 16}
}

func (x *SyncLogic_ReqBody) GetChannelParam() *SyncLogic_ChannelParam {
	if x != nil {
		return x.ChannelParam
	}
	return nil
}

func (x *SyncLogic_ReqBody) GetDirectMessageFlag() uint32 {
	if x != nil {
		return x.DirectMessageFlag
	}
	return 0
}

// RspBody is the message type for the RspBody.
type SyncLogic_RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     uint32                `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                          // result
	ErrMsg     []byte                `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`             // err_msg
	ChannelMsg *SyncLogic_ChannelMsg `protobuf:"bytes,3,opt,name=channel_msg,json=channelMsg,proto3" json:"channel_msg,omitempty"` // channel_msg
}

func (x *SyncLogic_RspBody) Reset() {
	*x = SyncLogic_RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLogic_RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLogic_RspBody) ProtoMessage() {}

func (x *SyncLogic_RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_sync_logic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLogic_RspBody.ProtoReflect.Descriptor instead.
func (*SyncLogic_RspBody) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_sync_logic_proto_rawDescGZIP(), []int{0, 17}
}

func (x *SyncLogic_RspBody) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SyncLogic_RspBody) GetErrMsg() []byte {
	if x != nil {
		return x.ErrMsg
	}
	return nil
}

func (x *SyncLogic_RspBody) GetChannelMsg() *SyncLogic_ChannelMsg {
	if x != nil {
		return x.ChannelMsg
	}
	return nil
}

var File_daemon_channel_pb_sync_logic_proto protoreflect.FileDescriptor

var file_daemon_channel_pb_sync_logic_proto_rawDesc = []byte{
	0x0a, 0x22, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2f, 0x70, 0x62, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x1c, 0x0a,
	0x09, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x1a, 0xc3, 0x01, 0x0a, 0x0a, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x72,
	0x73, 0x70, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x72, 0x73, 0x70, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0b, 0x72, 0x73, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x73, 0x70, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73,
	0x1a, 0xd0, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x2a, 0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x77, 0x69, 0x74,
	0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x13,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0xc6, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x2a,
	0x0a, 0x11, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x65,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xdc, 0x03, 0x0a,
	0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x73,
	0x67, 0x53, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x43, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74,
	0x61, 0x62, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x52,
	0x0a, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x1a, 0xff, 0x01, 0x0a, 0x0c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x53, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x65, 0x71, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x6f, 0x6e, 0x64, 0x52, 0x04, 0x73, 0x65, 0x71, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x65, 0x71, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x1a, 0xc7, 0x01,
	0x0a, 0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x69, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x69, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xb5, 0x01, 0x0a, 0x0e, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x49, 0x64, 0x1a,
	0xa3, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x73, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x35, 0x0a, 0x0b, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x73, 0x67, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x73,
	0x12, 0x20, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x51, 0x0a, 0x1a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x17, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0xaf, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x64,
	0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x64,
	0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x6e, 0x65,
	0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f,
	0x4e, 0x65, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0xe4, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x64, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75,
	0x64, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x74, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65,
	0x6c, 0x66, 0x54, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x3b, 0x0a, 0x1a,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x17, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x10, 0x66, 0x65, 0x65,
	0x64, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x9a,
	0x02, 0x0a, 0x09, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x75, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x75, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x53, 0x65, 0x71, 0x1a, 0x47, 0x0a, 0x07, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4f, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x61, 0x62, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73, 0x49, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x9c, 0x01, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x75,
	0x73, 0x68, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73,
	0x67, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x96, 0x01, 0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x2e, 0x0a,
	0x13, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x57, 0x0a,
	0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67,
	0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x1a, 0x77, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x2e, 0x0a, 0x13, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a,
	0x72, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x73, 0x67, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x67, 0x75, 0x69, 0x6e,
	0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_daemon_channel_pb_sync_logic_proto_rawDescOnce sync.Once
	file_daemon_channel_pb_sync_logic_proto_rawDescData = file_daemon_channel_pb_sync_logic_proto_rawDesc
)

func file_daemon_channel_pb_sync_logic_proto_rawDescGZIP() []byte {
	file_daemon_channel_pb_sync_logic_proto_rawDescOnce.Do(func() {
		file_daemon_channel_pb_sync_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_channel_pb_sync_logic_proto_rawDescData)
	})
	return file_daemon_channel_pb_sync_logic_proto_rawDescData
}

var file_daemon_channel_pb_sync_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_daemon_channel_pb_sync_logic_proto_goTypes = []interface{}{
	(*SyncLogic)(nil),                     // 0: SyncLogic
	(*SyncLogic_ChannelMsg)(nil),          // 1: SyncLogic.ChannelMsg
	(*SyncLogic_ChannelMsgReq)(nil),       // 2: SyncLogic.ChannelMsgReq
	(*SyncLogic_ChannelMsgRsp)(nil),       // 3: SyncLogic.ChannelMsgRsp
	(*SyncLogic_ChannelNode)(nil),         // 4: SyncLogic.ChannelNode
	(*SyncLogic_ChannelParam)(nil),        // 5: SyncLogic.ChannelParam
	(*SyncLogic_DirectMessageSource)(nil), // 6: SyncLogic.DirectMessageSource
	(*SyncLogic_FeedsEventNode)(nil),      // 7: SyncLogic.FeedsEventNode
	(*SyncLogic_FirstViewMsg)(nil),        // 8: SyncLogic.FirstViewMsg
	(*SyncLogic_FirstViewReq)(nil),        // 9: SyncLogic.FirstViewReq
	(*SyncLogic_FirstViewRsp)(nil),        // 10: SyncLogic.FirstViewRsp
	(*SyncLogic_GuildNode)(nil),           // 11: SyncLogic.GuildNode
	(*SyncLogic_MsgCond)(nil),             // 12: SyncLogic.MsgCond
	(*SyncLogic_MsgListTab)(nil),          // 13: SyncLogic.MsgListTab
	(*SyncLogic_MultiChannelMsg)(nil),     // 14: SyncLogic.MultiChannelMsg
	(*SyncLogic_MultiChannelMsgReq)(nil),  // 15: SyncLogic.MultiChannelMsgReq
	(*SyncLogic_MultiChannelMsgRsp)(nil),  // 16: SyncLogic.MultiChannelMsgRsp
	(*SyncLogic_ReqBody)(nil),             // 17: SyncLogic.ReqBody
	(*SyncLogic_RspBody)(nil),             // 18: SyncLogic.RspBody
	(*Common_Msg)(nil),                    // 19: Common.Msg
}
var file_daemon_channel_pb_sync_logic_proto_depIdxs = []int32{
	19, // 0: SyncLogic.ChannelMsg.msgs:type_name -> Common.Msg
	5,  // 1: SyncLogic.ChannelMsgReq.channel_param:type_name -> SyncLogic.ChannelParam
	1,  // 2: SyncLogic.ChannelMsgRsp.channel_msg:type_name -> SyncLogic.ChannelMsg
	13, // 3: SyncLogic.ChannelNode.msg_list_tab:type_name -> SyncLogic.MsgListTab
	12, // 4: SyncLogic.ChannelParam.seqs:type_name -> SyncLogic.MsgCond
	11, // 5: SyncLogic.FirstViewMsg.guild_nodes:type_name -> SyncLogic.GuildNode
	1,  // 6: SyncLogic.FirstViewMsg.channel_msgs:type_name -> SyncLogic.ChannelMsg
	11, // 7: SyncLogic.FirstViewMsg.direct_message_guild_nodes:type_name -> SyncLogic.GuildNode
	7,  // 8: SyncLogic.FirstViewRsp.feeds_event_node:type_name -> SyncLogic.FeedsEventNode
	4,  // 9: SyncLogic.GuildNode.channel_nodes:type_name -> SyncLogic.ChannelNode
	6,  // 10: SyncLogic.GuildNode.peer_source:type_name -> SyncLogic.DirectMessageSource
	1,  // 11: SyncLogic.MultiChannelMsg.channel_msgs:type_name -> SyncLogic.ChannelMsg
	5,  // 12: SyncLogic.MultiChannelMsgReq.channel_params:type_name -> SyncLogic.ChannelParam
	5,  // 13: SyncLogic.ReqBody.channel_param:type_name -> SyncLogic.ChannelParam
	1,  // 14: SyncLogic.RspBody.channel_msg:type_name -> SyncLogic.ChannelMsg
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_daemon_channel_pb_sync_logic_proto_init() }
func file_daemon_channel_pb_sync_logic_proto_init() {
	if File_daemon_channel_pb_sync_logic_proto != nil {
		return
	}
	file_daemon_channel_pb_message_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_daemon_channel_pb_sync_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_ChannelMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_ChannelMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_ChannelMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_ChannelNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_ChannelParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_DirectMessageSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_FeedsEventNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_FirstViewMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_FirstViewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_FirstViewRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_GuildNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_MsgCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_MsgListTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_MultiChannelMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_MultiChannelMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_MultiChannelMsgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_sync_logic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLogic_RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_channel_pb_sync_logic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_channel_pb_sync_logic_proto_goTypes,
		DependencyIndexes: file_daemon_channel_pb_sync_logic_proto_depIdxs,
		MessageInfos:      file_daemon_channel_pb_sync_logic_proto_msgTypes,
	}.Build()
	File_daemon_channel_pb_sync_logic_proto = out.File
	file_daemon_channel_pb_sync_logic_proto_rawDesc = nil
	file_daemon_channel_pb_sync_logic_proto_goTypes = nil
	file_daemon_channel_pb_sync_logic_proto_depIdxs = nil
}
