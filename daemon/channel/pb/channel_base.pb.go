// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/channel/pb/channel_base.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: guild.GuildChannelBase
//
// GuildChannelBase is the message type for the GuildChannelBase.
type GuildChannelBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GuildChannelBase) Reset() {
	*x = GuildChannelBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase) ProtoMessage() {}

func (x *GuildChannelBase) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase.ProtoReflect.Descriptor instead.
func (*GuildChannelBase) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0}
}

// ChannelUserInfo is the message type for the ChannelUserInfo.
type GuildChannelBase_ChannelUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIdentity      *GuildChannelBase_ClientIdentity        `protobuf:"bytes,1,opt,name=client_identity,json=clientIdentity,proto3" json:"client_identity,omitempty"`                  // client_identity
	MemberType          int32                                   `protobuf:"varint,2,opt,name=member_type,json=memberType,proto3" json:"member_type,omitempty"`                             // member_type
	Permission          *GuildChannelBase_ChannelUserPermission `protobuf:"bytes,3,opt,name=permission,proto3" json:"permission,omitempty"`                                                // permission
	RoleGroups          []*GuildChannelBase_RoleGroupInfo       `protobuf:"bytes,4,rep,name=role_groups,json=roleGroups,proto3" json:"role_groups,omitempty"`                              // role_groups
	ClientIdentityBytes []byte                                  `protobuf:"bytes,5,opt,name=client_identity_bytes,json=clientIdentityBytes,proto3" json:"client_identity_bytes,omitempty"` // client_identity_bytes
	RoleType            int32                                   `protobuf:"varint,6,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"`                                   // role_type
}

func (x *GuildChannelBase_ChannelUserInfo) Reset() {
	*x = GuildChannelBase_ChannelUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_ChannelUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_ChannelUserInfo) ProtoMessage() {}

func (x *GuildChannelBase_ChannelUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_ChannelUserInfo.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_ChannelUserInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GuildChannelBase_ChannelUserInfo) GetClientIdentity() *GuildChannelBase_ClientIdentity {
	if x != nil {
		return x.ClientIdentity
	}
	return nil
}

func (x *GuildChannelBase_ChannelUserInfo) GetMemberType() int32 {
	if x != nil {
		return x.MemberType
	}
	return 0
}

func (x *GuildChannelBase_ChannelUserInfo) GetPermission() *GuildChannelBase_ChannelUserPermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *GuildChannelBase_ChannelUserInfo) GetRoleGroups() []*GuildChannelBase_RoleGroupInfo {
	if x != nil {
		return x.RoleGroups
	}
	return nil
}

func (x *GuildChannelBase_ChannelUserInfo) GetClientIdentityBytes() []byte {
	if x != nil {
		return x.ClientIdentityBytes
	}
	return nil
}

func (x *GuildChannelBase_ChannelUserInfo) GetRoleType() int32 {
	if x != nil {
		return x.RoleType
	}
	return 0
}

// ChannelUserPermission is the message type for the ChannelUserPermission.
type GuildChannelBase_ChannelUserPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowReadFeed  bool `protobuf:"varint,1,opt,name=allow_read_feed,json=allowReadFeed,proto3" json:"allow_read_feed,omitempty"`    // allow_read_feed
	AllowWriteFeed bool `protobuf:"varint,2,opt,name=allow_write_feed,json=allowWriteFeed,proto3" json:"allow_write_feed,omitempty"` // allow_write_feed
}

func (x *GuildChannelBase_ChannelUserPermission) Reset() {
	*x = GuildChannelBase_ChannelUserPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_ChannelUserPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_ChannelUserPermission) ProtoMessage() {}

func (x *GuildChannelBase_ChannelUserPermission) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_ChannelUserPermission.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_ChannelUserPermission) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GuildChannelBase_ChannelUserPermission) GetAllowReadFeed() bool {
	if x != nil {
		return x.AllowReadFeed
	}
	return false
}

func (x *GuildChannelBase_ChannelUserPermission) GetAllowWriteFeed() bool {
	if x != nil {
		return x.AllowWriteFeed
	}
	return false
}

// ClientIdentity is the message type for the ClientIdentity.
type GuildChannelBase_ClientIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint32 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // client_id
	Desc     string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`                          // desc
}

func (x *GuildChannelBase_ClientIdentity) Reset() {
	*x = GuildChannelBase_ClientIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_ClientIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_ClientIdentity) ProtoMessage() {}

func (x *GuildChannelBase_ClientIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_ClientIdentity.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_ClientIdentity) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GuildChannelBase_ClientIdentity) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *GuildChannelBase_ClientIdentity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// ClientIdentityBytes is the message type for the ClientIdentityBytes.
type GuildChannelBase_ClientIdentityBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId  uint32                       `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // client_id
	Identitys []*GuildChannelBase_Identity `protobuf:"bytes,2,rep,name=identitys,proto3" json:"identitys,omitempty"`                // identitys
}

func (x *GuildChannelBase_ClientIdentityBytes) Reset() {
	*x = GuildChannelBase_ClientIdentityBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_ClientIdentityBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_ClientIdentityBytes) ProtoMessage() {}

func (x *GuildChannelBase_ClientIdentityBytes) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_ClientIdentityBytes.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_ClientIdentityBytes) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 3}
}

func (x *GuildChannelBase_ClientIdentityBytes) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *GuildChannelBase_ClientIdentityBytes) GetIdentitys() []*GuildChannelBase_Identity {
	if x != nil {
		return x.Identitys
	}
	return nil
}

// GuildInfo is the message type for the GuildInfo.
type GuildChannelBase_GuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId  uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`    // guild_id
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          // name
	JoinTime uint64 `protobuf:"varint,3,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"` // join_time
}

func (x *GuildChannelBase_GuildInfo) Reset() {
	*x = GuildChannelBase_GuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_GuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_GuildInfo) ProtoMessage() {}

func (x *GuildChannelBase_GuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_GuildInfo.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_GuildInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 4}
}

func (x *GuildChannelBase_GuildInfo) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildChannelBase_GuildInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildChannelBase_GuildInfo) GetJoinTime() uint64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

// Identity is the message type for the Identity.
type GuildChannelBase_Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`  // type
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // value
}

func (x *GuildChannelBase_Identity) Reset() {
	*x = GuildChannelBase_Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_Identity) ProtoMessage() {}

func (x *GuildChannelBase_Identity) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_Identity.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_Identity) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 5}
}

func (x *GuildChannelBase_Identity) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GuildChannelBase_Identity) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// RoleGroupInfo is the message type for the RoleGroupInfo.
type GuildChannelBase_RoleGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"` // role_id
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                    // name
	Color  uint32 `protobuf:"varint,3,opt,name=color,proto3" json:"color,omitempty"`                 // color
}

func (x *GuildChannelBase_RoleGroupInfo) Reset() {
	*x = GuildChannelBase_RoleGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_RoleGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_RoleGroupInfo) ProtoMessage() {}

func (x *GuildChannelBase_RoleGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_RoleGroupInfo.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_RoleGroupInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 6}
}

func (x *GuildChannelBase_RoleGroupInfo) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GuildChannelBase_RoleGroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildChannelBase_RoleGroupInfo) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

// StChannelInfo is the message type for the StChannelInfo.
type GuildChannelBase_StChannelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign        *GuildChannelBase_StChannelSign `protobuf:"bytes,1,opt,name=sign,proto3" json:"sign,omitempty"`                                   // sign
	Name        string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                   // name
	IconUrl     string                          `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`              // icon_url
	PrivateType int32                           `protobuf:"varint,4,opt,name=private_type,json=privateType,proto3" json:"private_type,omitempty"` // private_type
	GuildName   string                          `protobuf:"bytes,5,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`        // guild_name
}

func (x *GuildChannelBase_StChannelInfo) Reset() {
	*x = GuildChannelBase_StChannelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_StChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_StChannelInfo) ProtoMessage() {}

func (x *GuildChannelBase_StChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_StChannelInfo.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_StChannelInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 7}
}

func (x *GuildChannelBase_StChannelInfo) GetSign() *GuildChannelBase_StChannelSign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *GuildChannelBase_StChannelInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildChannelBase_StChannelInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *GuildChannelBase_StChannelInfo) GetPrivateType() int32 {
	if x != nil {
		return x.PrivateType
	}
	return 0
}

func (x *GuildChannelBase_StChannelInfo) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

// StChannelSign is the message type for the StChannelSign.
type GuildChannelBase_StChannelSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId   uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`       // guild_id
	ChannelId uint64 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` // channel_id
	Url       string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                               // url
}

func (x *GuildChannelBase_StChannelSign) Reset() {
	*x = GuildChannelBase_StChannelSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_StChannelSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_StChannelSign) ProtoMessage() {}

func (x *GuildChannelBase_StChannelSign) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_StChannelSign.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_StChannelSign) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 8}
}

func (x *GuildChannelBase_StChannelSign) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildChannelBase_StChannelSign) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GuildChannelBase_StChannelSign) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// StEmojiReaction is the message type for the StEmojiReaction.
type GuildChannelBase_StEmojiReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId        string `protobuf:"bytes,1,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`                             // emoji_id
	EmojiType      uint64 `protobuf:"varint,2,opt,name=emoji_type,json=emojiType,proto3" json:"emoji_type,omitempty"`                      // emoji_type
	Cnt            uint64 `protobuf:"varint,3,opt,name=cnt,proto3" json:"cnt,omitempty"`                                                   // cnt
	IsClicked      bool   `protobuf:"varint,4,opt,name=is_clicked,json=isClicked,proto3" json:"is_clicked,omitempty"`                      // is_clicked
	IsDefaultEmoji bool   `protobuf:"varint,10001,opt,name=is_default_emoji,json=isDefaultEmoji,proto3" json:"is_default_emoji,omitempty"` // is_default_emoji
}

func (x *GuildChannelBase_StEmojiReaction) Reset() {
	*x = GuildChannelBase_StEmojiReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_StEmojiReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_StEmojiReaction) ProtoMessage() {}

func (x *GuildChannelBase_StEmojiReaction) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_StEmojiReaction.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_StEmojiReaction) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 9}
}

func (x *GuildChannelBase_StEmojiReaction) GetEmojiId() string {
	if x != nil {
		return x.EmojiId
	}
	return ""
}

func (x *GuildChannelBase_StEmojiReaction) GetEmojiType() uint64 {
	if x != nil {
		return x.EmojiType
	}
	return 0
}

func (x *GuildChannelBase_StEmojiReaction) GetCnt() uint64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

func (x *GuildChannelBase_StEmojiReaction) GetIsClicked() bool {
	if x != nil {
		return x.IsClicked
	}
	return false
}

func (x *GuildChannelBase_StEmojiReaction) GetIsDefaultEmoji() bool {
	if x != nil {
		return x.IsDefaultEmoji
	}
	return false
}

// StEmotionReactionInfo is the message type for the StEmotionReactionInfo.
type GuildChannelBase_StEmotionReactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiReactionList []*GuildChannelBase_StEmojiReaction `protobuf:"bytes,2,rep,name=emoji_reaction_list,json=emojiReactionList,proto3" json:"emoji_reaction_list,omitempty"` // emoji_reaction_list
	TotalLikeCount    uint64                              `protobuf:"varint,3,opt,name=total_like_count,json=totalLikeCount,proto3" json:"total_like_count,omitempty"`         // total_like_count
}

func (x *GuildChannelBase_StEmotionReactionInfo) Reset() {
	*x = GuildChannelBase_StEmotionReactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_StEmotionReactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_StEmotionReactionInfo) ProtoMessage() {}

func (x *GuildChannelBase_StEmotionReactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_StEmotionReactionInfo.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_StEmotionReactionInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 10}
}

func (x *GuildChannelBase_StEmotionReactionInfo) GetEmojiReactionList() []*GuildChannelBase_StEmojiReaction {
	if x != nil {
		return x.EmojiReactionList
	}
	return nil
}

func (x *GuildChannelBase_StEmotionReactionInfo) GetTotalLikeCount() uint64 {
	if x != nil {
		return x.TotalLikeCount
	}
	return 0
}

// Thumbnail is the message type for the Thumbnail.
type GuildChannelBase_Thumbnail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`    // url
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` // type
}

func (x *GuildChannelBase_Thumbnail) Reset() {
	*x = GuildChannelBase_Thumbnail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_Thumbnail) ProtoMessage() {}

func (x *GuildChannelBase_Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_Thumbnail.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_Thumbnail) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 11}
}

func (x *GuildChannelBase_Thumbnail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GuildChannelBase_Thumbnail) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// TopFeed is the message type for the TopFeed.
type GuildChannelBase_TopFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId         string                            `protobuf:"bytes,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`                          // feed_id
	UserId         string                            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                          // user_id
	CreateTime     uint64                            `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`             // create_time
	FeedAbstract   *GuildChannelBase_TopFeedAbstract `protobuf:"bytes,4,opt,name=feed_abstract,json=feedAbstract,proto3" json:"feed_abstract,omitempty"`        // feed_abstract
	TopTimestamp   int64                             `protobuf:"varint,5,opt,name=top_timestamp,json=topTimestamp,proto3" json:"top_timestamp,omitempty"`       // top_timestamp
	OperatorTinyid uint64                            `protobuf:"varint,6,opt,name=operator_tinyid,json=operatorTinyid,proto3" json:"operator_tinyid,omitempty"` // operator_tinyid
}

func (x *GuildChannelBase_TopFeed) Reset() {
	*x = GuildChannelBase_TopFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_TopFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_TopFeed) ProtoMessage() {}

func (x *GuildChannelBase_TopFeed) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_TopFeed.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_TopFeed) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 12}
}

func (x *GuildChannelBase_TopFeed) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

func (x *GuildChannelBase_TopFeed) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GuildChannelBase_TopFeed) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GuildChannelBase_TopFeed) GetFeedAbstract() *GuildChannelBase_TopFeedAbstract {
	if x != nil {
		return x.FeedAbstract
	}
	return nil
}

func (x *GuildChannelBase_TopFeed) GetTopTimestamp() int64 {
	if x != nil {
		return x.TopTimestamp
	}
	return 0
}

func (x *GuildChannelBase_TopFeed) GetOperatorTinyid() uint64 {
	if x != nil {
		return x.OperatorTinyid
	}
	return 0
}

// TopFeedAbstract is the message type for the TopFeedAbstract.
type GuildChannelBase_TopFeedAbstract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string                      `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`         // title
	Thumbnail *GuildChannelBase_Thumbnail `protobuf:"bytes,2,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"` // thumbnail
}

func (x *GuildChannelBase_TopFeedAbstract) Reset() {
	*x = GuildChannelBase_TopFeedAbstract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChannelBase_TopFeedAbstract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelBase_TopFeedAbstract) ProtoMessage() {}

func (x *GuildChannelBase_TopFeedAbstract) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_channel_base_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelBase_TopFeedAbstract.ProtoReflect.Descriptor instead.
func (*GuildChannelBase_TopFeedAbstract) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_channel_base_proto_rawDescGZIP(), []int{0, 13}
}

func (x *GuildChannelBase_TopFeedAbstract) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GuildChannelBase_TopFeedAbstract) GetThumbnail() *GuildChannelBase_Thumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

var File_daemon_channel_pb_channel_base_proto protoreflect.FileDescriptor

var file_daemon_channel_pb_channel_base_proto_rawDesc = []byte{
	0x0a, 0x24, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x0e, 0x0a, 0x10, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x1a, 0xd9, 0x02, 0x0a, 0x0f,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x49, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x69, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x61, 0x64, 0x46, 0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x1a, 0x41, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x1a, 0x6c, 0x0a, 0x13, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x73, 0x1a, 0x57, 0x0a, 0x09, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x34, 0x0a, 0x08,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x52, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0xb5, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x5b,
	0x0a, 0x0d, 0x53, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xa7, 0x01, 0x0a, 0x0f,
	0x53, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x91,
	0x4e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x1a, 0x94, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x45, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x51, 0x0a, 0x13, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x11, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x31, 0x0a, 0x09,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a,
	0xf2, 0x01, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x46, 0x65, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65,
	0x65, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x6f, 0x70, 0x46, 0x65, 0x65, 0x64,
	0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x69,
	0x6e, 0x79, 0x69, 0x64, 0x1a, 0x62, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x46, 0x65, 0x65, 0x64, 0x41,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35, 0x65, 0x2f, 0x70, 0x65,
	0x6e, 0x67, 0x75, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_daemon_channel_pb_channel_base_proto_rawDescOnce sync.Once
	file_daemon_channel_pb_channel_base_proto_rawDescData = file_daemon_channel_pb_channel_base_proto_rawDesc
)

func file_daemon_channel_pb_channel_base_proto_rawDescGZIP() []byte {
	file_daemon_channel_pb_channel_base_proto_rawDescOnce.Do(func() {
		file_daemon_channel_pb_channel_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_channel_pb_channel_base_proto_rawDescData)
	})
	return file_daemon_channel_pb_channel_base_proto_rawDescData
}

var file_daemon_channel_pb_channel_base_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_daemon_channel_pb_channel_base_proto_goTypes = []interface{}{
	(*GuildChannelBase)(nil),                       // 0: GuildChannelBase
	(*GuildChannelBase_ChannelUserInfo)(nil),       // 1: GuildChannelBase.ChannelUserInfo
	(*GuildChannelBase_ChannelUserPermission)(nil), // 2: GuildChannelBase.ChannelUserPermission
	(*GuildChannelBase_ClientIdentity)(nil),        // 3: GuildChannelBase.ClientIdentity
	(*GuildChannelBase_ClientIdentityBytes)(nil),   // 4: GuildChannelBase.ClientIdentityBytes
	(*GuildChannelBase_GuildInfo)(nil),             // 5: GuildChannelBase.GuildInfo
	(*GuildChannelBase_Identity)(nil),              // 6: GuildChannelBase.Identity
	(*GuildChannelBase_RoleGroupInfo)(nil),         // 7: GuildChannelBase.RoleGroupInfo
	(*GuildChannelBase_StChannelInfo)(nil),         // 8: GuildChannelBase.StChannelInfo
	(*GuildChannelBase_StChannelSign)(nil),         // 9: GuildChannelBase.StChannelSign
	(*GuildChannelBase_StEmojiReaction)(nil),       // 10: GuildChannelBase.StEmojiReaction
	(*GuildChannelBase_StEmotionReactionInfo)(nil), // 11: GuildChannelBase.StEmotionReactionInfo
	(*GuildChannelBase_Thumbnail)(nil),             // 12: GuildChannelBase.Thumbnail
	(*GuildChannelBase_TopFeed)(nil),               // 13: GuildChannelBase.TopFeed
	(*GuildChannelBase_TopFeedAbstract)(nil),       // 14: GuildChannelBase.TopFeedAbstract
}
var file_daemon_channel_pb_channel_base_proto_depIdxs = []int32{
	3,  // 0: GuildChannelBase.ChannelUserInfo.client_identity:type_name -> GuildChannelBase.ClientIdentity
	2,  // 1: GuildChannelBase.ChannelUserInfo.permission:type_name -> GuildChannelBase.ChannelUserPermission
	7,  // 2: GuildChannelBase.ChannelUserInfo.role_groups:type_name -> GuildChannelBase.RoleGroupInfo
	6,  // 3: GuildChannelBase.ClientIdentityBytes.identitys:type_name -> GuildChannelBase.Identity
	9,  // 4: GuildChannelBase.StChannelInfo.sign:type_name -> GuildChannelBase.StChannelSign
	10, // 5: GuildChannelBase.StEmotionReactionInfo.emoji_reaction_list:type_name -> GuildChannelBase.StEmojiReaction
	14, // 6: GuildChannelBase.TopFeed.feed_abstract:type_name -> GuildChannelBase.TopFeedAbstract
	12, // 7: GuildChannelBase.TopFeedAbstract.thumbnail:type_name -> GuildChannelBase.Thumbnail
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_daemon_channel_pb_channel_base_proto_init() }
func file_daemon_channel_pb_channel_base_proto_init() {
	if File_daemon_channel_pb_channel_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_channel_pb_channel_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_ChannelUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_ChannelUserPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_ClientIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_ClientIdentityBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_GuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_RoleGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_StChannelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_StChannelSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_StEmojiReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_StEmotionReactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_Thumbnail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_TopFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_channel_base_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChannelBase_TopFeedAbstract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_channel_pb_channel_base_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_channel_pb_channel_base_proto_goTypes,
		DependencyIndexes: file_daemon_channel_pb_channel_base_proto_depIdxs,
		MessageInfos:      file_daemon_channel_pb_channel_base_proto_msgTypes,
	}.Build()
	File_daemon_channel_pb_channel_base_proto = out.File
	file_daemon_channel_pb_channel_base_proto_rawDesc = nil
	file_daemon_channel_pb_channel_base_proto_goTypes = nil
	file_daemon_channel_pb_channel_base_proto_depIdxs = nil
}
