// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: daemon/channel/pb/message_common.proto

package pb

import (
	pb "github.com/elap5e/penguin/daemon/message/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: tencent.p1298im.group_pro_proto.common.C72441common
//
// C72441common is the message type for the C72441common.
type Common struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Common) Reset() {
	*x = Common{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common) ProtoMessage() {}

func (x *Common) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common.ProtoReflect.Descriptor instead.
func (*Common) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0}
}

// ContentHead is the message type for the ContentHead.
type Common_ContentHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType uint64 `protobuf:"varint,1,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"` // msg_type
	SubType uint64 `protobuf:"varint,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"` // sub_type
	Random  uint64 `protobuf:"varint,3,opt,name=random,proto3" json:"random,omitempty"`                  // random
	MsgSeq  uint64 `protobuf:"varint,4,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`    // msg_seq
	CntSeq  uint64 `protobuf:"varint,5,opt,name=cnt_seq,json=cntSeq,proto3" json:"cnt_seq,omitempty"`    // cnt_seq
	MsgTime uint64 `protobuf:"varint,6,opt,name=msg_time,json=msgTime,proto3" json:"msg_time,omitempty"` // msg_time
	MsgMeta []byte `protobuf:"bytes,7,opt,name=msg_meta,json=msgMeta,proto3" json:"msg_meta,omitempty"`  // msg_meta
}

func (x *Common_ContentHead) Reset() {
	*x = Common_ContentHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_ContentHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_ContentHead) ProtoMessage() {}

func (x *Common_ContentHead) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_ContentHead.ProtoReflect.Descriptor instead.
func (*Common_ContentHead) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Common_ContentHead) GetMsgType() uint64 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *Common_ContentHead) GetSubType() uint64 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *Common_ContentHead) GetRandom() uint64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *Common_ContentHead) GetMsgSeq() uint64 {
	if x != nil {
		return x.MsgSeq
	}
	return 0
}

func (x *Common_ContentHead) GetCntSeq() uint64 {
	if x != nil {
		return x.CntSeq
	}
	return 0
}

func (x *Common_ContentHead) GetMsgTime() uint64 {
	if x != nil {
		return x.MsgTime
	}
	return 0
}

func (x *Common_ContentHead) GetMsgMeta() []byte {
	if x != nil {
		return x.MsgMeta
	}
	return nil
}

// DirectMessageMember is the message type for the DirectMessageMember.
type Common_DirectMessageMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin             uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                                 // uin
	Tinyid          uint64 `protobuf:"varint,2,opt,name=tinyid,proto3" json:"tinyid,omitempty"`                                           // tinyid
	SourceGuildId   uint64 `protobuf:"varint,3,opt,name=source_guild_id,json=sourceGuildId,proto3" json:"source_guild_id,omitempty"`      // source_guild_id
	SourceGuildName []byte `protobuf:"bytes,4,opt,name=source_guild_name,json=sourceGuildName,proto3" json:"source_guild_name,omitempty"` // source_guild_name
	NickName        []byte `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`                        // nick_name
	MemberName      []byte `protobuf:"bytes,6,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`                  // member_name
	MsgNotifyType   uint32 `protobuf:"varint,7,opt,name=msg_notify_type,json=msgNotifyType,proto3" json:"msg_notify_type,omitempty"`      // msg_notify_type
	MemberType      uint32 `protobuf:"varint,8,opt,name=member_type,json=memberType,proto3" json:"member_type,omitempty"`                 // member_type
}

func (x *Common_DirectMessageMember) Reset() {
	*x = Common_DirectMessageMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_DirectMessageMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_DirectMessageMember) ProtoMessage() {}

func (x *Common_DirectMessageMember) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_DirectMessageMember.ProtoReflect.Descriptor instead.
func (*Common_DirectMessageMember) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Common_DirectMessageMember) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *Common_DirectMessageMember) GetTinyid() uint64 {
	if x != nil {
		return x.Tinyid
	}
	return 0
}

func (x *Common_DirectMessageMember) GetSourceGuildId() uint64 {
	if x != nil {
		return x.SourceGuildId
	}
	return 0
}

func (x *Common_DirectMessageMember) GetSourceGuildName() []byte {
	if x != nil {
		return x.SourceGuildName
	}
	return nil
}

func (x *Common_DirectMessageMember) GetNickName() []byte {
	if x != nil {
		return x.NickName
	}
	return nil
}

func (x *Common_DirectMessageMember) GetMemberName() []byte {
	if x != nil {
		return x.MemberName
	}
	return nil
}

func (x *Common_DirectMessageMember) GetMsgNotifyType() uint32 {
	if x != nil {
		return x.MsgNotifyType
	}
	return 0
}

func (x *Common_DirectMessageMember) GetMemberType() uint32 {
	if x != nil {
		return x.MemberType
	}
	return 0
}

// Event is the message type for the Event.
type Common_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    uint64            `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                  // type
	Version uint64            `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`            // version
	OpInfo  *Common_MsgOpInfo `protobuf:"bytes,3,opt,name=op_info,json=opInfo,proto3" json:"op_info,omitempty"` // op_info
}

func (x *Common_Event) Reset() {
	*x = Common_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_Event) ProtoMessage() {}

func (x *Common_Event) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_Event.ProtoReflect.Descriptor instead.
func (*Common_Event) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Common_Event) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Common_Event) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Common_Event) GetOpInfo() *Common_MsgOpInfo {
	if x != nil {
		return x.OpInfo
	}
	return nil
}

// ExtInfo is the message type for the ExtInfo.
type Common_ExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNick            []byte                        `protobuf:"bytes,1,opt,name=from_nick,json=fromNick,proto3" json:"from_nick,omitempty"`                                     // from_nick
	GuildName           []byte                        `protobuf:"bytes,2,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`                                  // guild_name
	ChannelName         []byte                        `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`                            // channel_name
	Visibility          uint32                        `protobuf:"varint,4,opt,name=visibility,proto3" json:"visibility,omitempty"`                                                // visibility
	NotifyType          uint32                        `protobuf:"varint,5,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`                              // notify_type
	OfflineFlag         uint32                        `protobuf:"varint,6,opt,name=offline_flag,json=offlineFlag,proto3" json:"offline_flag,omitempty"`                           // offline_flag
	NameType            uint32                        `protobuf:"varint,7,opt,name=name_type,json=nameType,proto3" json:"name_type,omitempty"`                                    // name_type
	MemberName          []byte                        `protobuf:"bytes,8,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`                               // bytes_member_name
	Timestamp           uint32                        `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                  // uint32_timestamp
	EventVersion        uint64                        `protobuf:"varint,10,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"`                       // event_version
	Events              []*Common_Event               `protobuf:"bytes,11,rep,name=events,proto3" json:"events,omitempty"`                                                        // events
	FromRoleInfo        *Common_Role                  `protobuf:"bytes,12,opt,name=from_role_info,json=fromRoleInfo,proto3" json:"from_role_info,omitempty"`                      // from_role_info
	FreqLimitInfo       *Common_FreqLimitInfo         `protobuf:"bytes,13,opt,name=freq_limit_info,json=freqLimitInfo,proto3" json:"freq_limit_info,omitempty"`                   // freq_limit_info
	DirectMessageMember []*Common_DirectMessageMember `protobuf:"bytes,14,rep,name=direct_message_member,json=directMessageMember,proto3" json:"direct_message_member,omitempty"` // direct_message_member
	FromAvatar          []byte                        `protobuf:"bytes,15,opt,name=from_avatar,json=fromAvatar,proto3" json:"from_avatar,omitempty"`                              // from_avatar
	S2CMsgInfo          *Common_S2CMsgInfo            `protobuf:"bytes,16,opt,name=s2c_msg_info,json=s2cMsgInfo,proto3" json:"s2c_msg_info,omitempty"`                            // s2c_msg_info
}

func (x *Common_ExtInfo) Reset() {
	*x = Common_ExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_ExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_ExtInfo) ProtoMessage() {}

func (x *Common_ExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_ExtInfo.ProtoReflect.Descriptor instead.
func (*Common_ExtInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Common_ExtInfo) GetFromNick() []byte {
	if x != nil {
		return x.FromNick
	}
	return nil
}

func (x *Common_ExtInfo) GetGuildName() []byte {
	if x != nil {
		return x.GuildName
	}
	return nil
}

func (x *Common_ExtInfo) GetChannelName() []byte {
	if x != nil {
		return x.ChannelName
	}
	return nil
}

func (x *Common_ExtInfo) GetVisibility() uint32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

func (x *Common_ExtInfo) GetNotifyType() uint32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *Common_ExtInfo) GetOfflineFlag() uint32 {
	if x != nil {
		return x.OfflineFlag
	}
	return 0
}

func (x *Common_ExtInfo) GetNameType() uint32 {
	if x != nil {
		return x.NameType
	}
	return 0
}

func (x *Common_ExtInfo) GetMemberName() []byte {
	if x != nil {
		return x.MemberName
	}
	return nil
}

func (x *Common_ExtInfo) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Common_ExtInfo) GetEventVersion() uint64 {
	if x != nil {
		return x.EventVersion
	}
	return 0
}

func (x *Common_ExtInfo) GetEvents() []*Common_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Common_ExtInfo) GetFromRoleInfo() *Common_Role {
	if x != nil {
		return x.FromRoleInfo
	}
	return nil
}

func (x *Common_ExtInfo) GetFreqLimitInfo() *Common_FreqLimitInfo {
	if x != nil {
		return x.FreqLimitInfo
	}
	return nil
}

func (x *Common_ExtInfo) GetDirectMessageMember() []*Common_DirectMessageMember {
	if x != nil {
		return x.DirectMessageMember
	}
	return nil
}

func (x *Common_ExtInfo) GetFromAvatar() []byte {
	if x != nil {
		return x.FromAvatar
	}
	return nil
}

func (x *Common_ExtInfo) GetS2CMsgInfo() *Common_S2CMsgInfo {
	if x != nil {
		return x.S2CMsgInfo
	}
	return nil
}

// FreqLimitInfo is the message type for the FreqLimitInfo.
type Common_FreqLimitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLimited      uint32 `protobuf:"varint,1,opt,name=is_limited,json=isLimited,proto3" json:"is_limited,omitempty"`                // is_limited
	LeftCount      uint32 `protobuf:"varint,2,opt,name=left_count,json=leftCount,proto3" json:"left_count,omitempty"`                // left_count
	LimitTimestamp uint64 `protobuf:"varint,3,opt,name=limit_timestamp,json=limitTimestamp,proto3" json:"limit_timestamp,omitempty"` // limit_timestamp
}

func (x *Common_FreqLimitInfo) Reset() {
	*x = Common_FreqLimitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_FreqLimitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_FreqLimitInfo) ProtoMessage() {}

func (x *Common_FreqLimitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_FreqLimitInfo.ProtoReflect.Descriptor instead.
func (*Common_FreqLimitInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Common_FreqLimitInfo) GetIsLimited() uint32 {
	if x != nil {
		return x.IsLimited
	}
	return 0
}

func (x *Common_FreqLimitInfo) GetLeftCount() uint32 {
	if x != nil {
		return x.LeftCount
	}
	return 0
}

func (x *Common_FreqLimitInfo) GetLimitTimestamp() uint64 {
	if x != nil {
		return x.LimitTimestamp
	}
	return 0
}

// Info is the message type for the Info.
type Common_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  []byte `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`    // name
	Color uint32 `protobuf:"varint,3,opt,name=color,proto3" json:"color,omitempty"` // color
	Hoist uint32 `protobuf:"varint,4,opt,name=hoist,proto3" json:"hoist,omitempty"` // hoist
}

func (x *Common_Info) Reset() {
	*x = Common_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_Info) ProtoMessage() {}

func (x *Common_Info) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_Info.ProtoReflect.Descriptor instead.
func (*Common_Info) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Common_Info) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Common_Info) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *Common_Info) GetHoist() uint32 {
	if x != nil {
		return x.Hoist
	}
	return 0
}

// LoginSig is the message type for the LoginSig.
type Common_LoginSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`   // uint32_type
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`      // bytes_sig
	Appid uint32 `protobuf:"varint,3,opt,name=appid,proto3" json:"appid,omitempty"` // uint32_appid
}

func (x *Common_LoginSig) Reset() {
	*x = Common_LoginSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_LoginSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_LoginSig) ProtoMessage() {}

func (x *Common_LoginSig) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_LoginSig.ProtoReflect.Descriptor instead.
func (*Common_LoginSig) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Common_LoginSig) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Common_LoginSig) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *Common_LoginSig) GetAppid() uint32 {
	if x != nil {
		return x.Appid
	}
	return 0
}

// Meta is the message type for the Meta.
type Common_Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin  uint64           `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`   // from_uin
	LoginSig *Common_LoginSig `protobuf:"bytes,2,opt,name=login_sig,json=loginSig,proto3" json:"login_sig,omitempty"` // login_sig
}

func (x *Common_Meta) Reset() {
	*x = Common_Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_Meta) ProtoMessage() {}

func (x *Common_Meta) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_Meta.ProtoReflect.Descriptor instead.
func (*Common_Meta) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Common_Meta) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *Common_Meta) GetLoginSig() *Common_LoginSig {
	if x != nil {
		return x.LoginSig
	}
	return nil
}

// Msg is the message type for the Msg.
type Common_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Head     *Common_MsgHead       `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`                         // head
	CtrlHead *Common_MsgCtrlHead   `protobuf:"bytes,2,opt,name=ctrl_head,json=ctrlHead,proto3" json:"ctrl_head,omitempty"` // ctrl_head
	Body     *pb.IMMsgBody_MsgBody `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`                         // body
	ExtInfo  *Common_ExtInfo       `protobuf:"bytes,4,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`    // ext_info
}

func (x *Common_Msg) Reset() {
	*x = Common_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_Msg) ProtoMessage() {}

func (x *Common_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_Msg.ProtoReflect.Descriptor instead.
func (*Common_Msg) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Common_Msg) GetHead() *Common_MsgHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Common_Msg) GetCtrlHead() *Common_MsgCtrlHead {
	if x != nil {
		return x.CtrlHead
	}
	return nil
}

func (x *Common_Msg) GetBody() *pb.IMMsgBody_MsgBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Common_Msg) GetExtInfo() *Common_ExtInfo {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// MsgCtrlHead is the message type for the MsgCtrlHead.
type Common_MsgCtrlHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeUin         []uint64                `protobuf:"varint,1,rep,packed,name=include_uin,json=includeUin,proto3" json:"include_uin,omitempty"`                     // include_uin
	ExcludeUin         []uint64                `protobuf:"varint,2,rep,packed,name=exclude_uin,json=excludeUin,proto3" json:"exclude_uin,omitempty"`                     // exclude_uin
	Featureid          []uint64                `protobuf:"varint,3,rep,packed,name=featureid,proto3" json:"featureid,omitempty"`                                         // rpt_featureid
	OfflineFlag        uint32                  `protobuf:"varint,4,opt,name=offline_flag,json=offlineFlag,proto3" json:"offline_flag,omitempty"`                         // offline_flag
	Visibility         uint32                  `protobuf:"varint,5,opt,name=visibility,proto3" json:"visibility,omitempty"`                                              // visibility
	CtrlFlag           uint64                  `protobuf:"varint,6,opt,name=ctrl_flag,json=ctrlFlag,proto3" json:"ctrl_flag,omitempty"`                                  // ctrl_flag
	Events             []*Common_Event         `protobuf:"bytes,7,rep,name=events,proto3" json:"events,omitempty"`                                                       // events
	Level              uint64                  `protobuf:"varint,8,opt,name=level,proto3" json:"level,omitempty"`                                                        // level
	PersonalLevels     []*Common_PersonalLevel `protobuf:"bytes,9,rep,name=personal_levels,json=personalLevels,proto3" json:"personal_levels,omitempty"`                 // personal_levels
	GuildSyncSeq       uint64                  `protobuf:"varint,10,opt,name=guild_sync_seq,json=guildSyncSeq,proto3" json:"guild_sync_seq,omitempty"`                   // guild_sync_seq
	MemberNum          uint32                  `protobuf:"varint,11,opt,name=member_num,json=memberNum,proto3" json:"member_num,omitempty"`                              // member_num
	ChannelType        uint32                  `protobuf:"varint,12,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`                        // channel_type
	PrivateType        uint32                  `protobuf:"varint,13,opt,name=private_type,json=privateType,proto3" json:"private_type,omitempty"`                        // private_type
	FeatureAction      uint32                  `protobuf:"varint,14,opt,name=feature_action,json=featureAction,proto3" json:"feature_action,omitempty"`                  // feature_action
	ChannelVisibleType uint32                  `protobuf:"varint,16,opt,name=channel_visible_type,json=channelVisibleType,proto3" json:"channel_visible_type,omitempty"` // channel_visible_type
	S2CMsgInfo         *Common_S2CMsgInfo      `protobuf:"bytes,17,opt,name=s2c_msg_info,json=s2cMsgInfo,proto3" json:"s2c_msg_info,omitempty"`                          // s2c_msg_info
}

func (x *Common_MsgCtrlHead) Reset() {
	*x = Common_MsgCtrlHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_MsgCtrlHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_MsgCtrlHead) ProtoMessage() {}

func (x *Common_MsgCtrlHead) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_MsgCtrlHead.ProtoReflect.Descriptor instead.
func (*Common_MsgCtrlHead) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Common_MsgCtrlHead) GetIncludeUin() []uint64 {
	if x != nil {
		return x.IncludeUin
	}
	return nil
}

func (x *Common_MsgCtrlHead) GetExcludeUin() []uint64 {
	if x != nil {
		return x.ExcludeUin
	}
	return nil
}

func (x *Common_MsgCtrlHead) GetFeatureid() []uint64 {
	if x != nil {
		return x.Featureid
	}
	return nil
}

func (x *Common_MsgCtrlHead) GetOfflineFlag() uint32 {
	if x != nil {
		return x.OfflineFlag
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetVisibility() uint32 {
	if x != nil {
		return x.Visibility
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetCtrlFlag() uint64 {
	if x != nil {
		return x.CtrlFlag
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetEvents() []*Common_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Common_MsgCtrlHead) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetPersonalLevels() []*Common_PersonalLevel {
	if x != nil {
		return x.PersonalLevels
	}
	return nil
}

func (x *Common_MsgCtrlHead) GetGuildSyncSeq() uint64 {
	if x != nil {
		return x.GuildSyncSeq
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetMemberNum() uint32 {
	if x != nil {
		return x.MemberNum
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetChannelType() uint32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetPrivateType() uint32 {
	if x != nil {
		return x.PrivateType
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetFeatureAction() uint32 {
	if x != nil {
		return x.FeatureAction
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetChannelVisibleType() uint32 {
	if x != nil {
		return x.ChannelVisibleType
	}
	return 0
}

func (x *Common_MsgCtrlHead) GetS2CMsgInfo() *Common_S2CMsgInfo {
	if x != nil {
		return x.S2CMsgInfo
	}
	return nil
}

// MsgHead is the message type for the MsgHead.
type Common_MsgHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutingHead *Common_RoutingHead `protobuf:"bytes,1,opt,name=routing_head,json=routingHead,proto3" json:"routing_head,omitempty"` // routing_head
	ContentHead *Common_ContentHead `protobuf:"bytes,2,opt,name=content_head,json=contentHead,proto3" json:"content_head,omitempty"` // content_head
}

func (x *Common_MsgHead) Reset() {
	*x = Common_MsgHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_MsgHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_MsgHead) ProtoMessage() {}

func (x *Common_MsgHead) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_MsgHead.ProtoReflect.Descriptor instead.
func (*Common_MsgHead) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Common_MsgHead) GetRoutingHead() *Common_RoutingHead {
	if x != nil {
		return x.RoutingHead
	}
	return nil
}

func (x *Common_MsgHead) GetContentHead() *Common_ContentHead {
	if x != nil {
		return x.ContentHead
	}
	return nil
}

// MsgMeta is the message type for the MsgMeta.
type Common_MsgMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtAllSeq      uint64 `protobuf:"varint,1,opt,name=at_all_seq,json=atAllSeq,proto3" json:"at_all_seq,omitempty"`                // at_all_seq
	ChannelBoxSeq uint64 `protobuf:"varint,2,opt,name=channel_box_seq,json=channelBoxSeq,proto3" json:"channel_box_seq,omitempty"` // channel_box_seq
}

func (x *Common_MsgMeta) Reset() {
	*x = Common_MsgMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_MsgMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_MsgMeta) ProtoMessage() {}

func (x *Common_MsgMeta) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_MsgMeta.ProtoReflect.Descriptor instead.
func (*Common_MsgMeta) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Common_MsgMeta) GetAtAllSeq() uint64 {
	if x != nil {
		return x.AtAllSeq
	}
	return 0
}

func (x *Common_MsgMeta) GetChannelBoxSeq() uint64 {
	if x != nil {
		return x.ChannelBoxSeq
	}
	return 0
}

// MsgOpInfo is the message type for the MsgOpInfo.
type Common_MsgOpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorTinyid uint64 `protobuf:"varint,1,opt,name=operator_tinyid,json=operatorTinyid,proto3" json:"operator_tinyid,omitempty"` // operator_tinyid
	OperatorRole   uint64 `protobuf:"varint,2,opt,name=operator_role,json=operatorRole,proto3" json:"operator_role,omitempty"`       // operator_role
	Reason         uint64 `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`                                       // reason
	Timestamp      uint64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                 // timestamp
	AtType         uint64 `protobuf:"varint,5,opt,name=at_type,json=atType,proto3" json:"at_type,omitempty"`                         // at_type
}

func (x *Common_MsgOpInfo) Reset() {
	*x = Common_MsgOpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_MsgOpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_MsgOpInfo) ProtoMessage() {}

func (x *Common_MsgOpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_MsgOpInfo.ProtoReflect.Descriptor instead.
func (*Common_MsgOpInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Common_MsgOpInfo) GetOperatorTinyid() uint64 {
	if x != nil {
		return x.OperatorTinyid
	}
	return 0
}

func (x *Common_MsgOpInfo) GetOperatorRole() uint64 {
	if x != nil {
		return x.OperatorRole
	}
	return 0
}

func (x *Common_MsgOpInfo) GetReason() uint64 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *Common_MsgOpInfo) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Common_MsgOpInfo) GetAtType() uint64 {
	if x != nil {
		return x.AtType
	}
	return 0
}

// PersonalLevel is the message type for the PersonalLevel.
type Common_PersonalLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin uint64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // to_uin
	Level uint64 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`              // level
}

func (x *Common_PersonalLevel) Reset() {
	*x = Common_PersonalLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_PersonalLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_PersonalLevel) ProtoMessage() {}

func (x *Common_PersonalLevel) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_PersonalLevel.ProtoReflect.Descriptor instead.
func (*Common_PersonalLevel) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Common_PersonalLevel) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *Common_PersonalLevel) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

// Role is the message type for the Role.
type Common_Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []byte `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // info
	Flag uint32 `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"` // flag
}

func (x *Common_Role) Reset() {
	*x = Common_Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_Role) ProtoMessage() {}

func (x *Common_Role) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_Role.ProtoReflect.Descriptor instead.
func (*Common_Role) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Common_Role) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Common_Role) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

// RoutingHead is the message type for the RoutingHead.
type Common_RoutingHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuildId           uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`                                 // guild_id
	ChannelId         uint64 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`                           // channel_id
	FromUin           uint64 `protobuf:"varint,3,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                                 // from_uin
	FromTinyid        uint64 `protobuf:"varint,4,opt,name=from_tinyid,json=fromTinyid,proto3" json:"from_tinyid,omitempty"`                        // from_tinyid
	GuildCode         uint64 `protobuf:"varint,5,opt,name=guild_code,json=guildCode,proto3" json:"guild_code,omitempty"`                           // guild_code
	FromAppid         uint64 `protobuf:"varint,6,opt,name=from_appid,json=fromAppid,proto3" json:"from_appid,omitempty"`                           // from_appid
	DirectMessageFlag uint32 `protobuf:"varint,7,opt,name=direct_message_flag,json=directMessageFlag,proto3" json:"direct_message_flag,omitempty"` // direct_message_flag
}

func (x *Common_RoutingHead) Reset() {
	*x = Common_RoutingHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_RoutingHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_RoutingHead) ProtoMessage() {}

func (x *Common_RoutingHead) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_RoutingHead.ProtoReflect.Descriptor instead.
func (*Common_RoutingHead) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Common_RoutingHead) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *Common_RoutingHead) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *Common_RoutingHead) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *Common_RoutingHead) GetFromTinyid() uint64 {
	if x != nil {
		return x.FromTinyid
	}
	return 0
}

func (x *Common_RoutingHead) GetGuildCode() uint64 {
	if x != nil {
		return x.GuildCode
	}
	return 0
}

func (x *Common_RoutingHead) GetFromAppid() uint64 {
	if x != nil {
		return x.FromAppid
	}
	return 0
}

func (x *Common_RoutingHead) GetDirectMessageFlag() uint32 {
	if x != nil {
		return x.DirectMessageFlag
	}
	return 0
}

// S2CMsgInfo is the message type for the S2CMsgInfo.
type Common_S2CMsgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S2CNotifyType uint32 `protobuf:"varint,1,opt,name=s2c_notify_type,json=s2cNotifyType,proto3" json:"s2c_notify_type,omitempty"` // s2c_notify_type
	FromNick      []byte `protobuf:"bytes,2,opt,name=from_nick,json=fromNick,proto3" json:"from_nick,omitempty"`                   // from_nick
	Title         []byte `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                         // title
	Content       []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                     // content
}

func (x *Common_S2CMsgInfo) Reset() {
	*x = Common_S2CMsgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_daemon_channel_pb_message_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common_S2CMsgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common_S2CMsgInfo) ProtoMessage() {}

func (x *Common_S2CMsgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_channel_pb_message_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common_S2CMsgInfo.ProtoReflect.Descriptor instead.
func (*Common_S2CMsgInfo) Descriptor() ([]byte, []int) {
	return file_daemon_channel_pb_message_common_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Common_S2CMsgInfo) GetS2CNotifyType() uint32 {
	if x != nil {
		return x.S2CNotifyType
	}
	return 0
}

func (x *Common_S2CMsgInfo) GetFromNick() []byte {
	if x != nil {
		return x.FromNick
	}
	return nil
}

func (x *Common_S2CMsgInfo) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *Common_S2CMsgInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_daemon_channel_pb_message_common_proto protoreflect.FileDescriptor

var file_daemon_channel_pb_message_common_proto_rawDesc = []byte{
	0x0a, 0x26, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x6f, 0x64, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x19, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0xc3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6e, 0x74, 0x53, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x6d, 0x73, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x9a, 0x02, 0x0a, 0x13, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x73, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x61, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x6f,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x8f, 0x05, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69, 0x63, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x71, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x72, 0x65, 0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4f, 0x0a, 0x15, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x13, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x32, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x32, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73,
	0x32, 0x63, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x76, 0x0a, 0x0d, 0x46, 0x72, 0x65,
	0x71, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x69, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c,
	0x65, 0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x1a, 0x46, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x68, 0x6f, 0x69, 0x73, 0x74, 0x1a, 0x46, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x1a, 0x50, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x53, 0x69, 0x67, 0x1a, 0xb0, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04, 0x68,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x30, 0x0a, 0x09, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67,
	0x43, 0x74, 0x72, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x52, 0x08, 0x63, 0x74, 0x72, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x73, 0x67,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2a, 0x0a, 0x08, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xe4, 0x04, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x43, 0x74,
	0x72, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x72,
	0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x74,
	0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x32, 0x63, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x32, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x73, 0x32, 0x63, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x79, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48,
	0x65, 0x61, 0x64, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x36, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x4f, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x0a, 0x61, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65,
	0x71, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x6f, 0x78,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x42, 0x6f, 0x78, 0x53, 0x65, 0x71, 0x1a, 0xa8, 0x01, 0x0a, 0x09, 0x4d, 0x73,
	0x67, 0x4f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6e, 0x79, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x3c, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x1a, 0x2e, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x1a, 0xf1, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x74, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x69, 0x6e, 0x79, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x81, 0x01, 0x0a, 0x0a, 0x53, 0x32, 0x43, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x32, 0x63, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x73, 0x32, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35, 0x65, 0x2f,
	0x70, 0x65, 0x6e, 0x67, 0x75, 0x69, 0x6e, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_daemon_channel_pb_message_common_proto_rawDescOnce sync.Once
	file_daemon_channel_pb_message_common_proto_rawDescData = file_daemon_channel_pb_message_common_proto_rawDesc
)

func file_daemon_channel_pb_message_common_proto_rawDescGZIP() []byte {
	file_daemon_channel_pb_message_common_proto_rawDescOnce.Do(func() {
		file_daemon_channel_pb_message_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_daemon_channel_pb_message_common_proto_rawDescData)
	})
	return file_daemon_channel_pb_message_common_proto_rawDescData
}

var file_daemon_channel_pb_message_common_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_daemon_channel_pb_message_common_proto_goTypes = []interface{}{
	(*Common)(nil),                     // 0: Common
	(*Common_ContentHead)(nil),         // 1: Common.ContentHead
	(*Common_DirectMessageMember)(nil), // 2: Common.DirectMessageMember
	(*Common_Event)(nil),               // 3: Common.Event
	(*Common_ExtInfo)(nil),             // 4: Common.ExtInfo
	(*Common_FreqLimitInfo)(nil),       // 5: Common.FreqLimitInfo
	(*Common_Info)(nil),                // 6: Common.Info
	(*Common_LoginSig)(nil),            // 7: Common.LoginSig
	(*Common_Meta)(nil),                // 8: Common.Meta
	(*Common_Msg)(nil),                 // 9: Common.Msg
	(*Common_MsgCtrlHead)(nil),         // 10: Common.MsgCtrlHead
	(*Common_MsgHead)(nil),             // 11: Common.MsgHead
	(*Common_MsgMeta)(nil),             // 12: Common.MsgMeta
	(*Common_MsgOpInfo)(nil),           // 13: Common.MsgOpInfo
	(*Common_PersonalLevel)(nil),       // 14: Common.PersonalLevel
	(*Common_Role)(nil),                // 15: Common.Role
	(*Common_RoutingHead)(nil),         // 16: Common.RoutingHead
	(*Common_S2CMsgInfo)(nil),          // 17: Common.S2CMsgInfo
	(*pb.IMMsgBody_MsgBody)(nil),       // 18: IMMsgBody.MsgBody
}
var file_daemon_channel_pb_message_common_proto_depIdxs = []int32{
	13, // 0: Common.Event.op_info:type_name -> Common.MsgOpInfo
	3,  // 1: Common.ExtInfo.events:type_name -> Common.Event
	15, // 2: Common.ExtInfo.from_role_info:type_name -> Common.Role
	5,  // 3: Common.ExtInfo.freq_limit_info:type_name -> Common.FreqLimitInfo
	2,  // 4: Common.ExtInfo.direct_message_member:type_name -> Common.DirectMessageMember
	17, // 5: Common.ExtInfo.s2c_msg_info:type_name -> Common.S2CMsgInfo
	7,  // 6: Common.Meta.login_sig:type_name -> Common.LoginSig
	11, // 7: Common.Msg.head:type_name -> Common.MsgHead
	10, // 8: Common.Msg.ctrl_head:type_name -> Common.MsgCtrlHead
	18, // 9: Common.Msg.body:type_name -> IMMsgBody.MsgBody
	4,  // 10: Common.Msg.ext_info:type_name -> Common.ExtInfo
	3,  // 11: Common.MsgCtrlHead.events:type_name -> Common.Event
	14, // 12: Common.MsgCtrlHead.personal_levels:type_name -> Common.PersonalLevel
	17, // 13: Common.MsgCtrlHead.s2c_msg_info:type_name -> Common.S2CMsgInfo
	16, // 14: Common.MsgHead.routing_head:type_name -> Common.RoutingHead
	1,  // 15: Common.MsgHead.content_head:type_name -> Common.ContentHead
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_daemon_channel_pb_message_common_proto_init() }
func file_daemon_channel_pb_message_common_proto_init() {
	if File_daemon_channel_pb_message_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_daemon_channel_pb_message_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_ContentHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_DirectMessageMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_ExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_FreqLimitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_LoginSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_MsgCtrlHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_MsgHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_MsgMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_MsgOpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_PersonalLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_RoutingHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_daemon_channel_pb_message_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Common_S2CMsgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_daemon_channel_pb_message_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_daemon_channel_pb_message_common_proto_goTypes,
		DependencyIndexes: file_daemon_channel_pb_message_common_proto_depIdxs,
		MessageInfos:      file_daemon_channel_pb_message_common_proto_msgTypes,
	}.Build()
	File_daemon_channel_pb_message_common_proto = out.File
	file_daemon_channel_pb_message_common_proto_rawDesc = nil
	file_daemon_channel_pb_message_common_proto_goTypes = nil
	file_daemon_channel_pb_message_common_proto_depIdxs = nil
}
