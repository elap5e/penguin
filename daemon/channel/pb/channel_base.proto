syntax = "proto3";

option go_package = "github.com/elap5e/penguin/daemon/channel/pb";

// Message generated by proto-message-gen. DO NOT EDIT.
// source: guild.GuildChannelBase
//
// GuildChannelBase is the message type for the GuildChannelBase.
message GuildChannelBase {
  // ChannelUserInfo is the message type for the ChannelUserInfo.
  message ChannelUserInfo {
    ClientIdentity client_identity     = 1; // client_identity
    int32 member_type                  = 2; // member_type
    ChannelUserPermission permission   = 3; // permission
    repeated RoleGroupInfo role_groups = 4; // role_groups
    bytes client_identity_bytes        = 5; // client_identity_bytes
    int32 role_type                    = 6; // role_type
  }
  // ChannelUserPermission is the message type for the ChannelUserPermission.
  message ChannelUserPermission {
    bool allow_read_feed  = 1; // allow_read_feed
    bool allow_write_feed = 2; // allow_write_feed
  }
  // ClientIdentity is the message type for the ClientIdentity.
  message ClientIdentity {
    uint32 client_id = 1; // client_id
    string desc      = 2; // desc
  }
  // ClientIdentityBytes is the message type for the ClientIdentityBytes.
  message ClientIdentityBytes {
    uint32 client_id            = 1; // client_id
    repeated Identity identitys = 2; // identitys
  }
  // GuildInfo is the message type for the GuildInfo.
  message GuildInfo {
    uint64 guild_id  = 1; // guild_id
    string name      = 2; // name
    uint64 join_time = 3; // join_time
  }
  // Identity is the message type for the Identity.
  message Identity {
    uint32 type  = 1; // type
    string value = 2; // value
  }
  // RoleGroupInfo is the message type for the RoleGroupInfo.
  message RoleGroupInfo {
    uint64 role_id = 1; // role_id
    string name    = 2; // name
    uint32 color   = 3; // color
  }
  // StChannelInfo is the message type for the StChannelInfo.
  message StChannelInfo {
    StChannelSign sign = 1; // sign
    string name        = 2; // name
    string icon_url    = 3; // icon_url
    int32 private_type = 4; // private_type
    string guild_name  = 5; // guild_name
  }
  // StChannelSign is the message type for the StChannelSign.
  message StChannelSign {
    uint64 guild_id   = 1; // guild_id
    uint64 channel_id = 2; // channel_id
    string url        = 3; // url
  }
  // StEmojiReaction is the message type for the StEmojiReaction.
  message StEmojiReaction {
    string emoji_id       = 1; // emoji_id
    uint64 emoji_type     = 2; // emoji_type
    uint64 cnt            = 3; // cnt
    bool is_clicked       = 4; // is_clicked
    bool is_default_emoji = 10001; // is_default_emoji
  }
  // StEmotionReactionInfo is the message type for the StEmotionReactionInfo.
  message StEmotionReactionInfo {
    repeated StEmojiReaction emoji_reaction_list = 2; // emoji_reaction_list
    uint64 total_like_count                      = 3; // total_like_count
  }
  // Thumbnail is the message type for the Thumbnail.
  message Thumbnail {
    string url = 1; // url
    int32 type = 2; // type
  }
  // TopFeed is the message type for the TopFeed.
  message TopFeed {
    string feed_id                = 1; // feed_id
    string user_id                = 2; // user_id
    uint64 create_time            = 3; // create_time
    TopFeedAbstract feed_abstract = 4; // feed_abstract
    int64 top_timestamp           = 5; // top_timestamp
    uint64 operator_tinyid        = 6; // operator_tinyid
  }
  // TopFeedAbstract is the message type for the TopFeedAbstract.
  message TopFeedAbstract {
    string title        = 1; // title
    Thumbnail thumbnail = 2; // thumbnail
  }
}
