// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: pkg/net/highway/pb/highway.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message generated by proto-message-gen. DO NOT EDIT.
// source: com.tencent.mobileqq.highway.protocol.CSDataHighwayHead
//
// CSDataHighwayHead is the message type for the CSDataHighwayHead.
type CSDataHighwayHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSDataHighwayHead) Reset() {
	*x = CSDataHighwayHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead) ProtoMessage() {}

func (x *CSDataHighwayHead) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0}
}

// C2CCommonExtendinfo is the message type for the C2CCommonExtendinfo.
type CSDataHighwayHead_C2CCommonExtendinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoId              uint32                              `protobuf:"varint,1,opt,name=info_id,json=infoId,proto3" json:"info_id,omitempty"`                                         // uint32_info_id
	MsgFilterExtendinfo *CSDataHighwayHead_FilterExtendinfo `protobuf:"bytes,2,opt,name=msg_filter_extendinfo,json=msgFilterExtendinfo,proto3" json:"msg_filter_extendinfo,omitempty"` // msg_filter_extendinfo
}

func (x *CSDataHighwayHead_C2CCommonExtendinfo) Reset() {
	*x = CSDataHighwayHead_C2CCommonExtendinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_C2CCommonExtendinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_C2CCommonExtendinfo) ProtoMessage() {}

func (x *CSDataHighwayHead_C2CCommonExtendinfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_C2CCommonExtendinfo.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_C2CCommonExtendinfo) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CSDataHighwayHead_C2CCommonExtendinfo) GetInfoId() uint32 {
	if x != nil {
		return x.InfoId
	}
	return 0
}

func (x *CSDataHighwayHead_C2CCommonExtendinfo) GetMsgFilterExtendinfo() *CSDataHighwayHead_FilterExtendinfo {
	if x != nil {
		return x.MsgFilterExtendinfo
	}
	return nil
}

// DataHighwayHead is the message type for the DataHighwayHead.
type CSDataHighwayHead_DataHighwayHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                         // uint32_version
	Uin        []byte `protobuf:"bytes,2,opt,name=uin,proto3" json:"uin,omitempty"`                                  // bytes_uin
	Command    []byte `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`                          // bytes_command
	Seq        uint32 `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`                                 // uint32_seq
	RetryTimes uint32 `protobuf:"varint,5,opt,name=retry_times,json=retryTimes,proto3" json:"retry_times,omitempty"` // uint32_retry_times
	Appid      uint32 `protobuf:"varint,6,opt,name=appid,proto3" json:"appid,omitempty"`                             // uint32_appid
	Dataflag   uint32 `protobuf:"varint,7,opt,name=dataflag,proto3" json:"dataflag,omitempty"`                       // uint32_dataflag
	CommandId  uint32 `protobuf:"varint,8,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`    // uint32_command_id
	BuildVer   []byte `protobuf:"bytes,9,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`        // bytes_build_ver
	LocaleId   uint32 `protobuf:"varint,10,opt,name=locale_id,json=localeId,proto3" json:"locale_id,omitempty"`      // locale_id
	EnvId      uint32 `protobuf:"varint,11,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`               // env_id
}

func (x *CSDataHighwayHead_DataHighwayHead) Reset() {
	*x = CSDataHighwayHead_DataHighwayHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_DataHighwayHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_DataHighwayHead) ProtoMessage() {}

func (x *CSDataHighwayHead_DataHighwayHead) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_DataHighwayHead.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_DataHighwayHead) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CSDataHighwayHead_DataHighwayHead) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetUin() []byte {
	if x != nil {
		return x.Uin
	}
	return nil
}

func (x *CSDataHighwayHead_DataHighwayHead) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CSDataHighwayHead_DataHighwayHead) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetRetryTimes() uint32 {
	if x != nil {
		return x.RetryTimes
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetAppid() uint32 {
	if x != nil {
		return x.Appid
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetDataflag() uint32 {
	if x != nil {
		return x.Dataflag
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetCommandId() uint32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *CSDataHighwayHead_DataHighwayHead) GetLocaleId() uint32 {
	if x != nil {
		return x.LocaleId
	}
	return 0
}

func (x *CSDataHighwayHead_DataHighwayHead) GetEnvId() uint32 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

// DataHole is the message type for the DataHole.
type CSDataHighwayHead_DataHole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin uint64 `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"` // uint64_begin
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`     // uint64_end
}

func (x *CSDataHighwayHead_DataHole) Reset() {
	*x = CSDataHighwayHead_DataHole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_DataHole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_DataHole) ProtoMessage() {}

func (x *CSDataHighwayHead_DataHole) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_DataHole.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_DataHole) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CSDataHighwayHead_DataHole) GetBegin() uint64 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *CSDataHighwayHead_DataHole) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

// FilterExtendinfo is the message type for the FilterExtendinfo.
type CSDataHighwayHead_FilterExtendinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterFlag            uint32                                `protobuf:"varint,1,opt,name=filter_flag,json=filterFlag,proto3" json:"filter_flag,omitempty"`                                     // uint32_filter_flag
	MsgImageFilterRequest *CSDataHighwayHead_ImageFilterRequest `protobuf:"bytes,2,opt,name=msg_image_filter_request,json=msgImageFilterRequest,proto3" json:"msg_image_filter_request,omitempty"` // msg_image_filter_request
}

func (x *CSDataHighwayHead_FilterExtendinfo) Reset() {
	*x = CSDataHighwayHead_FilterExtendinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_FilterExtendinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_FilterExtendinfo) ProtoMessage() {}

func (x *CSDataHighwayHead_FilterExtendinfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_FilterExtendinfo.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_FilterExtendinfo) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 3}
}

func (x *CSDataHighwayHead_FilterExtendinfo) GetFilterFlag() uint32 {
	if x != nil {
		return x.FilterFlag
	}
	return 0
}

func (x *CSDataHighwayHead_FilterExtendinfo) GetMsgImageFilterRequest() *CSDataHighwayHead_ImageFilterRequest {
	if x != nil {
		return x.MsgImageFilterRequest
	}
	return nil
}

// FilterStyle is the message type for the FilterStyle.
type CSDataHighwayHead_FilterStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StyleId   uint32 `protobuf:"varint,1,opt,name=style_id,json=styleId,proto3" json:"style_id,omitempty"`      // style_id
	StyleName []byte `protobuf:"bytes,2,opt,name=style_name,json=styleName,proto3" json:"style_name,omitempty"` // style_name
}

func (x *CSDataHighwayHead_FilterStyle) Reset() {
	*x = CSDataHighwayHead_FilterStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_FilterStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_FilterStyle) ProtoMessage() {}

func (x *CSDataHighwayHead_FilterStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_FilterStyle.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_FilterStyle) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CSDataHighwayHead_FilterStyle) GetStyleId() uint32 {
	if x != nil {
		return x.StyleId
	}
	return 0
}

func (x *CSDataHighwayHead_FilterStyle) GetStyleName() []byte {
	if x != nil {
		return x.StyleName
	}
	return nil
}

// ImageFilterRequest is the message type for the ImageFilterRequest.
type CSDataHighwayHead_ImageFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId []byte                         `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // session_id
	ClientIp  uint32                         `protobuf:"varint,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`   // client_ip
	Uin       uint64                         `protobuf:"varint,3,opt,name=uin,proto3" json:"uin,omitempty"`                             // uin
	Style     *CSDataHighwayHead_FilterStyle `protobuf:"bytes,4,opt,name=style,proto3" json:"style,omitempty"`                          // style
	Width     uint32                         `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`                         // width
	Height    uint32                         `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`                       // height
	ImageData []byte                         `protobuf:"bytes,7,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // image_data
}

func (x *CSDataHighwayHead_ImageFilterRequest) Reset() {
	*x = CSDataHighwayHead_ImageFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_ImageFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_ImageFilterRequest) ProtoMessage() {}

func (x *CSDataHighwayHead_ImageFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_ImageFilterRequest.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_ImageFilterRequest) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 5}
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetStyle() *CSDataHighwayHead_FilterStyle {
	if x != nil {
		return x.Style
	}
	return nil
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CSDataHighwayHead_ImageFilterRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

// ImageFilterResponse is the message type for the ImageFilterResponse.
type CSDataHighwayHead_ImageFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode   int32  `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`      // ret_code
	ImageData []byte `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // image_data
	CostTime  uint32 `protobuf:"varint,3,opt,name=cost_time,json=costTime,proto3" json:"cost_time,omitempty"`   // cost_time
}

func (x *CSDataHighwayHead_ImageFilterResponse) Reset() {
	*x = CSDataHighwayHead_ImageFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_ImageFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_ImageFilterResponse) ProtoMessage() {}

func (x *CSDataHighwayHead_ImageFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_ImageFilterResponse.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_ImageFilterResponse) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 6}
}

func (x *CSDataHighwayHead_ImageFilterResponse) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *CSDataHighwayHead_ImageFilterResponse) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *CSDataHighwayHead_ImageFilterResponse) GetCostTime() uint32 {
	if x != nil {
		return x.CostTime
	}
	return 0
}

// LoginSigHead is the message type for the LoginSigHead.
type CSDataHighwayHead_LoginSigHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginsigType uint32 `protobuf:"varint,1,opt,name=loginsig_type,json=loginsigType,proto3" json:"loginsig_type,omitempty"` // uint32_loginsig_type
	Loginsig     []byte `protobuf:"bytes,2,opt,name=loginsig,proto3" json:"loginsig,omitempty"`                              // bytes_loginsig
}

func (x *CSDataHighwayHead_LoginSigHead) Reset() {
	*x = CSDataHighwayHead_LoginSigHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_LoginSigHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_LoginSigHead) ProtoMessage() {}

func (x *CSDataHighwayHead_LoginSigHead) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_LoginSigHead.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_LoginSigHead) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 7}
}

func (x *CSDataHighwayHead_LoginSigHead) GetLoginsigType() uint32 {
	if x != nil {
		return x.LoginsigType
	}
	return 0
}

func (x *CSDataHighwayHead_LoginSigHead) GetLoginsig() []byte {
	if x != nil {
		return x.Loginsig
	}
	return nil
}

// NewServiceTicket is the message type for the NewServiceTicket.
type CSDataHighwayHead_NewServiceTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"` // bytes_signature
	Ukey      []byte `protobuf:"bytes,2,opt,name=ukey,proto3" json:"ukey,omitempty"`           // bytes_ukey
}

func (x *CSDataHighwayHead_NewServiceTicket) Reset() {
	*x = CSDataHighwayHead_NewServiceTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_NewServiceTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_NewServiceTicket) ProtoMessage() {}

func (x *CSDataHighwayHead_NewServiceTicket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_NewServiceTicket.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_NewServiceTicket) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 8}
}

func (x *CSDataHighwayHead_NewServiceTicket) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CSDataHighwayHead_NewServiceTicket) GetUkey() []byte {
	if x != nil {
		return x.Ukey
	}
	return nil
}

// PicInfoExt is the message type for the PicInfoExt.
type CSDataHighwayHead_PicInfoExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PicWidth            uint32 `protobuf:"varint,1,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`                                      // uint32_pic_width
	PicHeight           uint32 `protobuf:"varint,2,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`                                   // uint32_pic_height
	PicFlag             uint32 `protobuf:"varint,3,opt,name=pic_flag,json=picFlag,proto3" json:"pic_flag,omitempty"`                                         // uint32_pic_flag
	BusiType            uint32 `protobuf:"varint,4,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`                                      // uint32_busi_type
	SrcTerm             uint32 `protobuf:"varint,5,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`                                         // uint32_src_term
	PlatType            uint32 `protobuf:"varint,6,opt,name=plat_type,json=platType,proto3" json:"plat_type,omitempty"`                                      // uint32_plat_type
	NetType             uint32 `protobuf:"varint,7,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`                                         // uint32_net_type
	ImgType             uint32 `protobuf:"varint,8,opt,name=img_type,json=imgType,proto3" json:"img_type,omitempty"`                                         // uint32_img_type
	AppPicType          uint32 `protobuf:"varint,9,opt,name=app_pic_type,json=appPicType,proto3" json:"app_pic_type,omitempty"`                              // uint32_app_pic_type
	EchoCreatedByServer []byte `protobuf:"bytes,10,opt,name=echo_created_by_server,json=echoCreatedByServer,proto3" json:"echo_created_by_server,omitempty"` // bytes_echo_created_by_server
	QqmeetGuildId       uint64 `protobuf:"varint,11,opt,name=qqmeet_guild_id,json=qqmeetGuildId,proto3" json:"qqmeet_guild_id,omitempty"`                    // uint64_qqmeet_guild_id
	QqmeetChannelId     uint64 `protobuf:"varint,12,opt,name=qqmeet_channel_id,json=qqmeetChannelId,proto3" json:"qqmeet_channel_id,omitempty"`              // uint64_qqmeet_channel_id
}

func (x *CSDataHighwayHead_PicInfoExt) Reset() {
	*x = CSDataHighwayHead_PicInfoExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_PicInfoExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_PicInfoExt) ProtoMessage() {}

func (x *CSDataHighwayHead_PicInfoExt) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_PicInfoExt.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_PicInfoExt) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 9}
}

func (x *CSDataHighwayHead_PicInfoExt) GetPicWidth() uint32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetPicHeight() uint32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetPicFlag() uint32 {
	if x != nil {
		return x.PicFlag
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetBusiType() uint32 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetSrcTerm() uint32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetPlatType() uint32 {
	if x != nil {
		return x.PlatType
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetNetType() uint32 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetImgType() uint32 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetAppPicType() uint32 {
	if x != nil {
		return x.AppPicType
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetEchoCreatedByServer() []byte {
	if x != nil {
		return x.EchoCreatedByServer
	}
	return nil
}

func (x *CSDataHighwayHead_PicInfoExt) GetQqmeetGuildId() uint64 {
	if x != nil {
		return x.QqmeetGuildId
	}
	return 0
}

func (x *CSDataHighwayHead_PicInfoExt) GetQqmeetChannelId() uint64 {
	if x != nil {
		return x.QqmeetChannelId
	}
	return 0
}

// PicRspExtInfo is the message type for the PicRspExtInfo.
type CSDataHighwayHead_PicRspExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skey      []byte `protobuf:"bytes,1,opt,name=skey,proto3" json:"skey,omitempty"`                             // bytes_skey
	ClientIp  uint32 `protobuf:"varint,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`    // uint32_client_ip
	UpOffset  uint64 `protobuf:"varint,3,opt,name=up_offset,json=upOffset,proto3" json:"up_offset,omitempty"`    // uint64_up_offset
	BlockSize uint64 `protobuf:"varint,4,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"` // uint64_block_size
}

func (x *CSDataHighwayHead_PicRspExtInfo) Reset() {
	*x = CSDataHighwayHead_PicRspExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_PicRspExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_PicRspExtInfo) ProtoMessage() {}

func (x *CSDataHighwayHead_PicRspExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_PicRspExtInfo.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_PicRspExtInfo) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 10}
}

func (x *CSDataHighwayHead_PicRspExtInfo) GetSkey() []byte {
	if x != nil {
		return x.Skey
	}
	return nil
}

func (x *CSDataHighwayHead_PicRspExtInfo) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *CSDataHighwayHead_PicRspExtInfo) GetUpOffset() uint64 {
	if x != nil {
		return x.UpOffset
	}
	return 0
}

func (x *CSDataHighwayHead_PicRspExtInfo) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

// QueryHoleRsp is the message type for the QueryHoleRsp.
type CSDataHighwayHead_QueryHoleRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   uint32                        `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                     // uint32_result
	DataHole []*CSDataHighwayHead_DataHole `protobuf:"bytes,2,rep,name=data_hole,json=dataHole,proto3" json:"data_hole,omitempty"`  // rpt_data_hole
	CompFlag bool                          `protobuf:"varint,3,opt,name=comp_flag,json=compFlag,proto3" json:"comp_flag,omitempty"` // bool_comp_flag
}

func (x *CSDataHighwayHead_QueryHoleRsp) Reset() {
	*x = CSDataHighwayHead_QueryHoleRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_QueryHoleRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_QueryHoleRsp) ProtoMessage() {}

func (x *CSDataHighwayHead_QueryHoleRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_QueryHoleRsp.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_QueryHoleRsp) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 11}
}

func (x *CSDataHighwayHead_QueryHoleRsp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CSDataHighwayHead_QueryHoleRsp) GetDataHole() []*CSDataHighwayHead_DataHole {
	if x != nil {
		return x.DataHole
	}
	return nil
}

func (x *CSDataHighwayHead_QueryHoleRsp) GetCompFlag() bool {
	if x != nil {
		return x.CompFlag
	}
	return false
}

// ReqDataHighwayHead is the message type for the ReqDataHighwayHead.
type CSDataHighwayHead_ReqDataHighwayHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBasehead     *CSDataHighwayHead_DataHighwayHead `protobuf:"bytes,1,opt,name=msg_basehead,json=msgBasehead,proto3" json:"msg_basehead,omitempty"`                 // msg_basehead
	MsgSeghead      *CSDataHighwayHead_SegHead         `protobuf:"bytes,2,opt,name=msg_seghead,json=msgSeghead,proto3" json:"msg_seghead,omitempty"`                    // msg_seghead
	ReqExtendinfo   []byte                             `protobuf:"bytes,3,opt,name=req_extendinfo,json=reqExtendinfo,proto3" json:"req_extendinfo,omitempty"`           // bytes_req_extendinfo
	Timestamp       uint64                             `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                       // uint64_timestamp
	MsgLoginSigHead *CSDataHighwayHead_LoginSigHead    `protobuf:"bytes,5,opt,name=msg_login_sig_head,json=msgLoginSigHead,proto3" json:"msg_login_sig_head,omitempty"` // msg_login_sig_head
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) Reset() {
	*x = CSDataHighwayHead_ReqDataHighwayHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_ReqDataHighwayHead) ProtoMessage() {}

func (x *CSDataHighwayHead_ReqDataHighwayHead) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_ReqDataHighwayHead.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_ReqDataHighwayHead) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 12}
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) GetMsgBasehead() *CSDataHighwayHead_DataHighwayHead {
	if x != nil {
		return x.MsgBasehead
	}
	return nil
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) GetMsgSeghead() *CSDataHighwayHead_SegHead {
	if x != nil {
		return x.MsgSeghead
	}
	return nil
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) GetReqExtendinfo() []byte {
	if x != nil {
		return x.ReqExtendinfo
	}
	return nil
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CSDataHighwayHead_ReqDataHighwayHead) GetMsgLoginSigHead() *CSDataHighwayHead_LoginSigHead {
	if x != nil {
		return x.MsgLoginSigHead
	}
	return nil
}

// RspBody is the message type for the RspBody.
type CSDataHighwayHead_RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgQueryHoleRsp *CSDataHighwayHead_QueryHoleRsp `protobuf:"bytes,1,opt,name=msg_query_hole_rsp,json=msgQueryHoleRsp,proto3" json:"msg_query_hole_rsp,omitempty"` // msg_query_hole_rsp
}

func (x *CSDataHighwayHead_RspBody) Reset() {
	*x = CSDataHighwayHead_RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_RspBody) ProtoMessage() {}

func (x *CSDataHighwayHead_RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_RspBody.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_RspBody) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 13}
}

func (x *CSDataHighwayHead_RspBody) GetMsgQueryHoleRsp() *CSDataHighwayHead_QueryHoleRsp {
	if x != nil {
		return x.MsgQueryHoleRsp
	}
	return nil
}

// RspDataHighwayHead is the message type for the RspDataHighwayHead.
type CSDataHighwayHead_RspDataHighwayHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgBasehead   *CSDataHighwayHead_DataHighwayHead `protobuf:"bytes,1,opt,name=msg_basehead,json=msgBasehead,proto3" json:"msg_basehead,omitempty"`       // msg_basehead
	MsgSeghead    *CSDataHighwayHead_SegHead         `protobuf:"bytes,2,opt,name=msg_seghead,json=msgSeghead,proto3" json:"msg_seghead,omitempty"`          // msg_seghead
	ErrorCode     uint32                             `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`            // uint32_error_code
	AllowRetry    uint32                             `protobuf:"varint,4,opt,name=allow_retry,json=allowRetry,proto3" json:"allow_retry,omitempty"`         // uint32_allow_retry
	Cachecost     uint32                             `protobuf:"varint,5,opt,name=cachecost,proto3" json:"cachecost,omitempty"`                             // uint32_cachecost
	Htcost        uint32                             `protobuf:"varint,6,opt,name=htcost,proto3" json:"htcost,omitempty"`                                   // uint32_htcost
	RspExtendinfo []byte                             `protobuf:"bytes,7,opt,name=rsp_extendinfo,json=rspExtendinfo,proto3" json:"rsp_extendinfo,omitempty"` // bytes_rsp_extendinfo
	Timestamp     uint64                             `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // uint64_timestamp
	Range         uint64                             `protobuf:"varint,9,opt,name=range,proto3" json:"range,omitempty"`                                     // uint64_range
	IsReset       uint32                             `protobuf:"varint,10,opt,name=is_reset,json=isReset,proto3" json:"is_reset,omitempty"`                 // uint32_is_reset
}

func (x *CSDataHighwayHead_RspDataHighwayHead) Reset() {
	*x = CSDataHighwayHead_RspDataHighwayHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_RspDataHighwayHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_RspDataHighwayHead) ProtoMessage() {}

func (x *CSDataHighwayHead_RspDataHighwayHead) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_RspDataHighwayHead.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_RspDataHighwayHead) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 14}
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetMsgBasehead() *CSDataHighwayHead_DataHighwayHead {
	if x != nil {
		return x.MsgBasehead
	}
	return nil
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetMsgSeghead() *CSDataHighwayHead_SegHead {
	if x != nil {
		return x.MsgSeghead
	}
	return nil
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetAllowRetry() uint32 {
	if x != nil {
		return x.AllowRetry
	}
	return 0
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetCachecost() uint32 {
	if x != nil {
		return x.Cachecost
	}
	return 0
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetHtcost() uint32 {
	if x != nil {
		return x.Htcost
	}
	return 0
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetRspExtendinfo() []byte {
	if x != nil {
		return x.RspExtendinfo
	}
	return nil
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetRange() uint64 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *CSDataHighwayHead_RspDataHighwayHead) GetIsReset() uint32 {
	if x != nil {
		return x.IsReset
	}
	return 0
}

// SegHead is the message type for the SegHead.
type CSDataHighwayHead_SegHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serviceid     uint32 `protobuf:"varint,1,opt,name=serviceid,proto3" json:"serviceid,omitempty"`                               // uint32_serviceid
	Filesize      uint64 `protobuf:"varint,2,opt,name=filesize,proto3" json:"filesize,omitempty"`                                 // uint64_filesize
	Dataoffset    uint64 `protobuf:"varint,3,opt,name=dataoffset,proto3" json:"dataoffset,omitempty"`                             // uint64_dataoffset
	Datalength    uint32 `protobuf:"varint,4,opt,name=datalength,proto3" json:"datalength,omitempty"`                             // uint32_datalength
	Rtcode        uint32 `protobuf:"varint,5,opt,name=rtcode,proto3" json:"rtcode,omitempty"`                                     // uint32_rtcode
	Serviceticket []byte `protobuf:"bytes,6,opt,name=serviceticket,proto3" json:"serviceticket,omitempty"`                        // bytes_serviceticket
	Flag          uint32 `protobuf:"varint,7,opt,name=flag,proto3" json:"flag,omitempty"`                                         // uint32_flag
	Md5           []byte `protobuf:"bytes,8,opt,name=md5,proto3" json:"md5,omitempty"`                                            // bytes_md5
	FileMd5       []byte `protobuf:"bytes,9,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                     // bytes_file_md5
	CacheAddr     uint32 `protobuf:"varint,10,opt,name=cache_addr,json=cacheAddr,proto3" json:"cache_addr,omitempty"`             // uint32_cache_addr
	QueryTimes    uint32 `protobuf:"varint,11,opt,name=query_times,json=queryTimes,proto3" json:"query_times,omitempty"`          // uint32_query_times
	UpdateCacheip uint32 `protobuf:"varint,12,opt,name=update_cacheip,json=updateCacheip,proto3" json:"update_cacheip,omitempty"` // uint32_update_cacheip
	CachePort     uint32 `protobuf:"varint,13,opt,name=cache_port,json=cachePort,proto3" json:"cache_port,omitempty"`             // uint32_cache_port
}

func (x *CSDataHighwayHead_SegHead) Reset() {
	*x = CSDataHighwayHead_SegHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSDataHighwayHead_SegHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSDataHighwayHead_SegHead) ProtoMessage() {}

func (x *CSDataHighwayHead_SegHead) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_net_highway_pb_highway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSDataHighwayHead_SegHead.ProtoReflect.Descriptor instead.
func (*CSDataHighwayHead_SegHead) Descriptor() ([]byte, []int) {
	return file_pkg_net_highway_pb_highway_proto_rawDescGZIP(), []int{0, 15}
}

func (x *CSDataHighwayHead_SegHead) GetServiceid() uint32 {
	if x != nil {
		return x.Serviceid
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetFilesize() uint64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetDataoffset() uint64 {
	if x != nil {
		return x.Dataoffset
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetDatalength() uint32 {
	if x != nil {
		return x.Datalength
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetRtcode() uint32 {
	if x != nil {
		return x.Rtcode
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetServiceticket() []byte {
	if x != nil {
		return x.Serviceticket
	}
	return nil
}

func (x *CSDataHighwayHead_SegHead) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

func (x *CSDataHighwayHead_SegHead) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *CSDataHighwayHead_SegHead) GetCacheAddr() uint32 {
	if x != nil {
		return x.CacheAddr
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetQueryTimes() uint32 {
	if x != nil {
		return x.QueryTimes
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetUpdateCacheip() uint32 {
	if x != nil {
		return x.UpdateCacheip
	}
	return 0
}

func (x *CSDataHighwayHead_SegHead) GetCachePort() uint32 {
	if x != nil {
		return x.CachePort
	}
	return 0
}

var File_pkg_net_highway_pb_highway_proto protoreflect.FileDescriptor

var file_pkg_net_highway_pb_highway_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6b, 0x67, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x68, 0x69, 0x67, 0x68, 0x77, 0x61,
	0x79, 0x2f, 0x70, 0x62, 0x2f, 0x68, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xfe, 0x17, 0x0a, 0x11, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67,
	0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x87, 0x01, 0x0a, 0x13, 0x43, 0x32, 0x43,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x15, 0x6d, 0x73, 0x67,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x6d,
	0x73, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x66, 0x6f, 0x1a, 0xac, 0x02, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77,
	0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x66, 0x6c, 0x61,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49,
	0x64, 0x1a, 0x32, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x93, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x5e, 0x0a, 0x18, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x15, 0x6d, 0x73, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x0a, 0x0b, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xe5, 0x01, 0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x6c, 0x0a, 0x13,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x4f, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x1a, 0x44, 0x0a, 0x10, 0x4e,
	0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x6b, 0x65,
	0x79, 0x1a, 0x99, 0x03, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x69, 0x63, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x69, 0x63, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x69, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x70, 0x69, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x73, 0x69, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x69, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x65, 0x63, 0x68, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x71, 0x6d,
	0x65, 0x65, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x71, 0x71,
	0x6d, 0x65, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x7c, 0x0a,
	0x0d, 0x50, 0x69, 0x63, 0x52, 0x73, 0x70, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x6b,
	0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x75, 0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x7d, 0x0a, 0x0c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x68, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x6f, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0xab, 0x02, 0x0a, 0x12, 0x52,
	0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x45, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x73, 0x67,
	0x42, 0x61, 0x73, 0x65, 0x68, 0x65, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f,
	0x73, 0x65, 0x67, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61,
	0x64, 0x2e, 0x53, 0x65, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x65,
	0x67, 0x68, 0x65, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4c, 0x0a, 0x12, 0x6d, 0x73,
	0x67, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x53, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x57, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x4c, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48,
	0x65, 0x61, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6c, 0x65, 0x52, 0x73, 0x70,
	0x52, 0x0f, 0x6d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6c, 0x65, 0x52, 0x73,
	0x70, 0x1a, 0x84, 0x03, 0x0a, 0x12, 0x52, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67,
	0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x12, 0x45, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65,
	0x61, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x48, 0x65,
	0x61, 0x64, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x42, 0x61, 0x73, 0x65, 0x68, 0x65, 0x61, 0x64, 0x12,
	0x3b, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x67, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x67,
	0x68, 0x77, 0x61, 0x79, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x65, 0x67, 0x48, 0x65, 0x61, 0x64,
	0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x67, 0x68, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x74,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x74, 0x63, 0x6f,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x73, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x73, 0x70, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x88, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x67,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x64, 0x35, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x69, 0x70, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x69, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x6c, 0x61, 0x70, 0x35, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x67, 0x75, 0x69, 0x6e,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x68, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_net_highway_pb_highway_proto_rawDescOnce sync.Once
	file_pkg_net_highway_pb_highway_proto_rawDescData = file_pkg_net_highway_pb_highway_proto_rawDesc
)

func file_pkg_net_highway_pb_highway_proto_rawDescGZIP() []byte {
	file_pkg_net_highway_pb_highway_proto_rawDescOnce.Do(func() {
		file_pkg_net_highway_pb_highway_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_net_highway_pb_highway_proto_rawDescData)
	})
	return file_pkg_net_highway_pb_highway_proto_rawDescData
}

var file_pkg_net_highway_pb_highway_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_net_highway_pb_highway_proto_goTypes = []interface{}{
	(*CSDataHighwayHead)(nil),                     // 0: CSDataHighwayHead
	(*CSDataHighwayHead_C2CCommonExtendinfo)(nil), // 1: CSDataHighwayHead.C2CCommonExtendinfo
	(*CSDataHighwayHead_DataHighwayHead)(nil),     // 2: CSDataHighwayHead.DataHighwayHead
	(*CSDataHighwayHead_DataHole)(nil),            // 3: CSDataHighwayHead.DataHole
	(*CSDataHighwayHead_FilterExtendinfo)(nil),    // 4: CSDataHighwayHead.FilterExtendinfo
	(*CSDataHighwayHead_FilterStyle)(nil),         // 5: CSDataHighwayHead.FilterStyle
	(*CSDataHighwayHead_ImageFilterRequest)(nil),  // 6: CSDataHighwayHead.ImageFilterRequest
	(*CSDataHighwayHead_ImageFilterResponse)(nil), // 7: CSDataHighwayHead.ImageFilterResponse
	(*CSDataHighwayHead_LoginSigHead)(nil),        // 8: CSDataHighwayHead.LoginSigHead
	(*CSDataHighwayHead_NewServiceTicket)(nil),    // 9: CSDataHighwayHead.NewServiceTicket
	(*CSDataHighwayHead_PicInfoExt)(nil),          // 10: CSDataHighwayHead.PicInfoExt
	(*CSDataHighwayHead_PicRspExtInfo)(nil),       // 11: CSDataHighwayHead.PicRspExtInfo
	(*CSDataHighwayHead_QueryHoleRsp)(nil),        // 12: CSDataHighwayHead.QueryHoleRsp
	(*CSDataHighwayHead_ReqDataHighwayHead)(nil),  // 13: CSDataHighwayHead.ReqDataHighwayHead
	(*CSDataHighwayHead_RspBody)(nil),             // 14: CSDataHighwayHead.RspBody
	(*CSDataHighwayHead_RspDataHighwayHead)(nil),  // 15: CSDataHighwayHead.RspDataHighwayHead
	(*CSDataHighwayHead_SegHead)(nil),             // 16: CSDataHighwayHead.SegHead
}
var file_pkg_net_highway_pb_highway_proto_depIdxs = []int32{
	4,  // 0: CSDataHighwayHead.C2CCommonExtendinfo.msg_filter_extendinfo:type_name -> CSDataHighwayHead.FilterExtendinfo
	6,  // 1: CSDataHighwayHead.FilterExtendinfo.msg_image_filter_request:type_name -> CSDataHighwayHead.ImageFilterRequest
	5,  // 2: CSDataHighwayHead.ImageFilterRequest.style:type_name -> CSDataHighwayHead.FilterStyle
	3,  // 3: CSDataHighwayHead.QueryHoleRsp.data_hole:type_name -> CSDataHighwayHead.DataHole
	2,  // 4: CSDataHighwayHead.ReqDataHighwayHead.msg_basehead:type_name -> CSDataHighwayHead.DataHighwayHead
	16, // 5: CSDataHighwayHead.ReqDataHighwayHead.msg_seghead:type_name -> CSDataHighwayHead.SegHead
	8,  // 6: CSDataHighwayHead.ReqDataHighwayHead.msg_login_sig_head:type_name -> CSDataHighwayHead.LoginSigHead
	12, // 7: CSDataHighwayHead.RspBody.msg_query_hole_rsp:type_name -> CSDataHighwayHead.QueryHoleRsp
	2,  // 8: CSDataHighwayHead.RspDataHighwayHead.msg_basehead:type_name -> CSDataHighwayHead.DataHighwayHead
	16, // 9: CSDataHighwayHead.RspDataHighwayHead.msg_seghead:type_name -> CSDataHighwayHead.SegHead
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pkg_net_highway_pb_highway_proto_init() }
func file_pkg_net_highway_pb_highway_proto_init() {
	if File_pkg_net_highway_pb_highway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_net_highway_pb_highway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_C2CCommonExtendinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_DataHighwayHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_DataHole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_FilterExtendinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_FilterStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_ImageFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_ImageFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_LoginSigHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_NewServiceTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_PicInfoExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_PicRspExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_QueryHoleRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_ReqDataHighwayHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_RspDataHighwayHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_net_highway_pb_highway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSDataHighwayHead_SegHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_net_highway_pb_highway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_net_highway_pb_highway_proto_goTypes,
		DependencyIndexes: file_pkg_net_highway_pb_highway_proto_depIdxs,
		MessageInfos:      file_pkg_net_highway_pb_highway_proto_msgTypes,
	}.Build()
	File_pkg_net_highway_pb_highway_proto = out.File
	file_pkg_net_highway_pb_highway_proto_rawDesc = nil
	file_pkg_net_highway_pb_highway_proto_goTypes = nil
	file_pkg_net_highway_pb_highway_proto_depIdxs = nil
}
